// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: rpc.proto

#include "stdafx.h"
#include "rpc.pb.h"
#include "rpc.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace XiaoyaStore {
namespace Service {

static const char* UrlFrontierItemService_method_names[] = {
  "/XiaoyaStore.Service.UrlFrontierItemService/Init",
  "/XiaoyaStore.Service.UrlFrontierItemService/PushUrls",
  "/XiaoyaStore.Service.UrlFrontierItemService/PushBackUrl",
  "/XiaoyaStore.Service.UrlFrontierItemService/PopUrl",
  "/XiaoyaStore.Service.UrlFrontierItemService/RemoveUrl",
  "/XiaoyaStore.Service.UrlFrontierItemService/GetHostCount",
};

std::unique_ptr< UrlFrontierItemService::Stub> UrlFrontierItemService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< UrlFrontierItemService::Stub> stub(new UrlFrontierItemService::Stub(channel));
  return stub;
}

UrlFrontierItemService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_Init_(UrlFrontierItemService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_PushUrls_(UrlFrontierItemService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_PushBackUrl_(UrlFrontierItemService_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_PopUrl_(UrlFrontierItemService_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_RemoveUrl_(UrlFrontierItemService_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetHostCount_(UrlFrontierItemService_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status UrlFrontierItemService::Stub::Init(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::XiaoyaStore::Service::Result* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_Init_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* UrlFrontierItemService::Stub::AsyncInitRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::Result>::Create(channel_.get(), cq, rpcmethod_Init_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* UrlFrontierItemService::Stub::PrepareAsyncInitRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::Result>::Create(channel_.get(), cq, rpcmethod_Init_, context, request, false);
}

::grpc::Status UrlFrontierItemService::Stub::PushUrls(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::XiaoyaStore::Service::Result* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_PushUrls_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* UrlFrontierItemService::Stub::AsyncPushUrlsRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::Result>::Create(channel_.get(), cq, rpcmethod_PushUrls_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* UrlFrontierItemService::Stub::PrepareAsyncPushUrlsRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::Result>::Create(channel_.get(), cq, rpcmethod_PushUrls_, context, request, false);
}

::grpc::Status UrlFrontierItemService::Stub::PushBackUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPushBackUrl& request, ::XiaoyaStore::Service::Result* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_PushBackUrl_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* UrlFrontierItemService::Stub::AsyncPushBackUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPushBackUrl& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::Result>::Create(channel_.get(), cq, rpcmethod_PushBackUrl_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* UrlFrontierItemService::Stub::PrepareAsyncPushBackUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPushBackUrl& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::Result>::Create(channel_.get(), cq, rpcmethod_PushBackUrl_, context, request, false);
}

::grpc::Status UrlFrontierItemService::Stub::PopUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::XiaoyaStore::Service::ResultWithUrl* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_PopUrl_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrl>* UrlFrontierItemService::Stub::AsyncPopUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithUrl>::Create(channel_.get(), cq, rpcmethod_PopUrl_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrl>* UrlFrontierItemService::Stub::PrepareAsyncPopUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithUrl>::Create(channel_.get(), cq, rpcmethod_PopUrl_, context, request, false);
}

::grpc::Status UrlFrontierItemService::Stub::RemoveUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::XiaoyaStore::Service::Result* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_RemoveUrl_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* UrlFrontierItemService::Stub::AsyncRemoveUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::Result>::Create(channel_.get(), cq, rpcmethod_RemoveUrl_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* UrlFrontierItemService::Stub::PrepareAsyncRemoveUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::Result>::Create(channel_.get(), cq, rpcmethod_RemoveUrl_, context, request, false);
}

::grpc::Status UrlFrontierItemService::Stub::GetHostCount(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHost& request, ::XiaoyaStore::Service::ResultWithCount* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetHostCount_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithCount>* UrlFrontierItemService::Stub::AsyncGetHostCountRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHost& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithCount>::Create(channel_.get(), cq, rpcmethod_GetHostCount_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithCount>* UrlFrontierItemService::Stub::PrepareAsyncGetHostCountRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHost& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithCount>::Create(channel_.get(), cq, rpcmethod_GetHostCount_, context, request, false);
}

UrlFrontierItemService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UrlFrontierItemService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UrlFrontierItemService::Service, ::XiaoyaStore::Service::ArgUrls, ::XiaoyaStore::Service::Result>(
          std::mem_fn(&UrlFrontierItemService::Service::Init), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UrlFrontierItemService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UrlFrontierItemService::Service, ::XiaoyaStore::Service::ArgUrls, ::XiaoyaStore::Service::Result>(
          std::mem_fn(&UrlFrontierItemService::Service::PushUrls), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UrlFrontierItemService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UrlFrontierItemService::Service, ::XiaoyaStore::Service::ArgPushBackUrl, ::XiaoyaStore::Service::Result>(
          std::mem_fn(&UrlFrontierItemService::Service::PushBackUrl), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UrlFrontierItemService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UrlFrontierItemService::Service, ::XiaoyaStore::Service::ArgVoid, ::XiaoyaStore::Service::ResultWithUrl>(
          std::mem_fn(&UrlFrontierItemService::Service::PopUrl), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UrlFrontierItemService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UrlFrontierItemService::Service, ::XiaoyaStore::Service::ArgUrl, ::XiaoyaStore::Service::Result>(
          std::mem_fn(&UrlFrontierItemService::Service::RemoveUrl), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UrlFrontierItemService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UrlFrontierItemService::Service, ::XiaoyaStore::Service::ArgHost, ::XiaoyaStore::Service::ResultWithCount>(
          std::mem_fn(&UrlFrontierItemService::Service::GetHostCount), this)));
}

UrlFrontierItemService::Service::~Service() {
}

::grpc::Status UrlFrontierItemService::Service::Init(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrls* request, ::XiaoyaStore::Service::Result* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status UrlFrontierItemService::Service::PushUrls(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrls* request, ::XiaoyaStore::Service::Result* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status UrlFrontierItemService::Service::PushBackUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgPushBackUrl* request, ::XiaoyaStore::Service::Result* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status UrlFrontierItemService::Service::PopUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgVoid* request, ::XiaoyaStore::Service::ResultWithUrl* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status UrlFrontierItemService::Service::RemoveUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrl* request, ::XiaoyaStore::Service::Result* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status UrlFrontierItemService::Service::GetHostCount(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgHost* request, ::XiaoyaStore::Service::ResultWithCount* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


static const char* UrlFileService_method_names[] = {
  "/XiaoyaStore.Service.UrlFileService/GetUrlFileById",
  "/XiaoyaStore.Service.UrlFileService/GetUrlFileByUrl",
  "/XiaoyaStore.Service.UrlFileService/GetUrlFilesByHash",
  "/XiaoyaStore.Service.UrlFileService/SaveUrlFileAndGetOldId",
  "/XiaoyaStore.Service.UrlFileService/GetCount",
  "/XiaoyaStore.Service.UrlFileService/GetForIndex",
  "/XiaoyaStore.Service.UrlFileService/FinishIndex",
};

std::unique_ptr< UrlFileService::Stub> UrlFileService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< UrlFileService::Stub> stub(new UrlFileService::Stub(channel));
  return stub;
}

UrlFileService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_GetUrlFileById_(UrlFileService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetUrlFileByUrl_(UrlFileService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetUrlFilesByHash_(UrlFileService_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SaveUrlFileAndGetOldId_(UrlFileService_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetCount_(UrlFileService_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetForIndex_(UrlFileService_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_FinishIndex_(UrlFileService_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status UrlFileService::Stub::GetUrlFileById(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::XiaoyaStore::Service::ResultWithUrlFile* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetUrlFileById_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFile>* UrlFileService::Stub::AsyncGetUrlFileByIdRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithUrlFile>::Create(channel_.get(), cq, rpcmethod_GetUrlFileById_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFile>* UrlFileService::Stub::PrepareAsyncGetUrlFileByIdRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithUrlFile>::Create(channel_.get(), cq, rpcmethod_GetUrlFileById_, context, request, false);
}

::grpc::Status UrlFileService::Stub::GetUrlFileByUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::XiaoyaStore::Service::ResultWithUrlFile* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetUrlFileByUrl_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFile>* UrlFileService::Stub::AsyncGetUrlFileByUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithUrlFile>::Create(channel_.get(), cq, rpcmethod_GetUrlFileByUrl_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFile>* UrlFileService::Stub::PrepareAsyncGetUrlFileByUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithUrlFile>::Create(channel_.get(), cq, rpcmethod_GetUrlFileByUrl_, context, request, false);
}

::grpc::Status UrlFileService::Stub::GetUrlFilesByHash(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHash& request, ::XiaoyaStore::Service::ResultWithUrlFiles* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetUrlFilesByHash_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFiles>* UrlFileService::Stub::AsyncGetUrlFilesByHashRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHash& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithUrlFiles>::Create(channel_.get(), cq, rpcmethod_GetUrlFilesByHash_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFiles>* UrlFileService::Stub::PrepareAsyncGetUrlFilesByHashRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHash& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithUrlFiles>::Create(channel_.get(), cq, rpcmethod_GetUrlFilesByHash_, context, request, false);
}

::grpc::Status UrlFileService::Stub::SaveUrlFileAndGetOldId(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrlFile& request, ::XiaoyaStore::Service::ResultWithUrlFileAndOldId* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SaveUrlFileAndGetOldId_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>* UrlFileService::Stub::AsyncSaveUrlFileAndGetOldIdRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrlFile& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>::Create(channel_.get(), cq, rpcmethod_SaveUrlFileAndGetOldId_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>* UrlFileService::Stub::PrepareAsyncSaveUrlFileAndGetOldIdRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrlFile& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>::Create(channel_.get(), cq, rpcmethod_SaveUrlFileAndGetOldId_, context, request, false);
}

::grpc::Status UrlFileService::Stub::GetCount(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::XiaoyaStore::Service::ResultWithCount* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetCount_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithCount>* UrlFileService::Stub::AsyncGetCountRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithCount>::Create(channel_.get(), cq, rpcmethod_GetCount_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithCount>* UrlFileService::Stub::PrepareAsyncGetCountRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithCount>::Create(channel_.get(), cq, rpcmethod_GetCount_, context, request, false);
}

::grpc::Status UrlFileService::Stub::GetForIndex(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::XiaoyaStore::Service::ResultWithUrlFile* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetForIndex_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFile>* UrlFileService::Stub::AsyncGetForIndexRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithUrlFile>::Create(channel_.get(), cq, rpcmethod_GetForIndex_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFile>* UrlFileService::Stub::PrepareAsyncGetForIndexRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithUrlFile>::Create(channel_.get(), cq, rpcmethod_GetForIndex_, context, request, false);
}

::grpc::Status UrlFileService::Stub::FinishIndex(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::XiaoyaStore::Service::Result* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_FinishIndex_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* UrlFileService::Stub::AsyncFinishIndexRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::Result>::Create(channel_.get(), cq, rpcmethod_FinishIndex_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* UrlFileService::Stub::PrepareAsyncFinishIndexRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::Result>::Create(channel_.get(), cq, rpcmethod_FinishIndex_, context, request, false);
}

UrlFileService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UrlFileService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UrlFileService::Service, ::XiaoyaStore::Service::ArgId, ::XiaoyaStore::Service::ResultWithUrlFile>(
          std::mem_fn(&UrlFileService::Service::GetUrlFileById), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UrlFileService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UrlFileService::Service, ::XiaoyaStore::Service::ArgUrl, ::XiaoyaStore::Service::ResultWithUrlFile>(
          std::mem_fn(&UrlFileService::Service::GetUrlFileByUrl), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UrlFileService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UrlFileService::Service, ::XiaoyaStore::Service::ArgHash, ::XiaoyaStore::Service::ResultWithUrlFiles>(
          std::mem_fn(&UrlFileService::Service::GetUrlFilesByHash), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UrlFileService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UrlFileService::Service, ::XiaoyaStore::Service::ArgUrlFile, ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>(
          std::mem_fn(&UrlFileService::Service::SaveUrlFileAndGetOldId), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UrlFileService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UrlFileService::Service, ::XiaoyaStore::Service::ArgVoid, ::XiaoyaStore::Service::ResultWithCount>(
          std::mem_fn(&UrlFileService::Service::GetCount), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UrlFileService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UrlFileService::Service, ::XiaoyaStore::Service::ArgVoid, ::XiaoyaStore::Service::ResultWithUrlFile>(
          std::mem_fn(&UrlFileService::Service::GetForIndex), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      UrlFileService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< UrlFileService::Service, ::XiaoyaStore::Service::ArgUrl, ::XiaoyaStore::Service::Result>(
          std::mem_fn(&UrlFileService::Service::FinishIndex), this)));
}

UrlFileService::Service::~Service() {
}

::grpc::Status UrlFileService::Service::GetUrlFileById(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgId* request, ::XiaoyaStore::Service::ResultWithUrlFile* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status UrlFileService::Service::GetUrlFileByUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrl* request, ::XiaoyaStore::Service::ResultWithUrlFile* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status UrlFileService::Service::GetUrlFilesByHash(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgHash* request, ::XiaoyaStore::Service::ResultWithUrlFiles* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status UrlFileService::Service::SaveUrlFileAndGetOldId(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrlFile* request, ::XiaoyaStore::Service::ResultWithUrlFileAndOldId* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status UrlFileService::Service::GetCount(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgVoid* request, ::XiaoyaStore::Service::ResultWithCount* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status UrlFileService::Service::GetForIndex(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgVoid* request, ::XiaoyaStore::Service::ResultWithUrlFile* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status UrlFileService::Service::FinishIndex(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrl* request, ::XiaoyaStore::Service::Result* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


static const char* PostingListService_method_names[] = {
  "/XiaoyaStore.Service.PostingListService/SavePostingList",
  "/XiaoyaStore.Service.PostingListService/GetPostingList",
};

std::unique_ptr< PostingListService::Stub> PostingListService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< PostingListService::Stub> stub(new PostingListService::Stub(channel));
  return stub;
}

PostingListService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_SavePostingList_(PostingListService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetPostingList_(PostingListService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status PostingListService::Stub::SavePostingList(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPostingList& request, ::XiaoyaStore::Service::Result* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SavePostingList_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* PostingListService::Stub::AsyncSavePostingListRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPostingList& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::Result>::Create(channel_.get(), cq, rpcmethod_SavePostingList_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* PostingListService::Stub::PrepareAsyncSavePostingListRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPostingList& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::Result>::Create(channel_.get(), cq, rpcmethod_SavePostingList_, context, request, false);
}

::grpc::Status PostingListService::Stub::GetPostingList(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgWord& request, ::XiaoyaStore::Service::ResultWithPostingList* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetPostingList_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithPostingList>* PostingListService::Stub::AsyncGetPostingListRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgWord& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithPostingList>::Create(channel_.get(), cq, rpcmethod_GetPostingList_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithPostingList>* PostingListService::Stub::PrepareAsyncGetPostingListRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgWord& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithPostingList>::Create(channel_.get(), cq, rpcmethod_GetPostingList_, context, request, false);
}

PostingListService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PostingListService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PostingListService::Service, ::XiaoyaStore::Service::ArgPostingList, ::XiaoyaStore::Service::Result>(
          std::mem_fn(&PostingListService::Service::SavePostingList), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      PostingListService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< PostingListService::Service, ::XiaoyaStore::Service::ArgWord, ::XiaoyaStore::Service::ResultWithPostingList>(
          std::mem_fn(&PostingListService::Service::GetPostingList), this)));
}

PostingListService::Service::~Service() {
}

::grpc::Status PostingListService::Service::SavePostingList(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgPostingList* request, ::XiaoyaStore::Service::Result* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status PostingListService::Service::GetPostingList(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgWord* request, ::XiaoyaStore::Service::ResultWithPostingList* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


static const char* LinkService_method_names[] = {
  "/XiaoyaStore.Service.LinkService/SaveLinksOfUrlFile",
  "/XiaoyaStore.Service.LinkService/GetLinkById",
  "/XiaoyaStore.Service.LinkService/GetLinksByUrl",
};

std::unique_ptr< LinkService::Stub> LinkService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< LinkService::Stub> stub(new LinkService::Stub(channel));
  return stub;
}

LinkService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_SaveLinksOfUrlFile_(LinkService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetLinkById_(LinkService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetLinksByUrl_(LinkService_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status LinkService::Stub::SaveLinksOfUrlFile(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgSaveLinkOfUrlFile& request, ::XiaoyaStore::Service::Result* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SaveLinksOfUrlFile_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* LinkService::Stub::AsyncSaveLinksOfUrlFileRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgSaveLinkOfUrlFile& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::Result>::Create(channel_.get(), cq, rpcmethod_SaveLinksOfUrlFile_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* LinkService::Stub::PrepareAsyncSaveLinksOfUrlFileRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgSaveLinkOfUrlFile& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::Result>::Create(channel_.get(), cq, rpcmethod_SaveLinksOfUrlFile_, context, request, false);
}

::grpc::Status LinkService::Stub::GetLinkById(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::XiaoyaStore::Service::ResultWithLink* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetLinkById_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithLink>* LinkService::Stub::AsyncGetLinkByIdRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithLink>::Create(channel_.get(), cq, rpcmethod_GetLinkById_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithLink>* LinkService::Stub::PrepareAsyncGetLinkByIdRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithLink>::Create(channel_.get(), cq, rpcmethod_GetLinkById_, context, request, false);
}

::grpc::Status LinkService::Stub::GetLinksByUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::XiaoyaStore::Service::ResultWithLinks* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetLinksByUrl_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithLinks>* LinkService::Stub::AsyncGetLinksByUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithLinks>::Create(channel_.get(), cq, rpcmethod_GetLinksByUrl_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithLinks>* LinkService::Stub::PrepareAsyncGetLinksByUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithLinks>::Create(channel_.get(), cq, rpcmethod_GetLinksByUrl_, context, request, false);
}

LinkService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      LinkService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< LinkService::Service, ::XiaoyaStore::Service::ArgSaveLinkOfUrlFile, ::XiaoyaStore::Service::Result>(
          std::mem_fn(&LinkService::Service::SaveLinksOfUrlFile), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      LinkService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< LinkService::Service, ::XiaoyaStore::Service::ArgId, ::XiaoyaStore::Service::ResultWithLink>(
          std::mem_fn(&LinkService::Service::GetLinkById), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      LinkService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< LinkService::Service, ::XiaoyaStore::Service::ArgUrl, ::XiaoyaStore::Service::ResultWithLinks>(
          std::mem_fn(&LinkService::Service::GetLinksByUrl), this)));
}

LinkService::Service::~Service() {
}

::grpc::Status LinkService::Service::SaveLinksOfUrlFile(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgSaveLinkOfUrlFile* request, ::XiaoyaStore::Service::Result* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status LinkService::Service::GetLinkById(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgId* request, ::XiaoyaStore::Service::ResultWithLink* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status LinkService::Service::GetLinksByUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrl* request, ::XiaoyaStore::Service::ResultWithLinks* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


static const char* InvertedIndexService_method_names[] = {
  "/XiaoyaStore.Service.InvertedIndexService/ClearAndSaveIndicesOf",
  "/XiaoyaStore.Service.InvertedIndexService/GetIndex",
};

std::unique_ptr< InvertedIndexService::Stub> InvertedIndexService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< InvertedIndexService::Stub> stub(new InvertedIndexService::Stub(channel));
  return stub;
}

InvertedIndexService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_ClearAndSaveIndicesOf_(InvertedIndexService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetIndex_(InvertedIndexService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status InvertedIndexService::Stub::ClearAndSaveIndicesOf(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgClearAndSaveIndicesOf& request, ::XiaoyaStore::Service::Result* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ClearAndSaveIndicesOf_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* InvertedIndexService::Stub::AsyncClearAndSaveIndicesOfRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgClearAndSaveIndicesOf& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::Result>::Create(channel_.get(), cq, rpcmethod_ClearAndSaveIndicesOf_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* InvertedIndexService::Stub::PrepareAsyncClearAndSaveIndicesOfRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgClearAndSaveIndicesOf& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::Result>::Create(channel_.get(), cq, rpcmethod_ClearAndSaveIndicesOf_, context, request, false);
}

::grpc::Status InvertedIndexService::Stub::GetIndex(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgIndexKey& request, ::XiaoyaStore::Service::ResultWithIndex* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetIndex_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithIndex>* InvertedIndexService::Stub::AsyncGetIndexRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgIndexKey& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithIndex>::Create(channel_.get(), cq, rpcmethod_GetIndex_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithIndex>* InvertedIndexService::Stub::PrepareAsyncGetIndexRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgIndexKey& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::XiaoyaStore::Service::ResultWithIndex>::Create(channel_.get(), cq, rpcmethod_GetIndex_, context, request, false);
}

InvertedIndexService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      InvertedIndexService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< InvertedIndexService::Service, ::XiaoyaStore::Service::ArgClearAndSaveIndicesOf, ::XiaoyaStore::Service::Result>(
          std::mem_fn(&InvertedIndexService::Service::ClearAndSaveIndicesOf), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      InvertedIndexService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< InvertedIndexService::Service, ::XiaoyaStore::Service::ArgIndexKey, ::XiaoyaStore::Service::ResultWithIndex>(
          std::mem_fn(&InvertedIndexService::Service::GetIndex), this)));
}

InvertedIndexService::Service::~Service() {
}

::grpc::Status InvertedIndexService::Service::ClearAndSaveIndicesOf(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgClearAndSaveIndicesOf* request, ::XiaoyaStore::Service::Result* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status InvertedIndexService::Service::GetIndex(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgIndexKey* request, ::XiaoyaStore::Service::ResultWithIndex* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace XiaoyaStore
}  // namespace Service


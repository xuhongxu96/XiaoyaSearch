// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: rpc.proto
#ifndef GRPC_rpc_2eproto__INCLUDED
#define GRPC_rpc_2eproto__INCLUDED

#include "rpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace XiaoyaStore {
namespace Service {

class UrlFrontierItemService final {
 public:
  static constexpr char const* service_full_name() {
    return "XiaoyaStore.Service.UrlFrontierItemService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status Init(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::XiaoyaStore::Service::Result* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> AsyncInit(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(AsyncInitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> PrepareAsyncInit(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(PrepareAsyncInitRaw(context, request, cq));
    }
    virtual ::grpc::Status PushUrls(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::XiaoyaStore::Service::Result* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> AsyncPushUrls(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(AsyncPushUrlsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> PrepareAsyncPushUrls(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(PrepareAsyncPushUrlsRaw(context, request, cq));
    }
    virtual ::grpc::Status PushBackUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPushBackUrl& request, ::XiaoyaStore::Service::Result* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> AsyncPushBackUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPushBackUrl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(AsyncPushBackUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> PrepareAsyncPushBackUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPushBackUrl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(PrepareAsyncPushBackUrlRaw(context, request, cq));
    }
    virtual ::grpc::Status PopUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::XiaoyaStore::Service::ResultWithUrl* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrl>> AsyncPopUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrl>>(AsyncPopUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrl>> PrepareAsyncPopUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrl>>(PrepareAsyncPopUrlRaw(context, request, cq));
    }
    virtual ::grpc::Status RemoveUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::XiaoyaStore::Service::Result* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> AsyncRemoveUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(AsyncRemoveUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> PrepareAsyncRemoveUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(PrepareAsyncRemoveUrlRaw(context, request, cq));
    }
    virtual ::grpc::Status GetHostCount(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHost& request, ::XiaoyaStore::Service::ResultWithCount* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithCount>> AsyncGetHostCount(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHost& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithCount>>(AsyncGetHostCountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithCount>> PrepareAsyncGetHostCount(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHost& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithCount>>(PrepareAsyncGetHostCountRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* AsyncInitRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* PrepareAsyncInitRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* AsyncPushUrlsRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* PrepareAsyncPushUrlsRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* AsyncPushBackUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPushBackUrl& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* PrepareAsyncPushBackUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPushBackUrl& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrl>* AsyncPopUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrl>* PrepareAsyncPopUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* AsyncRemoveUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* PrepareAsyncRemoveUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithCount>* AsyncGetHostCountRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHost& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithCount>* PrepareAsyncGetHostCountRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHost& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status Init(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::XiaoyaStore::Service::Result* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> AsyncInit(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(AsyncInitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> PrepareAsyncInit(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(PrepareAsyncInitRaw(context, request, cq));
    }
    ::grpc::Status PushUrls(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::XiaoyaStore::Service::Result* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> AsyncPushUrls(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(AsyncPushUrlsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> PrepareAsyncPushUrls(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(PrepareAsyncPushUrlsRaw(context, request, cq));
    }
    ::grpc::Status PushBackUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPushBackUrl& request, ::XiaoyaStore::Service::Result* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> AsyncPushBackUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPushBackUrl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(AsyncPushBackUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> PrepareAsyncPushBackUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPushBackUrl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(PrepareAsyncPushBackUrlRaw(context, request, cq));
    }
    ::grpc::Status PopUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::XiaoyaStore::Service::ResultWithUrl* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrl>> AsyncPopUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrl>>(AsyncPopUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrl>> PrepareAsyncPopUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrl>>(PrepareAsyncPopUrlRaw(context, request, cq));
    }
    ::grpc::Status RemoveUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::XiaoyaStore::Service::Result* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> AsyncRemoveUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(AsyncRemoveUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> PrepareAsyncRemoveUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(PrepareAsyncRemoveUrlRaw(context, request, cq));
    }
    ::grpc::Status GetHostCount(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHost& request, ::XiaoyaStore::Service::ResultWithCount* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithCount>> AsyncGetHostCount(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHost& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithCount>>(AsyncGetHostCountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithCount>> PrepareAsyncGetHostCount(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHost& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithCount>>(PrepareAsyncGetHostCountRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* AsyncInitRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* PrepareAsyncInitRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* AsyncPushUrlsRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* PrepareAsyncPushUrlsRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrls& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* AsyncPushBackUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPushBackUrl& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* PrepareAsyncPushBackUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPushBackUrl& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrl>* AsyncPopUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrl>* PrepareAsyncPopUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* AsyncRemoveUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* PrepareAsyncRemoveUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithCount>* AsyncGetHostCountRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHost& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithCount>* PrepareAsyncGetHostCountRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHost& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Init_;
    const ::grpc::internal::RpcMethod rpcmethod_PushUrls_;
    const ::grpc::internal::RpcMethod rpcmethod_PushBackUrl_;
    const ::grpc::internal::RpcMethod rpcmethod_PopUrl_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveUrl_;
    const ::grpc::internal::RpcMethod rpcmethod_GetHostCount_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status Init(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrls* request, ::XiaoyaStore::Service::Result* response);
    virtual ::grpc::Status PushUrls(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrls* request, ::XiaoyaStore::Service::Result* response);
    virtual ::grpc::Status PushBackUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgPushBackUrl* request, ::XiaoyaStore::Service::Result* response);
    virtual ::grpc::Status PopUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgVoid* request, ::XiaoyaStore::Service::ResultWithUrl* response);
    virtual ::grpc::Status RemoveUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrl* request, ::XiaoyaStore::Service::Result* response);
    virtual ::grpc::Status GetHostCount(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgHost* request, ::XiaoyaStore::Service::ResultWithCount* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_Init() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrls* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInit(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgUrls* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::Result>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PushUrls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_PushUrls() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_PushUrls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PushUrls(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrls* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPushUrls(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgUrls* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::Result>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PushBackUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_PushBackUrl() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_PushBackUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PushBackUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgPushBackUrl* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPushBackUrl(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgPushBackUrl* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::Result>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PopUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_PopUrl() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_PopUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PopUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgVoid* request, ::XiaoyaStore::Service::ResultWithUrl* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPopUrl(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgVoid* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::ResultWithUrl>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_RemoveUrl() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_RemoveUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrl* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveUrl(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgUrl* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::Result>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetHostCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetHostCount() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_GetHostCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHostCount(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgHost* request, ::XiaoyaStore::Service::ResultWithCount* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetHostCount(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgHost* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::ResultWithCount>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Init<WithAsyncMethod_PushUrls<WithAsyncMethod_PushBackUrl<WithAsyncMethod_PopUrl<WithAsyncMethod_RemoveUrl<WithAsyncMethod_GetHostCount<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_Init() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Init(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrls* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PushUrls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_PushUrls() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_PushUrls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PushUrls(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrls* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PushBackUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_PushBackUrl() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_PushBackUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PushBackUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgPushBackUrl* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PopUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_PopUrl() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_PopUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PopUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgVoid* request, ::XiaoyaStore::Service::ResultWithUrl* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_RemoveUrl() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_RemoveUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrl* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetHostCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetHostCount() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_GetHostCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHostCount(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgHost* request, ::XiaoyaStore::Service::ResultWithCount* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_Init() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgUrls, ::XiaoyaStore::Service::Result>(std::bind(&WithStreamedUnaryMethod_Init<BaseClass>::StreamedInit, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_Init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Init(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrls* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInit(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgUrls,::XiaoyaStore::Service::Result>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PushUrls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_PushUrls() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgUrls, ::XiaoyaStore::Service::Result>(std::bind(&WithStreamedUnaryMethod_PushUrls<BaseClass>::StreamedPushUrls, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_PushUrls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PushUrls(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrls* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPushUrls(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgUrls,::XiaoyaStore::Service::Result>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PushBackUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_PushBackUrl() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgPushBackUrl, ::XiaoyaStore::Service::Result>(std::bind(&WithStreamedUnaryMethod_PushBackUrl<BaseClass>::StreamedPushBackUrl, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_PushBackUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PushBackUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgPushBackUrl* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPushBackUrl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgPushBackUrl,::XiaoyaStore::Service::Result>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PopUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_PopUrl() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgVoid, ::XiaoyaStore::Service::ResultWithUrl>(std::bind(&WithStreamedUnaryMethod_PopUrl<BaseClass>::StreamedPopUrl, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_PopUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PopUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgVoid* request, ::XiaoyaStore::Service::ResultWithUrl* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPopUrl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgVoid,::XiaoyaStore::Service::ResultWithUrl>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_RemoveUrl() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgUrl, ::XiaoyaStore::Service::Result>(std::bind(&WithStreamedUnaryMethod_RemoveUrl<BaseClass>::StreamedRemoveUrl, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_RemoveUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrl* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveUrl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgUrl,::XiaoyaStore::Service::Result>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetHostCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetHostCount() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgHost, ::XiaoyaStore::Service::ResultWithCount>(std::bind(&WithStreamedUnaryMethod_GetHostCount<BaseClass>::StreamedGetHostCount, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetHostCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetHostCount(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgHost* request, ::XiaoyaStore::Service::ResultWithCount* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetHostCount(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgHost,::XiaoyaStore::Service::ResultWithCount>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Init<WithStreamedUnaryMethod_PushUrls<WithStreamedUnaryMethod_PushBackUrl<WithStreamedUnaryMethod_PopUrl<WithStreamedUnaryMethod_RemoveUrl<WithStreamedUnaryMethod_GetHostCount<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_Init<WithStreamedUnaryMethod_PushUrls<WithStreamedUnaryMethod_PushBackUrl<WithStreamedUnaryMethod_PopUrl<WithStreamedUnaryMethod_RemoveUrl<WithStreamedUnaryMethod_GetHostCount<Service > > > > > > StreamedService;
};

class UrlFileService final {
 public:
  static constexpr char const* service_full_name() {
    return "XiaoyaStore.Service.UrlFileService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status GetUrlFileById(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::XiaoyaStore::Service::ResultWithUrlFile* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFile>> AsyncGetUrlFileById(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFile>>(AsyncGetUrlFileByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFile>> PrepareAsyncGetUrlFileById(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFile>>(PrepareAsyncGetUrlFileByIdRaw(context, request, cq));
    }
    virtual ::grpc::Status GetUrlFileByUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::XiaoyaStore::Service::ResultWithUrlFile* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFile>> AsyncGetUrlFileByUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFile>>(AsyncGetUrlFileByUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFile>> PrepareAsyncGetUrlFileByUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFile>>(PrepareAsyncGetUrlFileByUrlRaw(context, request, cq));
    }
    virtual ::grpc::Status GetUrlFilesByHash(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHash& request, ::XiaoyaStore::Service::ResultWithUrlFiles* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFiles>> AsyncGetUrlFilesByHash(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHash& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFiles>>(AsyncGetUrlFilesByHashRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFiles>> PrepareAsyncGetUrlFilesByHash(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHash& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFiles>>(PrepareAsyncGetUrlFilesByHashRaw(context, request, cq));
    }
    virtual ::grpc::Status SaveUrlFileAndGetOldId(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrlFile& request, ::XiaoyaStore::Service::ResultWithUrlFileAndOldId* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>> AsyncSaveUrlFileAndGetOldId(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrlFile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>>(AsyncSaveUrlFileAndGetOldIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>> PrepareAsyncSaveUrlFileAndGetOldId(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrlFile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>>(PrepareAsyncSaveUrlFileAndGetOldIdRaw(context, request, cq));
    }
    virtual ::grpc::Status GetCount(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::XiaoyaStore::Service::ResultWithCount* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithCount>> AsyncGetCount(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithCount>>(AsyncGetCountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithCount>> PrepareAsyncGetCount(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithCount>>(PrepareAsyncGetCountRaw(context, request, cq));
    }
    virtual ::grpc::Status ContainsId(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::XiaoyaStore::Service::Result* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> AsyncContainsId(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(AsyncContainsIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> PrepareAsyncContainsId(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(PrepareAsyncContainsIdRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFile>* AsyncGetUrlFileByIdRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFile>* PrepareAsyncGetUrlFileByIdRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFile>* AsyncGetUrlFileByUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFile>* PrepareAsyncGetUrlFileByUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFiles>* AsyncGetUrlFilesByHashRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHash& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFiles>* PrepareAsyncGetUrlFilesByHashRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHash& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>* AsyncSaveUrlFileAndGetOldIdRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrlFile& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>* PrepareAsyncSaveUrlFileAndGetOldIdRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrlFile& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithCount>* AsyncGetCountRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithCount>* PrepareAsyncGetCountRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* AsyncContainsIdRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* PrepareAsyncContainsIdRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status GetUrlFileById(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::XiaoyaStore::Service::ResultWithUrlFile* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFile>> AsyncGetUrlFileById(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFile>>(AsyncGetUrlFileByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFile>> PrepareAsyncGetUrlFileById(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFile>>(PrepareAsyncGetUrlFileByIdRaw(context, request, cq));
    }
    ::grpc::Status GetUrlFileByUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::XiaoyaStore::Service::ResultWithUrlFile* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFile>> AsyncGetUrlFileByUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFile>>(AsyncGetUrlFileByUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFile>> PrepareAsyncGetUrlFileByUrl(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFile>>(PrepareAsyncGetUrlFileByUrlRaw(context, request, cq));
    }
    ::grpc::Status GetUrlFilesByHash(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHash& request, ::XiaoyaStore::Service::ResultWithUrlFiles* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFiles>> AsyncGetUrlFilesByHash(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHash& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFiles>>(AsyncGetUrlFilesByHashRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFiles>> PrepareAsyncGetUrlFilesByHash(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHash& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFiles>>(PrepareAsyncGetUrlFilesByHashRaw(context, request, cq));
    }
    ::grpc::Status SaveUrlFileAndGetOldId(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrlFile& request, ::XiaoyaStore::Service::ResultWithUrlFileAndOldId* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>> AsyncSaveUrlFileAndGetOldId(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrlFile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>>(AsyncSaveUrlFileAndGetOldIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>> PrepareAsyncSaveUrlFileAndGetOldId(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrlFile& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>>(PrepareAsyncSaveUrlFileAndGetOldIdRaw(context, request, cq));
    }
    ::grpc::Status GetCount(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::XiaoyaStore::Service::ResultWithCount* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithCount>> AsyncGetCount(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithCount>>(AsyncGetCountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithCount>> PrepareAsyncGetCount(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithCount>>(PrepareAsyncGetCountRaw(context, request, cq));
    }
    ::grpc::Status ContainsId(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::XiaoyaStore::Service::Result* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> AsyncContainsId(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(AsyncContainsIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> PrepareAsyncContainsId(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(PrepareAsyncContainsIdRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFile>* AsyncGetUrlFileByIdRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFile>* PrepareAsyncGetUrlFileByIdRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFile>* AsyncGetUrlFileByUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFile>* PrepareAsyncGetUrlFileByUrlRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFiles>* AsyncGetUrlFilesByHashRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHash& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFiles>* PrepareAsyncGetUrlFilesByHashRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgHash& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>* AsyncSaveUrlFileAndGetOldIdRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrlFile& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>* PrepareAsyncSaveUrlFileAndGetOldIdRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrlFile& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithCount>* AsyncGetCountRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithCount>* PrepareAsyncGetCountRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgVoid& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* AsyncContainsIdRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* PrepareAsyncContainsIdRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetUrlFileById_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUrlFileByUrl_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUrlFilesByHash_;
    const ::grpc::internal::RpcMethod rpcmethod_SaveUrlFileAndGetOldId_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCount_;
    const ::grpc::internal::RpcMethod rpcmethod_ContainsId_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status GetUrlFileById(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgId* request, ::XiaoyaStore::Service::ResultWithUrlFile* response);
    virtual ::grpc::Status GetUrlFileByUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrl* request, ::XiaoyaStore::Service::ResultWithUrlFile* response);
    virtual ::grpc::Status GetUrlFilesByHash(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgHash* request, ::XiaoyaStore::Service::ResultWithUrlFiles* response);
    virtual ::grpc::Status SaveUrlFileAndGetOldId(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrlFile* request, ::XiaoyaStore::Service::ResultWithUrlFileAndOldId* response);
    virtual ::grpc::Status GetCount(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgVoid* request, ::XiaoyaStore::Service::ResultWithCount* response);
    virtual ::grpc::Status ContainsId(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgId* request, ::XiaoyaStore::Service::Result* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUrlFileById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetUrlFileById() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetUrlFileById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUrlFileById(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgId* request, ::XiaoyaStore::Service::ResultWithUrlFile* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUrlFileById(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgId* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::ResultWithUrlFile>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUrlFileByUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetUrlFileByUrl() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetUrlFileByUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUrlFileByUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrl* request, ::XiaoyaStore::Service::ResultWithUrlFile* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUrlFileByUrl(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgUrl* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::ResultWithUrlFile>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUrlFilesByHash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetUrlFilesByHash() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetUrlFilesByHash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUrlFilesByHash(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgHash* request, ::XiaoyaStore::Service::ResultWithUrlFiles* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUrlFilesByHash(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgHash* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::ResultWithUrlFiles>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SaveUrlFileAndGetOldId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SaveUrlFileAndGetOldId() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_SaveUrlFileAndGetOldId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveUrlFileAndGetOldId(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrlFile* request, ::XiaoyaStore::Service::ResultWithUrlFileAndOldId* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSaveUrlFileAndGetOldId(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgUrlFile* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetCount() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCount(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgVoid* request, ::XiaoyaStore::Service::ResultWithCount* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCount(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgVoid* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::ResultWithCount>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ContainsId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ContainsId() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_ContainsId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ContainsId(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgId* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestContainsId(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgId* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::Result>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetUrlFileById<WithAsyncMethod_GetUrlFileByUrl<WithAsyncMethod_GetUrlFilesByHash<WithAsyncMethod_SaveUrlFileAndGetOldId<WithAsyncMethod_GetCount<WithAsyncMethod_ContainsId<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_GetUrlFileById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetUrlFileById() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetUrlFileById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUrlFileById(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgId* request, ::XiaoyaStore::Service::ResultWithUrlFile* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUrlFileByUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetUrlFileByUrl() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetUrlFileByUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUrlFileByUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrl* request, ::XiaoyaStore::Service::ResultWithUrlFile* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUrlFilesByHash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetUrlFilesByHash() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetUrlFilesByHash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUrlFilesByHash(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgHash* request, ::XiaoyaStore::Service::ResultWithUrlFiles* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SaveUrlFileAndGetOldId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SaveUrlFileAndGetOldId() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_SaveUrlFileAndGetOldId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveUrlFileAndGetOldId(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrlFile* request, ::XiaoyaStore::Service::ResultWithUrlFileAndOldId* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetCount() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCount(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgVoid* request, ::XiaoyaStore::Service::ResultWithCount* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ContainsId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ContainsId() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_ContainsId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ContainsId(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgId* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUrlFileById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetUrlFileById() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgId, ::XiaoyaStore::Service::ResultWithUrlFile>(std::bind(&WithStreamedUnaryMethod_GetUrlFileById<BaseClass>::StreamedGetUrlFileById, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetUrlFileById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUrlFileById(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgId* request, ::XiaoyaStore::Service::ResultWithUrlFile* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUrlFileById(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgId,::XiaoyaStore::Service::ResultWithUrlFile>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUrlFileByUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetUrlFileByUrl() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgUrl, ::XiaoyaStore::Service::ResultWithUrlFile>(std::bind(&WithStreamedUnaryMethod_GetUrlFileByUrl<BaseClass>::StreamedGetUrlFileByUrl, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetUrlFileByUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUrlFileByUrl(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrl* request, ::XiaoyaStore::Service::ResultWithUrlFile* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUrlFileByUrl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgUrl,::XiaoyaStore::Service::ResultWithUrlFile>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUrlFilesByHash : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetUrlFilesByHash() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgHash, ::XiaoyaStore::Service::ResultWithUrlFiles>(std::bind(&WithStreamedUnaryMethod_GetUrlFilesByHash<BaseClass>::StreamedGetUrlFilesByHash, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetUrlFilesByHash() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUrlFilesByHash(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgHash* request, ::XiaoyaStore::Service::ResultWithUrlFiles* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUrlFilesByHash(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgHash,::XiaoyaStore::Service::ResultWithUrlFiles>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SaveUrlFileAndGetOldId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SaveUrlFileAndGetOldId() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgUrlFile, ::XiaoyaStore::Service::ResultWithUrlFileAndOldId>(std::bind(&WithStreamedUnaryMethod_SaveUrlFileAndGetOldId<BaseClass>::StreamedSaveUrlFileAndGetOldId, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SaveUrlFileAndGetOldId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SaveUrlFileAndGetOldId(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrlFile* request, ::XiaoyaStore::Service::ResultWithUrlFileAndOldId* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSaveUrlFileAndGetOldId(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgUrlFile,::XiaoyaStore::Service::ResultWithUrlFileAndOldId>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetCount() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgVoid, ::XiaoyaStore::Service::ResultWithCount>(std::bind(&WithStreamedUnaryMethod_GetCount<BaseClass>::StreamedGetCount, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCount(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgVoid* request, ::XiaoyaStore::Service::ResultWithCount* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCount(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgVoid,::XiaoyaStore::Service::ResultWithCount>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ContainsId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ContainsId() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgId, ::XiaoyaStore::Service::Result>(std::bind(&WithStreamedUnaryMethod_ContainsId<BaseClass>::StreamedContainsId, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ContainsId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ContainsId(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgId* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedContainsId(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgId,::XiaoyaStore::Service::Result>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetUrlFileById<WithStreamedUnaryMethod_GetUrlFileByUrl<WithStreamedUnaryMethod_GetUrlFilesByHash<WithStreamedUnaryMethod_SaveUrlFileAndGetOldId<WithStreamedUnaryMethod_GetCount<WithStreamedUnaryMethod_ContainsId<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetUrlFileById<WithStreamedUnaryMethod_GetUrlFileByUrl<WithStreamedUnaryMethod_GetUrlFilesByHash<WithStreamedUnaryMethod_SaveUrlFileAndGetOldId<WithStreamedUnaryMethod_GetCount<WithStreamedUnaryMethod_ContainsId<Service > > > > > > StreamedService;
};

class PostingListService final {
 public:
  static constexpr char const* service_full_name() {
    return "XiaoyaStore.Service.PostingListService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status SavePostingList(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPostingList& request, ::XiaoyaStore::Service::Result* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> AsyncSavePostingList(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPostingList& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(AsyncSavePostingListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> PrepareAsyncSavePostingList(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPostingList& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(PrepareAsyncSavePostingListRaw(context, request, cq));
    }
    virtual ::grpc::Status GetPostingList(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgWord& request, ::XiaoyaStore::Service::ResultWithPostingList* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithPostingList>> AsyncGetPostingList(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgWord& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithPostingList>>(AsyncGetPostingListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithPostingList>> PrepareAsyncGetPostingList(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgWord& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithPostingList>>(PrepareAsyncGetPostingListRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* AsyncSavePostingListRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPostingList& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* PrepareAsyncSavePostingListRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPostingList& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithPostingList>* AsyncGetPostingListRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgWord& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithPostingList>* PrepareAsyncGetPostingListRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgWord& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status SavePostingList(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPostingList& request, ::XiaoyaStore::Service::Result* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> AsyncSavePostingList(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPostingList& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(AsyncSavePostingListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> PrepareAsyncSavePostingList(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPostingList& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(PrepareAsyncSavePostingListRaw(context, request, cq));
    }
    ::grpc::Status GetPostingList(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgWord& request, ::XiaoyaStore::Service::ResultWithPostingList* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithPostingList>> AsyncGetPostingList(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgWord& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithPostingList>>(AsyncGetPostingListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithPostingList>> PrepareAsyncGetPostingList(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgWord& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithPostingList>>(PrepareAsyncGetPostingListRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* AsyncSavePostingListRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPostingList& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* PrepareAsyncSavePostingListRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgPostingList& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithPostingList>* AsyncGetPostingListRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgWord& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithPostingList>* PrepareAsyncGetPostingListRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgWord& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_SavePostingList_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPostingList_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status SavePostingList(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgPostingList* request, ::XiaoyaStore::Service::Result* response);
    virtual ::grpc::Status GetPostingList(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgWord* request, ::XiaoyaStore::Service::ResultWithPostingList* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_SavePostingList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SavePostingList() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_SavePostingList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SavePostingList(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgPostingList* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSavePostingList(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgPostingList* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::Result>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPostingList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetPostingList() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetPostingList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPostingList(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgWord* request, ::XiaoyaStore::Service::ResultWithPostingList* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPostingList(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgWord* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::ResultWithPostingList>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_SavePostingList<WithAsyncMethod_GetPostingList<Service > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_SavePostingList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SavePostingList() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_SavePostingList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SavePostingList(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgPostingList* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPostingList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetPostingList() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetPostingList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPostingList(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgWord* request, ::XiaoyaStore::Service::ResultWithPostingList* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SavePostingList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SavePostingList() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgPostingList, ::XiaoyaStore::Service::Result>(std::bind(&WithStreamedUnaryMethod_SavePostingList<BaseClass>::StreamedSavePostingList, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SavePostingList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SavePostingList(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgPostingList* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSavePostingList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgPostingList,::XiaoyaStore::Service::Result>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPostingList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetPostingList() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgWord, ::XiaoyaStore::Service::ResultWithPostingList>(std::bind(&WithStreamedUnaryMethod_GetPostingList<BaseClass>::StreamedGetPostingList, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetPostingList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPostingList(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgWord* request, ::XiaoyaStore::Service::ResultWithPostingList* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPostingList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgWord,::XiaoyaStore::Service::ResultWithPostingList>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_SavePostingList<WithStreamedUnaryMethod_GetPostingList<Service > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_SavePostingList<WithStreamedUnaryMethod_GetPostingList<Service > > StreamedService;
};

class LinkService final {
 public:
  static constexpr char const* service_full_name() {
    return "XiaoyaStore.Service.LinkService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status SaveLinks(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::XiaoyaStore::Service::Result* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> AsyncSaveLinks(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(AsyncSaveLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> PrepareAsyncSaveLinks(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(PrepareAsyncSaveLinksRaw(context, request, cq));
    }
    virtual ::grpc::Status RemoveLinks(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::XiaoyaStore::Service::Result* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> AsyncRemoveLinks(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(AsyncRemoveLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> PrepareAsyncRemoveLinks(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(PrepareAsyncRemoveLinksRaw(context, request, cq));
    }
    virtual ::grpc::Status GetLinks(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::XiaoyaStore::Service::ResultWithLinks* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithLinks>> AsyncGetLinks(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithLinks>>(AsyncGetLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithLinks>> PrepareAsyncGetLinks(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithLinks>>(PrepareAsyncGetLinksRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* AsyncSaveLinksRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* PrepareAsyncSaveLinksRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* AsyncRemoveLinksRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* PrepareAsyncRemoveLinksRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithLinks>* AsyncGetLinksRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithLinks>* PrepareAsyncGetLinksRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status SaveLinks(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::XiaoyaStore::Service::Result* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> AsyncSaveLinks(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(AsyncSaveLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> PrepareAsyncSaveLinks(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(PrepareAsyncSaveLinksRaw(context, request, cq));
    }
    ::grpc::Status RemoveLinks(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::XiaoyaStore::Service::Result* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> AsyncRemoveLinks(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(AsyncRemoveLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> PrepareAsyncRemoveLinks(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(PrepareAsyncRemoveLinksRaw(context, request, cq));
    }
    ::grpc::Status GetLinks(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::XiaoyaStore::Service::ResultWithLinks* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithLinks>> AsyncGetLinks(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithLinks>>(AsyncGetLinksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithLinks>> PrepareAsyncGetLinks(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithLinks>>(PrepareAsyncGetLinksRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* AsyncSaveLinksRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* PrepareAsyncSaveLinksRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* AsyncRemoveLinksRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* PrepareAsyncRemoveLinksRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgLinks& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithLinks>* AsyncGetLinksRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithLinks>* PrepareAsyncGetLinksRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgUrl& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_SaveLinks_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveLinks_;
    const ::grpc::internal::RpcMethod rpcmethod_GetLinks_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status SaveLinks(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgLinks* request, ::XiaoyaStore::Service::Result* response);
    virtual ::grpc::Status RemoveLinks(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgLinks* request, ::XiaoyaStore::Service::Result* response);
    virtual ::grpc::Status GetLinks(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrl* request, ::XiaoyaStore::Service::ResultWithLinks* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_SaveLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SaveLinks() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_SaveLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveLinks(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgLinks* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSaveLinks(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgLinks* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::Result>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_RemoveLinks() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_RemoveLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveLinks(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgLinks* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveLinks(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgLinks* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::Result>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetLinks() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLinks(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrl* request, ::XiaoyaStore::Service::ResultWithLinks* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLinks(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgUrl* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::ResultWithLinks>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_SaveLinks<WithAsyncMethod_RemoveLinks<WithAsyncMethod_GetLinks<Service > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_SaveLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SaveLinks() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_SaveLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveLinks(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgLinks* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_RemoveLinks() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_RemoveLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveLinks(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgLinks* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetLinks() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLinks(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrl* request, ::XiaoyaStore::Service::ResultWithLinks* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SaveLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SaveLinks() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgLinks, ::XiaoyaStore::Service::Result>(std::bind(&WithStreamedUnaryMethod_SaveLinks<BaseClass>::StreamedSaveLinks, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SaveLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SaveLinks(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgLinks* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSaveLinks(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgLinks,::XiaoyaStore::Service::Result>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_RemoveLinks() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgLinks, ::XiaoyaStore::Service::Result>(std::bind(&WithStreamedUnaryMethod_RemoveLinks<BaseClass>::StreamedRemoveLinks, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_RemoveLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveLinks(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgLinks* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveLinks(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgLinks,::XiaoyaStore::Service::Result>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetLinks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetLinks() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgUrl, ::XiaoyaStore::Service::ResultWithLinks>(std::bind(&WithStreamedUnaryMethod_GetLinks<BaseClass>::StreamedGetLinks, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetLinks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetLinks(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgUrl* request, ::XiaoyaStore::Service::ResultWithLinks* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetLinks(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgUrl,::XiaoyaStore::Service::ResultWithLinks>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_SaveLinks<WithStreamedUnaryMethod_RemoveLinks<WithStreamedUnaryMethod_GetLinks<Service > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_SaveLinks<WithStreamedUnaryMethod_RemoveLinks<WithStreamedUnaryMethod_GetLinks<Service > > > StreamedService;
};

class InvertedIndexService final {
 public:
  static constexpr char const* service_full_name() {
    return "XiaoyaStore.Service.InvertedIndexService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status ClearIndices(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::XiaoyaStore::Service::Result* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> AsyncClearIndices(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(AsyncClearIndicesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> PrepareAsyncClearIndices(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(PrepareAsyncClearIndicesRaw(context, request, cq));
    }
    virtual ::grpc::Status SaveIndices(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgSaveIndices& request, ::XiaoyaStore::Service::Result* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> AsyncSaveIndices(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgSaveIndices& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(AsyncSaveIndicesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>> PrepareAsyncSaveIndices(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgSaveIndices& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>>(PrepareAsyncSaveIndicesRaw(context, request, cq));
    }
    virtual ::grpc::Status GetIndex(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgIndexKey& request, ::XiaoyaStore::Service::ResultWithIndex* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithIndex>> AsyncGetIndex(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgIndexKey& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithIndex>>(AsyncGetIndexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithIndex>> PrepareAsyncGetIndex(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgIndexKey& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithIndex>>(PrepareAsyncGetIndexRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* AsyncClearIndicesRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* PrepareAsyncClearIndicesRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* AsyncSaveIndicesRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgSaveIndices& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::Result>* PrepareAsyncSaveIndicesRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgSaveIndices& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithIndex>* AsyncGetIndexRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgIndexKey& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::XiaoyaStore::Service::ResultWithIndex>* PrepareAsyncGetIndexRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgIndexKey& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status ClearIndices(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::XiaoyaStore::Service::Result* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> AsyncClearIndices(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(AsyncClearIndicesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> PrepareAsyncClearIndices(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(PrepareAsyncClearIndicesRaw(context, request, cq));
    }
    ::grpc::Status SaveIndices(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgSaveIndices& request, ::XiaoyaStore::Service::Result* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> AsyncSaveIndices(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgSaveIndices& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(AsyncSaveIndicesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>> PrepareAsyncSaveIndices(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgSaveIndices& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>>(PrepareAsyncSaveIndicesRaw(context, request, cq));
    }
    ::grpc::Status GetIndex(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgIndexKey& request, ::XiaoyaStore::Service::ResultWithIndex* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithIndex>> AsyncGetIndex(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgIndexKey& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithIndex>>(AsyncGetIndexRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithIndex>> PrepareAsyncGetIndex(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgIndexKey& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithIndex>>(PrepareAsyncGetIndexRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* AsyncClearIndicesRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* PrepareAsyncClearIndicesRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgId& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* AsyncSaveIndicesRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgSaveIndices& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::Result>* PrepareAsyncSaveIndicesRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgSaveIndices& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithIndex>* AsyncGetIndexRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgIndexKey& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::XiaoyaStore::Service::ResultWithIndex>* PrepareAsyncGetIndexRaw(::grpc::ClientContext* context, const ::XiaoyaStore::Service::ArgIndexKey& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ClearIndices_;
    const ::grpc::internal::RpcMethod rpcmethod_SaveIndices_;
    const ::grpc::internal::RpcMethod rpcmethod_GetIndex_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status ClearIndices(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgId* request, ::XiaoyaStore::Service::Result* response);
    virtual ::grpc::Status SaveIndices(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgSaveIndices* request, ::XiaoyaStore::Service::Result* response);
    virtual ::grpc::Status GetIndex(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgIndexKey* request, ::XiaoyaStore::Service::ResultWithIndex* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ClearIndices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ClearIndices() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ClearIndices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearIndices(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgId* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClearIndices(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgId* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::Result>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SaveIndices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SaveIndices() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_SaveIndices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveIndices(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgSaveIndices* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSaveIndices(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgSaveIndices* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::Result>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetIndex() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIndex(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgIndexKey* request, ::XiaoyaStore::Service::ResultWithIndex* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetIndex(::grpc::ServerContext* context, ::XiaoyaStore::Service::ArgIndexKey* request, ::grpc::ServerAsyncResponseWriter< ::XiaoyaStore::Service::ResultWithIndex>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ClearIndices<WithAsyncMethod_SaveIndices<WithAsyncMethod_GetIndex<Service > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_ClearIndices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ClearIndices() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ClearIndices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearIndices(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgId* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SaveIndices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SaveIndices() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_SaveIndices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SaveIndices(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgSaveIndices* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetIndex() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIndex(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgIndexKey* request, ::XiaoyaStore::Service::ResultWithIndex* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ClearIndices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ClearIndices() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgId, ::XiaoyaStore::Service::Result>(std::bind(&WithStreamedUnaryMethod_ClearIndices<BaseClass>::StreamedClearIndices, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ClearIndices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ClearIndices(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgId* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedClearIndices(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgId,::XiaoyaStore::Service::Result>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SaveIndices : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SaveIndices() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgSaveIndices, ::XiaoyaStore::Service::Result>(std::bind(&WithStreamedUnaryMethod_SaveIndices<BaseClass>::StreamedSaveIndices, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SaveIndices() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SaveIndices(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgSaveIndices* request, ::XiaoyaStore::Service::Result* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSaveIndices(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgSaveIndices,::XiaoyaStore::Service::Result>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetIndex() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::XiaoyaStore::Service::ArgIndexKey, ::XiaoyaStore::Service::ResultWithIndex>(std::bind(&WithStreamedUnaryMethod_GetIndex<BaseClass>::StreamedGetIndex, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetIndex(::grpc::ServerContext* context, const ::XiaoyaStore::Service::ArgIndexKey* request, ::XiaoyaStore::Service::ResultWithIndex* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetIndex(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::XiaoyaStore::Service::ArgIndexKey,::XiaoyaStore::Service::ResultWithIndex>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ClearIndices<WithStreamedUnaryMethod_SaveIndices<WithStreamedUnaryMethod_GetIndex<Service > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ClearIndices<WithStreamedUnaryMethod_SaveIndices<WithStreamedUnaryMethod_GetIndex<Service > > > StreamedService;
};

}  // namespace Service
}  // namespace XiaoyaStore


#endif  // GRPC_rpc_2eproto__INCLUDED

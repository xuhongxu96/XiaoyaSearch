// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

#ifndef PROTOBUF_rpc_2eproto__INCLUDED
#define PROTOBUF_rpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "models.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_rpc_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[23];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsResultImpl();
void InitDefaultsResult();
void InitDefaultsResultWithUrlImpl();
void InitDefaultsResultWithUrl();
void InitDefaultsResultWithCountImpl();
void InitDefaultsResultWithCount();
void InitDefaultsResultWithUrlFileImpl();
void InitDefaultsResultWithUrlFile();
void InitDefaultsResultWithUrlFilesImpl();
void InitDefaultsResultWithUrlFiles();
void InitDefaultsResultWithUrlFileAndOldIdImpl();
void InitDefaultsResultWithUrlFileAndOldId();
void InitDefaultsResultWithPostingListImpl();
void InitDefaultsResultWithPostingList();
void InitDefaultsResultWithLinkImpl();
void InitDefaultsResultWithLink();
void InitDefaultsResultWithLinksImpl();
void InitDefaultsResultWithLinks();
void InitDefaultsResultWithIndexImpl();
void InitDefaultsResultWithIndex();
void InitDefaultsArgVoidImpl();
void InitDefaultsArgVoid();
void InitDefaultsArgIdImpl();
void InitDefaultsArgId();
void InitDefaultsArgUrlImpl();
void InitDefaultsArgUrl();
void InitDefaultsArgHashImpl();
void InitDefaultsArgHash();
void InitDefaultsArgWordImpl();
void InitDefaultsArgWord();
void InitDefaultsArgHostImpl();
void InitDefaultsArgHost();
void InitDefaultsArgUrlsImpl();
void InitDefaultsArgUrls();
void InitDefaultsArgUrlFileImpl();
void InitDefaultsArgUrlFile();
void InitDefaultsArgPushBackUrlImpl();
void InitDefaultsArgPushBackUrl();
void InitDefaultsArgPostingListImpl();
void InitDefaultsArgPostingList();
void InitDefaultsArgSaveLinkOfUrlFileImpl();
void InitDefaultsArgSaveLinkOfUrlFile();
void InitDefaultsArgClearAndSaveIndicesOfImpl();
void InitDefaultsArgClearAndSaveIndicesOf();
void InitDefaultsArgIndexKeyImpl();
void InitDefaultsArgIndexKey();
inline void InitDefaults() {
  InitDefaultsResult();
  InitDefaultsResultWithUrl();
  InitDefaultsResultWithCount();
  InitDefaultsResultWithUrlFile();
  InitDefaultsResultWithUrlFiles();
  InitDefaultsResultWithUrlFileAndOldId();
  InitDefaultsResultWithPostingList();
  InitDefaultsResultWithLink();
  InitDefaultsResultWithLinks();
  InitDefaultsResultWithIndex();
  InitDefaultsArgVoid();
  InitDefaultsArgId();
  InitDefaultsArgUrl();
  InitDefaultsArgHash();
  InitDefaultsArgWord();
  InitDefaultsArgHost();
  InitDefaultsArgUrls();
  InitDefaultsArgUrlFile();
  InitDefaultsArgPushBackUrl();
  InitDefaultsArgPostingList();
  InitDefaultsArgSaveLinkOfUrlFile();
  InitDefaultsArgClearAndSaveIndicesOf();
  InitDefaultsArgIndexKey();
}
}  // namespace protobuf_rpc_2eproto
namespace XiaoyaStore {
namespace Service {
class ArgClearAndSaveIndicesOf;
class ArgClearAndSaveIndicesOfDefaultTypeInternal;
extern ArgClearAndSaveIndicesOfDefaultTypeInternal _ArgClearAndSaveIndicesOf_default_instance_;
class ArgHash;
class ArgHashDefaultTypeInternal;
extern ArgHashDefaultTypeInternal _ArgHash_default_instance_;
class ArgHost;
class ArgHostDefaultTypeInternal;
extern ArgHostDefaultTypeInternal _ArgHost_default_instance_;
class ArgId;
class ArgIdDefaultTypeInternal;
extern ArgIdDefaultTypeInternal _ArgId_default_instance_;
class ArgIndexKey;
class ArgIndexKeyDefaultTypeInternal;
extern ArgIndexKeyDefaultTypeInternal _ArgIndexKey_default_instance_;
class ArgPostingList;
class ArgPostingListDefaultTypeInternal;
extern ArgPostingListDefaultTypeInternal _ArgPostingList_default_instance_;
class ArgPushBackUrl;
class ArgPushBackUrlDefaultTypeInternal;
extern ArgPushBackUrlDefaultTypeInternal _ArgPushBackUrl_default_instance_;
class ArgSaveLinkOfUrlFile;
class ArgSaveLinkOfUrlFileDefaultTypeInternal;
extern ArgSaveLinkOfUrlFileDefaultTypeInternal _ArgSaveLinkOfUrlFile_default_instance_;
class ArgUrl;
class ArgUrlDefaultTypeInternal;
extern ArgUrlDefaultTypeInternal _ArgUrl_default_instance_;
class ArgUrlFile;
class ArgUrlFileDefaultTypeInternal;
extern ArgUrlFileDefaultTypeInternal _ArgUrlFile_default_instance_;
class ArgUrls;
class ArgUrlsDefaultTypeInternal;
extern ArgUrlsDefaultTypeInternal _ArgUrls_default_instance_;
class ArgVoid;
class ArgVoidDefaultTypeInternal;
extern ArgVoidDefaultTypeInternal _ArgVoid_default_instance_;
class ArgWord;
class ArgWordDefaultTypeInternal;
extern ArgWordDefaultTypeInternal _ArgWord_default_instance_;
class Result;
class ResultDefaultTypeInternal;
extern ResultDefaultTypeInternal _Result_default_instance_;
class ResultWithCount;
class ResultWithCountDefaultTypeInternal;
extern ResultWithCountDefaultTypeInternal _ResultWithCount_default_instance_;
class ResultWithIndex;
class ResultWithIndexDefaultTypeInternal;
extern ResultWithIndexDefaultTypeInternal _ResultWithIndex_default_instance_;
class ResultWithLink;
class ResultWithLinkDefaultTypeInternal;
extern ResultWithLinkDefaultTypeInternal _ResultWithLink_default_instance_;
class ResultWithLinks;
class ResultWithLinksDefaultTypeInternal;
extern ResultWithLinksDefaultTypeInternal _ResultWithLinks_default_instance_;
class ResultWithPostingList;
class ResultWithPostingListDefaultTypeInternal;
extern ResultWithPostingListDefaultTypeInternal _ResultWithPostingList_default_instance_;
class ResultWithUrl;
class ResultWithUrlDefaultTypeInternal;
extern ResultWithUrlDefaultTypeInternal _ResultWithUrl_default_instance_;
class ResultWithUrlFile;
class ResultWithUrlFileDefaultTypeInternal;
extern ResultWithUrlFileDefaultTypeInternal _ResultWithUrlFile_default_instance_;
class ResultWithUrlFileAndOldId;
class ResultWithUrlFileAndOldIdDefaultTypeInternal;
extern ResultWithUrlFileAndOldIdDefaultTypeInternal _ResultWithUrlFileAndOldId_default_instance_;
class ResultWithUrlFiles;
class ResultWithUrlFilesDefaultTypeInternal;
extern ResultWithUrlFilesDefaultTypeInternal _ResultWithUrlFiles_default_instance_;
}  // namespace Service
}  // namespace XiaoyaStore
namespace XiaoyaStore {
namespace Service {

// ===================================================================

class Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.Result) */ {
 public:
  Result();
  virtual ~Result();

  Result(const Result& from);

  inline Result& operator=(const Result& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Result(Result&& from) noexcept
    : Result() {
    *this = ::std::move(from);
  }

  inline Result& operator=(Result&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Result& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Result* internal_default_instance() {
    return reinterpret_cast<const Result*>(
               &_Result_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Result* other);
  friend void swap(Result& a, Result& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Result* New() const PROTOBUF_FINAL { return New(NULL); }

  Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Result& from);
  void MergeFrom(const Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_successful = 1;
  void clear_is_successful();
  static const int kIsSuccessfulFieldNumber = 1;
  bool is_successful() const;
  void set_is_successful(bool value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.Result)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_successful_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsResultImpl();
};
// -------------------------------------------------------------------

class ResultWithUrl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ResultWithUrl) */ {
 public:
  ResultWithUrl();
  virtual ~ResultWithUrl();

  ResultWithUrl(const ResultWithUrl& from);

  inline ResultWithUrl& operator=(const ResultWithUrl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResultWithUrl(ResultWithUrl&& from) noexcept
    : ResultWithUrl() {
    *this = ::std::move(from);
  }

  inline ResultWithUrl& operator=(ResultWithUrl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResultWithUrl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResultWithUrl* internal_default_instance() {
    return reinterpret_cast<const ResultWithUrl*>(
               &_ResultWithUrl_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ResultWithUrl* other);
  friend void swap(ResultWithUrl& a, ResultWithUrl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResultWithUrl* New() const PROTOBUF_FINAL { return New(NULL); }

  ResultWithUrl* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResultWithUrl& from);
  void MergeFrom(const ResultWithUrl& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResultWithUrl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string url = 2;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // bool is_successful = 1;
  void clear_is_successful();
  static const int kIsSuccessfulFieldNumber = 1;
  bool is_successful() const;
  void set_is_successful(bool value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ResultWithUrl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  bool is_successful_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsResultWithUrlImpl();
};
// -------------------------------------------------------------------

class ResultWithCount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ResultWithCount) */ {
 public:
  ResultWithCount();
  virtual ~ResultWithCount();

  ResultWithCount(const ResultWithCount& from);

  inline ResultWithCount& operator=(const ResultWithCount& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResultWithCount(ResultWithCount&& from) noexcept
    : ResultWithCount() {
    *this = ::std::move(from);
  }

  inline ResultWithCount& operator=(ResultWithCount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResultWithCount& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResultWithCount* internal_default_instance() {
    return reinterpret_cast<const ResultWithCount*>(
               &_ResultWithCount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ResultWithCount* other);
  friend void swap(ResultWithCount& a, ResultWithCount& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResultWithCount* New() const PROTOBUF_FINAL { return New(NULL); }

  ResultWithCount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResultWithCount& from);
  void MergeFrom(const ResultWithCount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResultWithCount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint64 count() const;
  void set_count(::google::protobuf::uint64 value);

  // bool is_successful = 1;
  void clear_is_successful();
  static const int kIsSuccessfulFieldNumber = 1;
  bool is_successful() const;
  void set_is_successful(bool value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ResultWithCount)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 count_;
  bool is_successful_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsResultWithCountImpl();
};
// -------------------------------------------------------------------

class ResultWithUrlFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ResultWithUrlFile) */ {
 public:
  ResultWithUrlFile();
  virtual ~ResultWithUrlFile();

  ResultWithUrlFile(const ResultWithUrlFile& from);

  inline ResultWithUrlFile& operator=(const ResultWithUrlFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResultWithUrlFile(ResultWithUrlFile&& from) noexcept
    : ResultWithUrlFile() {
    *this = ::std::move(from);
  }

  inline ResultWithUrlFile& operator=(ResultWithUrlFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResultWithUrlFile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResultWithUrlFile* internal_default_instance() {
    return reinterpret_cast<const ResultWithUrlFile*>(
               &_ResultWithUrlFile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ResultWithUrlFile* other);
  friend void swap(ResultWithUrlFile& a, ResultWithUrlFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResultWithUrlFile* New() const PROTOBUF_FINAL { return New(NULL); }

  ResultWithUrlFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResultWithUrlFile& from);
  void MergeFrom(const ResultWithUrlFile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResultWithUrlFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .XiaoyaStore.Model.UrlFile urlfile = 2;
  bool has_urlfile() const;
  void clear_urlfile();
  static const int kUrlfileFieldNumber = 2;
  const ::XiaoyaStore::Model::UrlFile& urlfile() const;
  ::XiaoyaStore::Model::UrlFile* release_urlfile();
  ::XiaoyaStore::Model::UrlFile* mutable_urlfile();
  void set_allocated_urlfile(::XiaoyaStore::Model::UrlFile* urlfile);

  // bool is_successful = 1;
  void clear_is_successful();
  static const int kIsSuccessfulFieldNumber = 1;
  bool is_successful() const;
  void set_is_successful(bool value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ResultWithUrlFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::XiaoyaStore::Model::UrlFile* urlfile_;
  bool is_successful_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsResultWithUrlFileImpl();
};
// -------------------------------------------------------------------

class ResultWithUrlFiles : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ResultWithUrlFiles) */ {
 public:
  ResultWithUrlFiles();
  virtual ~ResultWithUrlFiles();

  ResultWithUrlFiles(const ResultWithUrlFiles& from);

  inline ResultWithUrlFiles& operator=(const ResultWithUrlFiles& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResultWithUrlFiles(ResultWithUrlFiles&& from) noexcept
    : ResultWithUrlFiles() {
    *this = ::std::move(from);
  }

  inline ResultWithUrlFiles& operator=(ResultWithUrlFiles&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResultWithUrlFiles& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResultWithUrlFiles* internal_default_instance() {
    return reinterpret_cast<const ResultWithUrlFiles*>(
               &_ResultWithUrlFiles_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ResultWithUrlFiles* other);
  friend void swap(ResultWithUrlFiles& a, ResultWithUrlFiles& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResultWithUrlFiles* New() const PROTOBUF_FINAL { return New(NULL); }

  ResultWithUrlFiles* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResultWithUrlFiles& from);
  void MergeFrom(const ResultWithUrlFiles& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResultWithUrlFiles* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XiaoyaStore.Model.UrlFile urlfiles = 2;
  int urlfiles_size() const;
  void clear_urlfiles();
  static const int kUrlfilesFieldNumber = 2;
  const ::XiaoyaStore::Model::UrlFile& urlfiles(int index) const;
  ::XiaoyaStore::Model::UrlFile* mutable_urlfiles(int index);
  ::XiaoyaStore::Model::UrlFile* add_urlfiles();
  ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::UrlFile >*
      mutable_urlfiles();
  const ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::UrlFile >&
      urlfiles() const;

  // bool is_successful = 1;
  void clear_is_successful();
  static const int kIsSuccessfulFieldNumber = 1;
  bool is_successful() const;
  void set_is_successful(bool value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ResultWithUrlFiles)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::UrlFile > urlfiles_;
  bool is_successful_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsResultWithUrlFilesImpl();
};
// -------------------------------------------------------------------

class ResultWithUrlFileAndOldId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ResultWithUrlFileAndOldId) */ {
 public:
  ResultWithUrlFileAndOldId();
  virtual ~ResultWithUrlFileAndOldId();

  ResultWithUrlFileAndOldId(const ResultWithUrlFileAndOldId& from);

  inline ResultWithUrlFileAndOldId& operator=(const ResultWithUrlFileAndOldId& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResultWithUrlFileAndOldId(ResultWithUrlFileAndOldId&& from) noexcept
    : ResultWithUrlFileAndOldId() {
    *this = ::std::move(from);
  }

  inline ResultWithUrlFileAndOldId& operator=(ResultWithUrlFileAndOldId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResultWithUrlFileAndOldId& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResultWithUrlFileAndOldId* internal_default_instance() {
    return reinterpret_cast<const ResultWithUrlFileAndOldId*>(
               &_ResultWithUrlFileAndOldId_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ResultWithUrlFileAndOldId* other);
  friend void swap(ResultWithUrlFileAndOldId& a, ResultWithUrlFileAndOldId& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResultWithUrlFileAndOldId* New() const PROTOBUF_FINAL { return New(NULL); }

  ResultWithUrlFileAndOldId* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResultWithUrlFileAndOldId& from);
  void MergeFrom(const ResultWithUrlFileAndOldId& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResultWithUrlFileAndOldId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .XiaoyaStore.Model.UrlFile urlfile = 3;
  bool has_urlfile() const;
  void clear_urlfile();
  static const int kUrlfileFieldNumber = 3;
  const ::XiaoyaStore::Model::UrlFile& urlfile() const;
  ::XiaoyaStore::Model::UrlFile* release_urlfile();
  ::XiaoyaStore::Model::UrlFile* mutable_urlfile();
  void set_allocated_urlfile(::XiaoyaStore::Model::UrlFile* urlfile);

  // uint64 old_urlfile_id = 2;
  void clear_old_urlfile_id();
  static const int kOldUrlfileIdFieldNumber = 2;
  ::google::protobuf::uint64 old_urlfile_id() const;
  void set_old_urlfile_id(::google::protobuf::uint64 value);

  // bool is_successful = 1;
  void clear_is_successful();
  static const int kIsSuccessfulFieldNumber = 1;
  bool is_successful() const;
  void set_is_successful(bool value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ResultWithUrlFileAndOldId)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::XiaoyaStore::Model::UrlFile* urlfile_;
  ::google::protobuf::uint64 old_urlfile_id_;
  bool is_successful_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsResultWithUrlFileAndOldIdImpl();
};
// -------------------------------------------------------------------

class ResultWithPostingList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ResultWithPostingList) */ {
 public:
  ResultWithPostingList();
  virtual ~ResultWithPostingList();

  ResultWithPostingList(const ResultWithPostingList& from);

  inline ResultWithPostingList& operator=(const ResultWithPostingList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResultWithPostingList(ResultWithPostingList&& from) noexcept
    : ResultWithPostingList() {
    *this = ::std::move(from);
  }

  inline ResultWithPostingList& operator=(ResultWithPostingList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResultWithPostingList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResultWithPostingList* internal_default_instance() {
    return reinterpret_cast<const ResultWithPostingList*>(
               &_ResultWithPostingList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ResultWithPostingList* other);
  friend void swap(ResultWithPostingList& a, ResultWithPostingList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResultWithPostingList* New() const PROTOBUF_FINAL { return New(NULL); }

  ResultWithPostingList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResultWithPostingList& from);
  void MergeFrom(const ResultWithPostingList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResultWithPostingList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .XiaoyaStore.Model.PostingList postinglist = 2;
  bool has_postinglist() const;
  void clear_postinglist();
  static const int kPostinglistFieldNumber = 2;
  const ::XiaoyaStore::Model::PostingList& postinglist() const;
  ::XiaoyaStore::Model::PostingList* release_postinglist();
  ::XiaoyaStore::Model::PostingList* mutable_postinglist();
  void set_allocated_postinglist(::XiaoyaStore::Model::PostingList* postinglist);

  // bool is_successful = 1;
  void clear_is_successful();
  static const int kIsSuccessfulFieldNumber = 1;
  bool is_successful() const;
  void set_is_successful(bool value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ResultWithPostingList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::XiaoyaStore::Model::PostingList* postinglist_;
  bool is_successful_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsResultWithPostingListImpl();
};
// -------------------------------------------------------------------

class ResultWithLink : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ResultWithLink) */ {
 public:
  ResultWithLink();
  virtual ~ResultWithLink();

  ResultWithLink(const ResultWithLink& from);

  inline ResultWithLink& operator=(const ResultWithLink& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResultWithLink(ResultWithLink&& from) noexcept
    : ResultWithLink() {
    *this = ::std::move(from);
  }

  inline ResultWithLink& operator=(ResultWithLink&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResultWithLink& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResultWithLink* internal_default_instance() {
    return reinterpret_cast<const ResultWithLink*>(
               &_ResultWithLink_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ResultWithLink* other);
  friend void swap(ResultWithLink& a, ResultWithLink& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResultWithLink* New() const PROTOBUF_FINAL { return New(NULL); }

  ResultWithLink* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResultWithLink& from);
  void MergeFrom(const ResultWithLink& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResultWithLink* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .XiaoyaStore.Model.Link link = 2;
  bool has_link() const;
  void clear_link();
  static const int kLinkFieldNumber = 2;
  const ::XiaoyaStore::Model::Link& link() const;
  ::XiaoyaStore::Model::Link* release_link();
  ::XiaoyaStore::Model::Link* mutable_link();
  void set_allocated_link(::XiaoyaStore::Model::Link* link);

  // bool is_successful = 1;
  void clear_is_successful();
  static const int kIsSuccessfulFieldNumber = 1;
  bool is_successful() const;
  void set_is_successful(bool value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ResultWithLink)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::XiaoyaStore::Model::Link* link_;
  bool is_successful_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsResultWithLinkImpl();
};
// -------------------------------------------------------------------

class ResultWithLinks : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ResultWithLinks) */ {
 public:
  ResultWithLinks();
  virtual ~ResultWithLinks();

  ResultWithLinks(const ResultWithLinks& from);

  inline ResultWithLinks& operator=(const ResultWithLinks& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResultWithLinks(ResultWithLinks&& from) noexcept
    : ResultWithLinks() {
    *this = ::std::move(from);
  }

  inline ResultWithLinks& operator=(ResultWithLinks&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResultWithLinks& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResultWithLinks* internal_default_instance() {
    return reinterpret_cast<const ResultWithLinks*>(
               &_ResultWithLinks_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ResultWithLinks* other);
  friend void swap(ResultWithLinks& a, ResultWithLinks& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResultWithLinks* New() const PROTOBUF_FINAL { return New(NULL); }

  ResultWithLinks* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResultWithLinks& from);
  void MergeFrom(const ResultWithLinks& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResultWithLinks* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XiaoyaStore.Model.Link links = 2;
  int links_size() const;
  void clear_links();
  static const int kLinksFieldNumber = 2;
  const ::XiaoyaStore::Model::Link& links(int index) const;
  ::XiaoyaStore::Model::Link* mutable_links(int index);
  ::XiaoyaStore::Model::Link* add_links();
  ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Link >*
      mutable_links();
  const ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Link >&
      links() const;

  // bool is_successful = 1;
  void clear_is_successful();
  static const int kIsSuccessfulFieldNumber = 1;
  bool is_successful() const;
  void set_is_successful(bool value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ResultWithLinks)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Link > links_;
  bool is_successful_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsResultWithLinksImpl();
};
// -------------------------------------------------------------------

class ResultWithIndex : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ResultWithIndex) */ {
 public:
  ResultWithIndex();
  virtual ~ResultWithIndex();

  ResultWithIndex(const ResultWithIndex& from);

  inline ResultWithIndex& operator=(const ResultWithIndex& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResultWithIndex(ResultWithIndex&& from) noexcept
    : ResultWithIndex() {
    *this = ::std::move(from);
  }

  inline ResultWithIndex& operator=(ResultWithIndex&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResultWithIndex& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResultWithIndex* internal_default_instance() {
    return reinterpret_cast<const ResultWithIndex*>(
               &_ResultWithIndex_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ResultWithIndex* other);
  friend void swap(ResultWithIndex& a, ResultWithIndex& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResultWithIndex* New() const PROTOBUF_FINAL { return New(NULL); }

  ResultWithIndex* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResultWithIndex& from);
  void MergeFrom(const ResultWithIndex& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResultWithIndex* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .XiaoyaStore.Model.Index index = 2;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  const ::XiaoyaStore::Model::Index& index() const;
  ::XiaoyaStore::Model::Index* release_index();
  ::XiaoyaStore::Model::Index* mutable_index();
  void set_allocated_index(::XiaoyaStore::Model::Index* index);

  // bool is_successful = 1;
  void clear_is_successful();
  static const int kIsSuccessfulFieldNumber = 1;
  bool is_successful() const;
  void set_is_successful(bool value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ResultWithIndex)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::XiaoyaStore::Model::Index* index_;
  bool is_successful_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsResultWithIndexImpl();
};
// -------------------------------------------------------------------

class ArgVoid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ArgVoid) */ {
 public:
  ArgVoid();
  virtual ~ArgVoid();

  ArgVoid(const ArgVoid& from);

  inline ArgVoid& operator=(const ArgVoid& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArgVoid(ArgVoid&& from) noexcept
    : ArgVoid() {
    *this = ::std::move(from);
  }

  inline ArgVoid& operator=(ArgVoid&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArgVoid& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArgVoid* internal_default_instance() {
    return reinterpret_cast<const ArgVoid*>(
               &_ArgVoid_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(ArgVoid* other);
  friend void swap(ArgVoid& a, ArgVoid& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArgVoid* New() const PROTOBUF_FINAL { return New(NULL); }

  ArgVoid* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArgVoid& from);
  void MergeFrom(const ArgVoid& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArgVoid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ArgVoid)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsArgVoidImpl();
};
// -------------------------------------------------------------------

class ArgId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ArgId) */ {
 public:
  ArgId();
  virtual ~ArgId();

  ArgId(const ArgId& from);

  inline ArgId& operator=(const ArgId& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArgId(ArgId&& from) noexcept
    : ArgId() {
    *this = ::std::move(from);
  }

  inline ArgId& operator=(ArgId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArgId& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArgId* internal_default_instance() {
    return reinterpret_cast<const ArgId*>(
               &_ArgId_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(ArgId* other);
  friend void swap(ArgId& a, ArgId& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArgId* New() const PROTOBUF_FINAL { return New(NULL); }

  ArgId* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArgId& from);
  void MergeFrom(const ArgId& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArgId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ArgId)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsArgIdImpl();
};
// -------------------------------------------------------------------

class ArgUrl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ArgUrl) */ {
 public:
  ArgUrl();
  virtual ~ArgUrl();

  ArgUrl(const ArgUrl& from);

  inline ArgUrl& operator=(const ArgUrl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArgUrl(ArgUrl&& from) noexcept
    : ArgUrl() {
    *this = ::std::move(from);
  }

  inline ArgUrl& operator=(ArgUrl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArgUrl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArgUrl* internal_default_instance() {
    return reinterpret_cast<const ArgUrl*>(
               &_ArgUrl_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(ArgUrl* other);
  friend void swap(ArgUrl& a, ArgUrl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArgUrl* New() const PROTOBUF_FINAL { return New(NULL); }

  ArgUrl* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArgUrl& from);
  void MergeFrom(const ArgUrl& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArgUrl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string url = 1;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ArgUrl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsArgUrlImpl();
};
// -------------------------------------------------------------------

class ArgHash : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ArgHash) */ {
 public:
  ArgHash();
  virtual ~ArgHash();

  ArgHash(const ArgHash& from);

  inline ArgHash& operator=(const ArgHash& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArgHash(ArgHash&& from) noexcept
    : ArgHash() {
    *this = ::std::move(from);
  }

  inline ArgHash& operator=(ArgHash&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArgHash& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArgHash* internal_default_instance() {
    return reinterpret_cast<const ArgHash*>(
               &_ArgHash_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ArgHash* other);
  friend void swap(ArgHash& a, ArgHash& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArgHash* New() const PROTOBUF_FINAL { return New(NULL); }

  ArgHash* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArgHash& from);
  void MergeFrom(const ArgHash& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArgHash* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string hash = 1;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_hash(::std::string&& value);
  #endif
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ArgHash)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsArgHashImpl();
};
// -------------------------------------------------------------------

class ArgWord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ArgWord) */ {
 public:
  ArgWord();
  virtual ~ArgWord();

  ArgWord(const ArgWord& from);

  inline ArgWord& operator=(const ArgWord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArgWord(ArgWord&& from) noexcept
    : ArgWord() {
    *this = ::std::move(from);
  }

  inline ArgWord& operator=(ArgWord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArgWord& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArgWord* internal_default_instance() {
    return reinterpret_cast<const ArgWord*>(
               &_ArgWord_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(ArgWord* other);
  friend void swap(ArgWord& a, ArgWord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArgWord* New() const PROTOBUF_FINAL { return New(NULL); }

  ArgWord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArgWord& from);
  void MergeFrom(const ArgWord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArgWord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string word = 1;
  void clear_word();
  static const int kWordFieldNumber = 1;
  const ::std::string& word() const;
  void set_word(const ::std::string& value);
  #if LANG_CXX11
  void set_word(::std::string&& value);
  #endif
  void set_word(const char* value);
  void set_word(const char* value, size_t size);
  ::std::string* mutable_word();
  ::std::string* release_word();
  void set_allocated_word(::std::string* word);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ArgWord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr word_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsArgWordImpl();
};
// -------------------------------------------------------------------

class ArgHost : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ArgHost) */ {
 public:
  ArgHost();
  virtual ~ArgHost();

  ArgHost(const ArgHost& from);

  inline ArgHost& operator=(const ArgHost& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArgHost(ArgHost&& from) noexcept
    : ArgHost() {
    *this = ::std::move(from);
  }

  inline ArgHost& operator=(ArgHost&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArgHost& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArgHost* internal_default_instance() {
    return reinterpret_cast<const ArgHost*>(
               &_ArgHost_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(ArgHost* other);
  friend void swap(ArgHost& a, ArgHost& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArgHost* New() const PROTOBUF_FINAL { return New(NULL); }

  ArgHost* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArgHost& from);
  void MergeFrom(const ArgHost& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArgHost* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string host = 1;
  void clear_host();
  static const int kHostFieldNumber = 1;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ArgHost)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsArgHostImpl();
};
// -------------------------------------------------------------------

class ArgUrls : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ArgUrls) */ {
 public:
  ArgUrls();
  virtual ~ArgUrls();

  ArgUrls(const ArgUrls& from);

  inline ArgUrls& operator=(const ArgUrls& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArgUrls(ArgUrls&& from) noexcept
    : ArgUrls() {
    *this = ::std::move(from);
  }

  inline ArgUrls& operator=(ArgUrls&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArgUrls& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArgUrls* internal_default_instance() {
    return reinterpret_cast<const ArgUrls*>(
               &_ArgUrls_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(ArgUrls* other);
  friend void swap(ArgUrls& a, ArgUrls& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArgUrls* New() const PROTOBUF_FINAL { return New(NULL); }

  ArgUrls* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArgUrls& from);
  void MergeFrom(const ArgUrls& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArgUrls* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string urls = 1;
  int urls_size() const;
  void clear_urls();
  static const int kUrlsFieldNumber = 1;
  const ::std::string& urls(int index) const;
  ::std::string* mutable_urls(int index);
  void set_urls(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_urls(int index, ::std::string&& value);
  #endif
  void set_urls(int index, const char* value);
  void set_urls(int index, const char* value, size_t size);
  ::std::string* add_urls();
  void add_urls(const ::std::string& value);
  #if LANG_CXX11
  void add_urls(::std::string&& value);
  #endif
  void add_urls(const char* value);
  void add_urls(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& urls() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_urls();

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ArgUrls)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> urls_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsArgUrlsImpl();
};
// -------------------------------------------------------------------

class ArgUrlFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ArgUrlFile) */ {
 public:
  ArgUrlFile();
  virtual ~ArgUrlFile();

  ArgUrlFile(const ArgUrlFile& from);

  inline ArgUrlFile& operator=(const ArgUrlFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArgUrlFile(ArgUrlFile&& from) noexcept
    : ArgUrlFile() {
    *this = ::std::move(from);
  }

  inline ArgUrlFile& operator=(ArgUrlFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArgUrlFile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArgUrlFile* internal_default_instance() {
    return reinterpret_cast<const ArgUrlFile*>(
               &_ArgUrlFile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(ArgUrlFile* other);
  friend void swap(ArgUrlFile& a, ArgUrlFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArgUrlFile* New() const PROTOBUF_FINAL { return New(NULL); }

  ArgUrlFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArgUrlFile& from);
  void MergeFrom(const ArgUrlFile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArgUrlFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .XiaoyaStore.Model.UrlFile urlfile = 1;
  bool has_urlfile() const;
  void clear_urlfile();
  static const int kUrlfileFieldNumber = 1;
  const ::XiaoyaStore::Model::UrlFile& urlfile() const;
  ::XiaoyaStore::Model::UrlFile* release_urlfile();
  ::XiaoyaStore::Model::UrlFile* mutable_urlfile();
  void set_allocated_urlfile(::XiaoyaStore::Model::UrlFile* urlfile);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ArgUrlFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::XiaoyaStore::Model::UrlFile* urlfile_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsArgUrlFileImpl();
};
// -------------------------------------------------------------------

class ArgPushBackUrl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ArgPushBackUrl) */ {
 public:
  ArgPushBackUrl();
  virtual ~ArgPushBackUrl();

  ArgPushBackUrl(const ArgPushBackUrl& from);

  inline ArgPushBackUrl& operator=(const ArgPushBackUrl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArgPushBackUrl(ArgPushBackUrl&& from) noexcept
    : ArgPushBackUrl() {
    *this = ::std::move(from);
  }

  inline ArgPushBackUrl& operator=(ArgPushBackUrl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArgPushBackUrl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArgPushBackUrl* internal_default_instance() {
    return reinterpret_cast<const ArgPushBackUrl*>(
               &_ArgPushBackUrl_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(ArgPushBackUrl* other);
  friend void swap(ArgPushBackUrl& a, ArgPushBackUrl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArgPushBackUrl* New() const PROTOBUF_FINAL { return New(NULL); }

  ArgPushBackUrl* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArgPushBackUrl& from);
  void MergeFrom(const ArgPushBackUrl& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArgPushBackUrl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string url = 1;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // uint64 update_interval = 2;
  void clear_update_interval();
  static const int kUpdateIntervalFieldNumber = 2;
  ::google::protobuf::uint64 update_interval() const;
  void set_update_interval(::google::protobuf::uint64 value);

  // bool failed = 3;
  void clear_failed();
  static const int kFailedFieldNumber = 3;
  bool failed() const;
  void set_failed(bool value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ArgPushBackUrl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint64 update_interval_;
  bool failed_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsArgPushBackUrlImpl();
};
// -------------------------------------------------------------------

class ArgPostingList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ArgPostingList) */ {
 public:
  ArgPostingList();
  virtual ~ArgPostingList();

  ArgPostingList(const ArgPostingList& from);

  inline ArgPostingList& operator=(const ArgPostingList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArgPostingList(ArgPostingList&& from) noexcept
    : ArgPostingList() {
    *this = ::std::move(from);
  }

  inline ArgPostingList& operator=(ArgPostingList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArgPostingList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArgPostingList* internal_default_instance() {
    return reinterpret_cast<const ArgPostingList*>(
               &_ArgPostingList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(ArgPostingList* other);
  friend void swap(ArgPostingList& a, ArgPostingList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArgPostingList* New() const PROTOBUF_FINAL { return New(NULL); }

  ArgPostingList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArgPostingList& from);
  void MergeFrom(const ArgPostingList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArgPostingList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .XiaoyaStore.Model.PostingList postinglist = 1;
  bool has_postinglist() const;
  void clear_postinglist();
  static const int kPostinglistFieldNumber = 1;
  const ::XiaoyaStore::Model::PostingList& postinglist() const;
  ::XiaoyaStore::Model::PostingList* release_postinglist();
  ::XiaoyaStore::Model::PostingList* mutable_postinglist();
  void set_allocated_postinglist(::XiaoyaStore::Model::PostingList* postinglist);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ArgPostingList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::XiaoyaStore::Model::PostingList* postinglist_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsArgPostingListImpl();
};
// -------------------------------------------------------------------

class ArgSaveLinkOfUrlFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ArgSaveLinkOfUrlFile) */ {
 public:
  ArgSaveLinkOfUrlFile();
  virtual ~ArgSaveLinkOfUrlFile();

  ArgSaveLinkOfUrlFile(const ArgSaveLinkOfUrlFile& from);

  inline ArgSaveLinkOfUrlFile& operator=(const ArgSaveLinkOfUrlFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArgSaveLinkOfUrlFile(ArgSaveLinkOfUrlFile&& from) noexcept
    : ArgSaveLinkOfUrlFile() {
    *this = ::std::move(from);
  }

  inline ArgSaveLinkOfUrlFile& operator=(ArgSaveLinkOfUrlFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArgSaveLinkOfUrlFile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArgSaveLinkOfUrlFile* internal_default_instance() {
    return reinterpret_cast<const ArgSaveLinkOfUrlFile*>(
               &_ArgSaveLinkOfUrlFile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(ArgSaveLinkOfUrlFile* other);
  friend void swap(ArgSaveLinkOfUrlFile& a, ArgSaveLinkOfUrlFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArgSaveLinkOfUrlFile* New() const PROTOBUF_FINAL { return New(NULL); }

  ArgSaveLinkOfUrlFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArgSaveLinkOfUrlFile& from);
  void MergeFrom(const ArgSaveLinkOfUrlFile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArgSaveLinkOfUrlFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XiaoyaStore.Model.Link links = 3;
  int links_size() const;
  void clear_links();
  static const int kLinksFieldNumber = 3;
  const ::XiaoyaStore::Model::Link& links(int index) const;
  ::XiaoyaStore::Model::Link* mutable_links(int index);
  ::XiaoyaStore::Model::Link* add_links();
  ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Link >*
      mutable_links();
  const ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Link >&
      links() const;

  // uint64 urlfile_id = 1;
  void clear_urlfile_id();
  static const int kUrlfileIdFieldNumber = 1;
  ::google::protobuf::uint64 urlfile_id() const;
  void set_urlfile_id(::google::protobuf::uint64 value);

  // uint64 old_urlfile_id = 2;
  void clear_old_urlfile_id();
  static const int kOldUrlfileIdFieldNumber = 2;
  ::google::protobuf::uint64 old_urlfile_id() const;
  void set_old_urlfile_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ArgSaveLinkOfUrlFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Link > links_;
  ::google::protobuf::uint64 urlfile_id_;
  ::google::protobuf::uint64 old_urlfile_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsArgSaveLinkOfUrlFileImpl();
};
// -------------------------------------------------------------------

class ArgClearAndSaveIndicesOf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ArgClearAndSaveIndicesOf) */ {
 public:
  ArgClearAndSaveIndicesOf();
  virtual ~ArgClearAndSaveIndicesOf();

  ArgClearAndSaveIndicesOf(const ArgClearAndSaveIndicesOf& from);

  inline ArgClearAndSaveIndicesOf& operator=(const ArgClearAndSaveIndicesOf& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArgClearAndSaveIndicesOf(ArgClearAndSaveIndicesOf&& from) noexcept
    : ArgClearAndSaveIndicesOf() {
    *this = ::std::move(from);
  }

  inline ArgClearAndSaveIndicesOf& operator=(ArgClearAndSaveIndicesOf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArgClearAndSaveIndicesOf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArgClearAndSaveIndicesOf* internal_default_instance() {
    return reinterpret_cast<const ArgClearAndSaveIndicesOf*>(
               &_ArgClearAndSaveIndicesOf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(ArgClearAndSaveIndicesOf* other);
  friend void swap(ArgClearAndSaveIndicesOf& a, ArgClearAndSaveIndicesOf& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArgClearAndSaveIndicesOf* New() const PROTOBUF_FINAL { return New(NULL); }

  ArgClearAndSaveIndicesOf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArgClearAndSaveIndicesOf& from);
  void MergeFrom(const ArgClearAndSaveIndicesOf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArgClearAndSaveIndicesOf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XiaoyaStore.Model.Index indices = 3;
  int indices_size() const;
  void clear_indices();
  static const int kIndicesFieldNumber = 3;
  const ::XiaoyaStore::Model::Index& indices(int index) const;
  ::XiaoyaStore::Model::Index* mutable_indices(int index);
  ::XiaoyaStore::Model::Index* add_indices();
  ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Index >*
      mutable_indices();
  const ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Index >&
      indices() const;

  // uint64 urlfile_id = 1;
  void clear_urlfile_id();
  static const int kUrlfileIdFieldNumber = 1;
  ::google::protobuf::uint64 urlfile_id() const;
  void set_urlfile_id(::google::protobuf::uint64 value);

  // uint64 old_urlfile_id = 2;
  void clear_old_urlfile_id();
  static const int kOldUrlfileIdFieldNumber = 2;
  ::google::protobuf::uint64 old_urlfile_id() const;
  void set_old_urlfile_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ArgClearAndSaveIndicesOf)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Index > indices_;
  ::google::protobuf::uint64 urlfile_id_;
  ::google::protobuf::uint64 old_urlfile_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsArgClearAndSaveIndicesOfImpl();
};
// -------------------------------------------------------------------

class ArgIndexKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Service.ArgIndexKey) */ {
 public:
  ArgIndexKey();
  virtual ~ArgIndexKey();

  ArgIndexKey(const ArgIndexKey& from);

  inline ArgIndexKey& operator=(const ArgIndexKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArgIndexKey(ArgIndexKey&& from) noexcept
    : ArgIndexKey() {
    *this = ::std::move(from);
  }

  inline ArgIndexKey& operator=(ArgIndexKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArgIndexKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArgIndexKey* internal_default_instance() {
    return reinterpret_cast<const ArgIndexKey*>(
               &_ArgIndexKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(ArgIndexKey* other);
  friend void swap(ArgIndexKey& a, ArgIndexKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArgIndexKey* New() const PROTOBUF_FINAL { return New(NULL); }

  ArgIndexKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArgIndexKey& from);
  void MergeFrom(const ArgIndexKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArgIndexKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string word = 2;
  void clear_word();
  static const int kWordFieldNumber = 2;
  const ::std::string& word() const;
  void set_word(const ::std::string& value);
  #if LANG_CXX11
  void set_word(::std::string&& value);
  #endif
  void set_word(const char* value);
  void set_word(const char* value, size_t size);
  ::std::string* mutable_word();
  ::std::string* release_word();
  void set_allocated_word(::std::string* word);

  // uint64 urlfile_id = 1;
  void clear_urlfile_id();
  static const int kUrlfileIdFieldNumber = 1;
  ::google::protobuf::uint64 urlfile_id() const;
  void set_urlfile_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Service.ArgIndexKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr word_;
  ::google::protobuf::uint64 urlfile_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_rpc_2eproto::TableStruct;
  friend void ::protobuf_rpc_2eproto::InitDefaultsArgIndexKeyImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Result

// bool is_successful = 1;
inline void Result::clear_is_successful() {
  is_successful_ = false;
}
inline bool Result::is_successful() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.Result.is_successful)
  return is_successful_;
}
inline void Result::set_is_successful(bool value) {
  
  is_successful_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.Result.is_successful)
}

// -------------------------------------------------------------------

// ResultWithUrl

// bool is_successful = 1;
inline void ResultWithUrl::clear_is_successful() {
  is_successful_ = false;
}
inline bool ResultWithUrl::is_successful() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithUrl.is_successful)
  return is_successful_;
}
inline void ResultWithUrl::set_is_successful(bool value) {
  
  is_successful_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ResultWithUrl.is_successful)
}

// string url = 2;
inline void ResultWithUrl::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResultWithUrl::url() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithUrl.url)
  return url_.GetNoArena();
}
inline void ResultWithUrl::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ResultWithUrl.url)
}
#if LANG_CXX11
inline void ResultWithUrl::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Service.ResultWithUrl.url)
}
#endif
inline void ResultWithUrl::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Service.ResultWithUrl.url)
}
inline void ResultWithUrl::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Service.ResultWithUrl.url)
}
inline ::std::string* ResultWithUrl::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ResultWithUrl.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResultWithUrl::release_url() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Service.ResultWithUrl.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResultWithUrl::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Service.ResultWithUrl.url)
}

// -------------------------------------------------------------------

// ResultWithCount

// bool is_successful = 1;
inline void ResultWithCount::clear_is_successful() {
  is_successful_ = false;
}
inline bool ResultWithCount::is_successful() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithCount.is_successful)
  return is_successful_;
}
inline void ResultWithCount::set_is_successful(bool value) {
  
  is_successful_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ResultWithCount.is_successful)
}

// uint64 count = 2;
inline void ResultWithCount::clear_count() {
  count_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ResultWithCount::count() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithCount.count)
  return count_;
}
inline void ResultWithCount::set_count(::google::protobuf::uint64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ResultWithCount.count)
}

// -------------------------------------------------------------------

// ResultWithUrlFile

// bool is_successful = 1;
inline void ResultWithUrlFile::clear_is_successful() {
  is_successful_ = false;
}
inline bool ResultWithUrlFile::is_successful() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithUrlFile.is_successful)
  return is_successful_;
}
inline void ResultWithUrlFile::set_is_successful(bool value) {
  
  is_successful_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ResultWithUrlFile.is_successful)
}

// .XiaoyaStore.Model.UrlFile urlfile = 2;
inline bool ResultWithUrlFile::has_urlfile() const {
  return this != internal_default_instance() && urlfile_ != NULL;
}
inline const ::XiaoyaStore::Model::UrlFile& ResultWithUrlFile::urlfile() const {
  const ::XiaoyaStore::Model::UrlFile* p = urlfile_;
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithUrlFile.urlfile)
  return p != NULL ? *p : *reinterpret_cast<const ::XiaoyaStore::Model::UrlFile*>(
      &::XiaoyaStore::Model::_UrlFile_default_instance_);
}
inline ::XiaoyaStore::Model::UrlFile* ResultWithUrlFile::release_urlfile() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Service.ResultWithUrlFile.urlfile)
  
  ::XiaoyaStore::Model::UrlFile* temp = urlfile_;
  urlfile_ = NULL;
  return temp;
}
inline ::XiaoyaStore::Model::UrlFile* ResultWithUrlFile::mutable_urlfile() {
  
  if (urlfile_ == NULL) {
    urlfile_ = new ::XiaoyaStore::Model::UrlFile;
  }
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ResultWithUrlFile.urlfile)
  return urlfile_;
}
inline void ResultWithUrlFile::set_allocated_urlfile(::XiaoyaStore::Model::UrlFile* urlfile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(urlfile_);
  }
  if (urlfile) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      urlfile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, urlfile, submessage_arena);
    }
    
  } else {
    
  }
  urlfile_ = urlfile;
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Service.ResultWithUrlFile.urlfile)
}

// -------------------------------------------------------------------

// ResultWithUrlFiles

// bool is_successful = 1;
inline void ResultWithUrlFiles::clear_is_successful() {
  is_successful_ = false;
}
inline bool ResultWithUrlFiles::is_successful() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithUrlFiles.is_successful)
  return is_successful_;
}
inline void ResultWithUrlFiles::set_is_successful(bool value) {
  
  is_successful_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ResultWithUrlFiles.is_successful)
}

// repeated .XiaoyaStore.Model.UrlFile urlfiles = 2;
inline int ResultWithUrlFiles::urlfiles_size() const {
  return urlfiles_.size();
}
inline const ::XiaoyaStore::Model::UrlFile& ResultWithUrlFiles::urlfiles(int index) const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithUrlFiles.urlfiles)
  return urlfiles_.Get(index);
}
inline ::XiaoyaStore::Model::UrlFile* ResultWithUrlFiles::mutable_urlfiles(int index) {
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ResultWithUrlFiles.urlfiles)
  return urlfiles_.Mutable(index);
}
inline ::XiaoyaStore::Model::UrlFile* ResultWithUrlFiles::add_urlfiles() {
  // @@protoc_insertion_point(field_add:XiaoyaStore.Service.ResultWithUrlFiles.urlfiles)
  return urlfiles_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::UrlFile >*
ResultWithUrlFiles::mutable_urlfiles() {
  // @@protoc_insertion_point(field_mutable_list:XiaoyaStore.Service.ResultWithUrlFiles.urlfiles)
  return &urlfiles_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::UrlFile >&
ResultWithUrlFiles::urlfiles() const {
  // @@protoc_insertion_point(field_list:XiaoyaStore.Service.ResultWithUrlFiles.urlfiles)
  return urlfiles_;
}

// -------------------------------------------------------------------

// ResultWithUrlFileAndOldId

// bool is_successful = 1;
inline void ResultWithUrlFileAndOldId::clear_is_successful() {
  is_successful_ = false;
}
inline bool ResultWithUrlFileAndOldId::is_successful() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithUrlFileAndOldId.is_successful)
  return is_successful_;
}
inline void ResultWithUrlFileAndOldId::set_is_successful(bool value) {
  
  is_successful_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ResultWithUrlFileAndOldId.is_successful)
}

// uint64 old_urlfile_id = 2;
inline void ResultWithUrlFileAndOldId::clear_old_urlfile_id() {
  old_urlfile_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ResultWithUrlFileAndOldId::old_urlfile_id() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithUrlFileAndOldId.old_urlfile_id)
  return old_urlfile_id_;
}
inline void ResultWithUrlFileAndOldId::set_old_urlfile_id(::google::protobuf::uint64 value) {
  
  old_urlfile_id_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ResultWithUrlFileAndOldId.old_urlfile_id)
}

// .XiaoyaStore.Model.UrlFile urlfile = 3;
inline bool ResultWithUrlFileAndOldId::has_urlfile() const {
  return this != internal_default_instance() && urlfile_ != NULL;
}
inline const ::XiaoyaStore::Model::UrlFile& ResultWithUrlFileAndOldId::urlfile() const {
  const ::XiaoyaStore::Model::UrlFile* p = urlfile_;
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithUrlFileAndOldId.urlfile)
  return p != NULL ? *p : *reinterpret_cast<const ::XiaoyaStore::Model::UrlFile*>(
      &::XiaoyaStore::Model::_UrlFile_default_instance_);
}
inline ::XiaoyaStore::Model::UrlFile* ResultWithUrlFileAndOldId::release_urlfile() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Service.ResultWithUrlFileAndOldId.urlfile)
  
  ::XiaoyaStore::Model::UrlFile* temp = urlfile_;
  urlfile_ = NULL;
  return temp;
}
inline ::XiaoyaStore::Model::UrlFile* ResultWithUrlFileAndOldId::mutable_urlfile() {
  
  if (urlfile_ == NULL) {
    urlfile_ = new ::XiaoyaStore::Model::UrlFile;
  }
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ResultWithUrlFileAndOldId.urlfile)
  return urlfile_;
}
inline void ResultWithUrlFileAndOldId::set_allocated_urlfile(::XiaoyaStore::Model::UrlFile* urlfile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(urlfile_);
  }
  if (urlfile) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      urlfile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, urlfile, submessage_arena);
    }
    
  } else {
    
  }
  urlfile_ = urlfile;
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Service.ResultWithUrlFileAndOldId.urlfile)
}

// -------------------------------------------------------------------

// ResultWithPostingList

// bool is_successful = 1;
inline void ResultWithPostingList::clear_is_successful() {
  is_successful_ = false;
}
inline bool ResultWithPostingList::is_successful() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithPostingList.is_successful)
  return is_successful_;
}
inline void ResultWithPostingList::set_is_successful(bool value) {
  
  is_successful_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ResultWithPostingList.is_successful)
}

// .XiaoyaStore.Model.PostingList postinglist = 2;
inline bool ResultWithPostingList::has_postinglist() const {
  return this != internal_default_instance() && postinglist_ != NULL;
}
inline const ::XiaoyaStore::Model::PostingList& ResultWithPostingList::postinglist() const {
  const ::XiaoyaStore::Model::PostingList* p = postinglist_;
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithPostingList.postinglist)
  return p != NULL ? *p : *reinterpret_cast<const ::XiaoyaStore::Model::PostingList*>(
      &::XiaoyaStore::Model::_PostingList_default_instance_);
}
inline ::XiaoyaStore::Model::PostingList* ResultWithPostingList::release_postinglist() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Service.ResultWithPostingList.postinglist)
  
  ::XiaoyaStore::Model::PostingList* temp = postinglist_;
  postinglist_ = NULL;
  return temp;
}
inline ::XiaoyaStore::Model::PostingList* ResultWithPostingList::mutable_postinglist() {
  
  if (postinglist_ == NULL) {
    postinglist_ = new ::XiaoyaStore::Model::PostingList;
  }
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ResultWithPostingList.postinglist)
  return postinglist_;
}
inline void ResultWithPostingList::set_allocated_postinglist(::XiaoyaStore::Model::PostingList* postinglist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(postinglist_);
  }
  if (postinglist) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      postinglist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, postinglist, submessage_arena);
    }
    
  } else {
    
  }
  postinglist_ = postinglist;
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Service.ResultWithPostingList.postinglist)
}

// -------------------------------------------------------------------

// ResultWithLink

// bool is_successful = 1;
inline void ResultWithLink::clear_is_successful() {
  is_successful_ = false;
}
inline bool ResultWithLink::is_successful() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithLink.is_successful)
  return is_successful_;
}
inline void ResultWithLink::set_is_successful(bool value) {
  
  is_successful_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ResultWithLink.is_successful)
}

// .XiaoyaStore.Model.Link link = 2;
inline bool ResultWithLink::has_link() const {
  return this != internal_default_instance() && link_ != NULL;
}
inline const ::XiaoyaStore::Model::Link& ResultWithLink::link() const {
  const ::XiaoyaStore::Model::Link* p = link_;
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithLink.link)
  return p != NULL ? *p : *reinterpret_cast<const ::XiaoyaStore::Model::Link*>(
      &::XiaoyaStore::Model::_Link_default_instance_);
}
inline ::XiaoyaStore::Model::Link* ResultWithLink::release_link() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Service.ResultWithLink.link)
  
  ::XiaoyaStore::Model::Link* temp = link_;
  link_ = NULL;
  return temp;
}
inline ::XiaoyaStore::Model::Link* ResultWithLink::mutable_link() {
  
  if (link_ == NULL) {
    link_ = new ::XiaoyaStore::Model::Link;
  }
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ResultWithLink.link)
  return link_;
}
inline void ResultWithLink::set_allocated_link(::XiaoyaStore::Model::Link* link) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(link_);
  }
  if (link) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      link = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, link, submessage_arena);
    }
    
  } else {
    
  }
  link_ = link;
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Service.ResultWithLink.link)
}

// -------------------------------------------------------------------

// ResultWithLinks

// bool is_successful = 1;
inline void ResultWithLinks::clear_is_successful() {
  is_successful_ = false;
}
inline bool ResultWithLinks::is_successful() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithLinks.is_successful)
  return is_successful_;
}
inline void ResultWithLinks::set_is_successful(bool value) {
  
  is_successful_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ResultWithLinks.is_successful)
}

// repeated .XiaoyaStore.Model.Link links = 2;
inline int ResultWithLinks::links_size() const {
  return links_.size();
}
inline const ::XiaoyaStore::Model::Link& ResultWithLinks::links(int index) const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithLinks.links)
  return links_.Get(index);
}
inline ::XiaoyaStore::Model::Link* ResultWithLinks::mutable_links(int index) {
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ResultWithLinks.links)
  return links_.Mutable(index);
}
inline ::XiaoyaStore::Model::Link* ResultWithLinks::add_links() {
  // @@protoc_insertion_point(field_add:XiaoyaStore.Service.ResultWithLinks.links)
  return links_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Link >*
ResultWithLinks::mutable_links() {
  // @@protoc_insertion_point(field_mutable_list:XiaoyaStore.Service.ResultWithLinks.links)
  return &links_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Link >&
ResultWithLinks::links() const {
  // @@protoc_insertion_point(field_list:XiaoyaStore.Service.ResultWithLinks.links)
  return links_;
}

// -------------------------------------------------------------------

// ResultWithIndex

// bool is_successful = 1;
inline void ResultWithIndex::clear_is_successful() {
  is_successful_ = false;
}
inline bool ResultWithIndex::is_successful() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithIndex.is_successful)
  return is_successful_;
}
inline void ResultWithIndex::set_is_successful(bool value) {
  
  is_successful_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ResultWithIndex.is_successful)
}

// .XiaoyaStore.Model.Index index = 2;
inline bool ResultWithIndex::has_index() const {
  return this != internal_default_instance() && index_ != NULL;
}
inline const ::XiaoyaStore::Model::Index& ResultWithIndex::index() const {
  const ::XiaoyaStore::Model::Index* p = index_;
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ResultWithIndex.index)
  return p != NULL ? *p : *reinterpret_cast<const ::XiaoyaStore::Model::Index*>(
      &::XiaoyaStore::Model::_Index_default_instance_);
}
inline ::XiaoyaStore::Model::Index* ResultWithIndex::release_index() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Service.ResultWithIndex.index)
  
  ::XiaoyaStore::Model::Index* temp = index_;
  index_ = NULL;
  return temp;
}
inline ::XiaoyaStore::Model::Index* ResultWithIndex::mutable_index() {
  
  if (index_ == NULL) {
    index_ = new ::XiaoyaStore::Model::Index;
  }
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ResultWithIndex.index)
  return index_;
}
inline void ResultWithIndex::set_allocated_index(::XiaoyaStore::Model::Index* index) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(index_);
  }
  if (index) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      index = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, index, submessage_arena);
    }
    
  } else {
    
  }
  index_ = index;
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Service.ResultWithIndex.index)
}

// -------------------------------------------------------------------

// ArgVoid

// -------------------------------------------------------------------

// ArgId

// uint64 id = 1;
inline void ArgId::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ArgId::id() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgId.id)
  return id_;
}
inline void ArgId::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ArgId.id)
}

// -------------------------------------------------------------------

// ArgUrl

// string url = 1;
inline void ArgUrl::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ArgUrl::url() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgUrl.url)
  return url_.GetNoArena();
}
inline void ArgUrl::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ArgUrl.url)
}
#if LANG_CXX11
inline void ArgUrl::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Service.ArgUrl.url)
}
#endif
inline void ArgUrl::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Service.ArgUrl.url)
}
inline void ArgUrl::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Service.ArgUrl.url)
}
inline ::std::string* ArgUrl::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ArgUrl.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ArgUrl::release_url() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Service.ArgUrl.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArgUrl::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Service.ArgUrl.url)
}

// -------------------------------------------------------------------

// ArgHash

// string hash = 1;
inline void ArgHash::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ArgHash::hash() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgHash.hash)
  return hash_.GetNoArena();
}
inline void ArgHash::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ArgHash.hash)
}
#if LANG_CXX11
inline void ArgHash::set_hash(::std::string&& value) {
  
  hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Service.ArgHash.hash)
}
#endif
inline void ArgHash::set_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Service.ArgHash.hash)
}
inline void ArgHash::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Service.ArgHash.hash)
}
inline ::std::string* ArgHash::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ArgHash.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ArgHash::release_hash() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Service.ArgHash.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArgHash::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Service.ArgHash.hash)
}

// -------------------------------------------------------------------

// ArgWord

// string word = 1;
inline void ArgWord::clear_word() {
  word_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ArgWord::word() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgWord.word)
  return word_.GetNoArena();
}
inline void ArgWord::set_word(const ::std::string& value) {
  
  word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ArgWord.word)
}
#if LANG_CXX11
inline void ArgWord::set_word(::std::string&& value) {
  
  word_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Service.ArgWord.word)
}
#endif
inline void ArgWord::set_word(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Service.ArgWord.word)
}
inline void ArgWord::set_word(const char* value, size_t size) {
  
  word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Service.ArgWord.word)
}
inline ::std::string* ArgWord::mutable_word() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ArgWord.word)
  return word_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ArgWord::release_word() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Service.ArgWord.word)
  
  return word_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArgWord::set_allocated_word(::std::string* word) {
  if (word != NULL) {
    
  } else {
    
  }
  word_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), word);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Service.ArgWord.word)
}

// -------------------------------------------------------------------

// ArgHost

// string host = 1;
inline void ArgHost::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ArgHost::host() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgHost.host)
  return host_.GetNoArena();
}
inline void ArgHost::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ArgHost.host)
}
#if LANG_CXX11
inline void ArgHost::set_host(::std::string&& value) {
  
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Service.ArgHost.host)
}
#endif
inline void ArgHost::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Service.ArgHost.host)
}
inline void ArgHost::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Service.ArgHost.host)
}
inline ::std::string* ArgHost::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ArgHost.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ArgHost::release_host() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Service.ArgHost.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArgHost::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Service.ArgHost.host)
}

// -------------------------------------------------------------------

// ArgUrls

// repeated string urls = 1;
inline int ArgUrls::urls_size() const {
  return urls_.size();
}
inline void ArgUrls::clear_urls() {
  urls_.Clear();
}
inline const ::std::string& ArgUrls::urls(int index) const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgUrls.urls)
  return urls_.Get(index);
}
inline ::std::string* ArgUrls::mutable_urls(int index) {
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ArgUrls.urls)
  return urls_.Mutable(index);
}
inline void ArgUrls::set_urls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ArgUrls.urls)
  urls_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ArgUrls::set_urls(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ArgUrls.urls)
  urls_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ArgUrls::set_urls(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  urls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Service.ArgUrls.urls)
}
inline void ArgUrls::set_urls(int index, const char* value, size_t size) {
  urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Service.ArgUrls.urls)
}
inline ::std::string* ArgUrls::add_urls() {
  // @@protoc_insertion_point(field_add_mutable:XiaoyaStore.Service.ArgUrls.urls)
  return urls_.Add();
}
inline void ArgUrls::add_urls(const ::std::string& value) {
  urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:XiaoyaStore.Service.ArgUrls.urls)
}
#if LANG_CXX11
inline void ArgUrls::add_urls(::std::string&& value) {
  urls_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:XiaoyaStore.Service.ArgUrls.urls)
}
#endif
inline void ArgUrls::add_urls(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:XiaoyaStore.Service.ArgUrls.urls)
}
inline void ArgUrls::add_urls(const char* value, size_t size) {
  urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:XiaoyaStore.Service.ArgUrls.urls)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ArgUrls::urls() const {
  // @@protoc_insertion_point(field_list:XiaoyaStore.Service.ArgUrls.urls)
  return urls_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ArgUrls::mutable_urls() {
  // @@protoc_insertion_point(field_mutable_list:XiaoyaStore.Service.ArgUrls.urls)
  return &urls_;
}

// -------------------------------------------------------------------

// ArgUrlFile

// .XiaoyaStore.Model.UrlFile urlfile = 1;
inline bool ArgUrlFile::has_urlfile() const {
  return this != internal_default_instance() && urlfile_ != NULL;
}
inline const ::XiaoyaStore::Model::UrlFile& ArgUrlFile::urlfile() const {
  const ::XiaoyaStore::Model::UrlFile* p = urlfile_;
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgUrlFile.urlfile)
  return p != NULL ? *p : *reinterpret_cast<const ::XiaoyaStore::Model::UrlFile*>(
      &::XiaoyaStore::Model::_UrlFile_default_instance_);
}
inline ::XiaoyaStore::Model::UrlFile* ArgUrlFile::release_urlfile() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Service.ArgUrlFile.urlfile)
  
  ::XiaoyaStore::Model::UrlFile* temp = urlfile_;
  urlfile_ = NULL;
  return temp;
}
inline ::XiaoyaStore::Model::UrlFile* ArgUrlFile::mutable_urlfile() {
  
  if (urlfile_ == NULL) {
    urlfile_ = new ::XiaoyaStore::Model::UrlFile;
  }
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ArgUrlFile.urlfile)
  return urlfile_;
}
inline void ArgUrlFile::set_allocated_urlfile(::XiaoyaStore::Model::UrlFile* urlfile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(urlfile_);
  }
  if (urlfile) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      urlfile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, urlfile, submessage_arena);
    }
    
  } else {
    
  }
  urlfile_ = urlfile;
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Service.ArgUrlFile.urlfile)
}

// -------------------------------------------------------------------

// ArgPushBackUrl

// string url = 1;
inline void ArgPushBackUrl::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ArgPushBackUrl::url() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgPushBackUrl.url)
  return url_.GetNoArena();
}
inline void ArgPushBackUrl::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ArgPushBackUrl.url)
}
#if LANG_CXX11
inline void ArgPushBackUrl::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Service.ArgPushBackUrl.url)
}
#endif
inline void ArgPushBackUrl::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Service.ArgPushBackUrl.url)
}
inline void ArgPushBackUrl::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Service.ArgPushBackUrl.url)
}
inline ::std::string* ArgPushBackUrl::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ArgPushBackUrl.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ArgPushBackUrl::release_url() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Service.ArgPushBackUrl.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArgPushBackUrl::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Service.ArgPushBackUrl.url)
}

// uint64 update_interval = 2;
inline void ArgPushBackUrl::clear_update_interval() {
  update_interval_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ArgPushBackUrl::update_interval() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgPushBackUrl.update_interval)
  return update_interval_;
}
inline void ArgPushBackUrl::set_update_interval(::google::protobuf::uint64 value) {
  
  update_interval_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ArgPushBackUrl.update_interval)
}

// bool failed = 3;
inline void ArgPushBackUrl::clear_failed() {
  failed_ = false;
}
inline bool ArgPushBackUrl::failed() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgPushBackUrl.failed)
  return failed_;
}
inline void ArgPushBackUrl::set_failed(bool value) {
  
  failed_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ArgPushBackUrl.failed)
}

// -------------------------------------------------------------------

// ArgPostingList

// .XiaoyaStore.Model.PostingList postinglist = 1;
inline bool ArgPostingList::has_postinglist() const {
  return this != internal_default_instance() && postinglist_ != NULL;
}
inline const ::XiaoyaStore::Model::PostingList& ArgPostingList::postinglist() const {
  const ::XiaoyaStore::Model::PostingList* p = postinglist_;
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgPostingList.postinglist)
  return p != NULL ? *p : *reinterpret_cast<const ::XiaoyaStore::Model::PostingList*>(
      &::XiaoyaStore::Model::_PostingList_default_instance_);
}
inline ::XiaoyaStore::Model::PostingList* ArgPostingList::release_postinglist() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Service.ArgPostingList.postinglist)
  
  ::XiaoyaStore::Model::PostingList* temp = postinglist_;
  postinglist_ = NULL;
  return temp;
}
inline ::XiaoyaStore::Model::PostingList* ArgPostingList::mutable_postinglist() {
  
  if (postinglist_ == NULL) {
    postinglist_ = new ::XiaoyaStore::Model::PostingList;
  }
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ArgPostingList.postinglist)
  return postinglist_;
}
inline void ArgPostingList::set_allocated_postinglist(::XiaoyaStore::Model::PostingList* postinglist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(postinglist_);
  }
  if (postinglist) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      postinglist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, postinglist, submessage_arena);
    }
    
  } else {
    
  }
  postinglist_ = postinglist;
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Service.ArgPostingList.postinglist)
}

// -------------------------------------------------------------------

// ArgSaveLinkOfUrlFile

// uint64 urlfile_id = 1;
inline void ArgSaveLinkOfUrlFile::clear_urlfile_id() {
  urlfile_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ArgSaveLinkOfUrlFile::urlfile_id() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgSaveLinkOfUrlFile.urlfile_id)
  return urlfile_id_;
}
inline void ArgSaveLinkOfUrlFile::set_urlfile_id(::google::protobuf::uint64 value) {
  
  urlfile_id_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ArgSaveLinkOfUrlFile.urlfile_id)
}

// uint64 old_urlfile_id = 2;
inline void ArgSaveLinkOfUrlFile::clear_old_urlfile_id() {
  old_urlfile_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ArgSaveLinkOfUrlFile::old_urlfile_id() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgSaveLinkOfUrlFile.old_urlfile_id)
  return old_urlfile_id_;
}
inline void ArgSaveLinkOfUrlFile::set_old_urlfile_id(::google::protobuf::uint64 value) {
  
  old_urlfile_id_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ArgSaveLinkOfUrlFile.old_urlfile_id)
}

// repeated .XiaoyaStore.Model.Link links = 3;
inline int ArgSaveLinkOfUrlFile::links_size() const {
  return links_.size();
}
inline const ::XiaoyaStore::Model::Link& ArgSaveLinkOfUrlFile::links(int index) const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgSaveLinkOfUrlFile.links)
  return links_.Get(index);
}
inline ::XiaoyaStore::Model::Link* ArgSaveLinkOfUrlFile::mutable_links(int index) {
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ArgSaveLinkOfUrlFile.links)
  return links_.Mutable(index);
}
inline ::XiaoyaStore::Model::Link* ArgSaveLinkOfUrlFile::add_links() {
  // @@protoc_insertion_point(field_add:XiaoyaStore.Service.ArgSaveLinkOfUrlFile.links)
  return links_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Link >*
ArgSaveLinkOfUrlFile::mutable_links() {
  // @@protoc_insertion_point(field_mutable_list:XiaoyaStore.Service.ArgSaveLinkOfUrlFile.links)
  return &links_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Link >&
ArgSaveLinkOfUrlFile::links() const {
  // @@protoc_insertion_point(field_list:XiaoyaStore.Service.ArgSaveLinkOfUrlFile.links)
  return links_;
}

// -------------------------------------------------------------------

// ArgClearAndSaveIndicesOf

// uint64 urlfile_id = 1;
inline void ArgClearAndSaveIndicesOf::clear_urlfile_id() {
  urlfile_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ArgClearAndSaveIndicesOf::urlfile_id() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgClearAndSaveIndicesOf.urlfile_id)
  return urlfile_id_;
}
inline void ArgClearAndSaveIndicesOf::set_urlfile_id(::google::protobuf::uint64 value) {
  
  urlfile_id_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ArgClearAndSaveIndicesOf.urlfile_id)
}

// uint64 old_urlfile_id = 2;
inline void ArgClearAndSaveIndicesOf::clear_old_urlfile_id() {
  old_urlfile_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ArgClearAndSaveIndicesOf::old_urlfile_id() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgClearAndSaveIndicesOf.old_urlfile_id)
  return old_urlfile_id_;
}
inline void ArgClearAndSaveIndicesOf::set_old_urlfile_id(::google::protobuf::uint64 value) {
  
  old_urlfile_id_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ArgClearAndSaveIndicesOf.old_urlfile_id)
}

// repeated .XiaoyaStore.Model.Index indices = 3;
inline int ArgClearAndSaveIndicesOf::indices_size() const {
  return indices_.size();
}
inline const ::XiaoyaStore::Model::Index& ArgClearAndSaveIndicesOf::indices(int index) const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgClearAndSaveIndicesOf.indices)
  return indices_.Get(index);
}
inline ::XiaoyaStore::Model::Index* ArgClearAndSaveIndicesOf::mutable_indices(int index) {
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ArgClearAndSaveIndicesOf.indices)
  return indices_.Mutable(index);
}
inline ::XiaoyaStore::Model::Index* ArgClearAndSaveIndicesOf::add_indices() {
  // @@protoc_insertion_point(field_add:XiaoyaStore.Service.ArgClearAndSaveIndicesOf.indices)
  return indices_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Index >*
ArgClearAndSaveIndicesOf::mutable_indices() {
  // @@protoc_insertion_point(field_mutable_list:XiaoyaStore.Service.ArgClearAndSaveIndicesOf.indices)
  return &indices_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Index >&
ArgClearAndSaveIndicesOf::indices() const {
  // @@protoc_insertion_point(field_list:XiaoyaStore.Service.ArgClearAndSaveIndicesOf.indices)
  return indices_;
}

// -------------------------------------------------------------------

// ArgIndexKey

// uint64 urlfile_id = 1;
inline void ArgIndexKey::clear_urlfile_id() {
  urlfile_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ArgIndexKey::urlfile_id() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgIndexKey.urlfile_id)
  return urlfile_id_;
}
inline void ArgIndexKey::set_urlfile_id(::google::protobuf::uint64 value) {
  
  urlfile_id_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ArgIndexKey.urlfile_id)
}

// string word = 2;
inline void ArgIndexKey::clear_word() {
  word_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ArgIndexKey::word() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Service.ArgIndexKey.word)
  return word_.GetNoArena();
}
inline void ArgIndexKey::set_word(const ::std::string& value) {
  
  word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Service.ArgIndexKey.word)
}
#if LANG_CXX11
inline void ArgIndexKey::set_word(::std::string&& value) {
  
  word_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Service.ArgIndexKey.word)
}
#endif
inline void ArgIndexKey::set_word(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Service.ArgIndexKey.word)
}
inline void ArgIndexKey::set_word(const char* value, size_t size) {
  
  word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Service.ArgIndexKey.word)
}
inline ::std::string* ArgIndexKey::mutable_word() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Service.ArgIndexKey.word)
  return word_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ArgIndexKey::release_word() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Service.ArgIndexKey.word)
  
  return word_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ArgIndexKey::set_allocated_word(::std::string* word) {
  if (word != NULL) {
    
  } else {
    
  }
  word_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), word);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Service.ArgIndexKey.word)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Service
}  // namespace XiaoyaStore

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rpc_2eproto__INCLUDED

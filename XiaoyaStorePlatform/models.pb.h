// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: models.proto

#ifndef PROTOBUF_models_2eproto__INCLUDED
#define PROTOBUF_models_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_models_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[11];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsUrlFrontierItemImpl();
void InitDefaultsUrlFrontierItem();
void InitDefaultsPostingImpl();
void InitDefaultsPosting();
void InitDefaultsPostingListImpl();
void InitDefaultsPostingList();
void InitDefaultsPostingListsImpl();
void InitDefaultsPostingLists();
void InitDefaultsIndexKeyImpl();
void InitDefaultsIndexKey();
void InitDefaultsIndexKeysImpl();
void InitDefaultsIndexKeys();
void InitDefaultsIndexImpl();
void InitDefaultsIndex();
void InitDefaultsUrlFileImpl();
void InitDefaultsUrlFile();
void InitDefaultsLinkImpl();
void InitDefaultsLink();
void InitDefaultsLinksImpl();
void InitDefaultsLinks();
void InitDefaultsIdListImpl();
void InitDefaultsIdList();
inline void InitDefaults() {
  InitDefaultsUrlFrontierItem();
  InitDefaultsPosting();
  InitDefaultsPostingList();
  InitDefaultsPostingLists();
  InitDefaultsIndexKey();
  InitDefaultsIndexKeys();
  InitDefaultsIndex();
  InitDefaultsUrlFile();
  InitDefaultsLink();
  InitDefaultsLinks();
  InitDefaultsIdList();
}
}  // namespace protobuf_models_2eproto
namespace XiaoyaStore {
namespace Model {
class IdList;
class IdListDefaultTypeInternal;
extern IdListDefaultTypeInternal _IdList_default_instance_;
class Index;
class IndexDefaultTypeInternal;
extern IndexDefaultTypeInternal _Index_default_instance_;
class IndexKey;
class IndexKeyDefaultTypeInternal;
extern IndexKeyDefaultTypeInternal _IndexKey_default_instance_;
class IndexKeys;
class IndexKeysDefaultTypeInternal;
extern IndexKeysDefaultTypeInternal _IndexKeys_default_instance_;
class Link;
class LinkDefaultTypeInternal;
extern LinkDefaultTypeInternal _Link_default_instance_;
class Links;
class LinksDefaultTypeInternal;
extern LinksDefaultTypeInternal _Links_default_instance_;
class Posting;
class PostingDefaultTypeInternal;
extern PostingDefaultTypeInternal _Posting_default_instance_;
class PostingList;
class PostingListDefaultTypeInternal;
extern PostingListDefaultTypeInternal _PostingList_default_instance_;
class PostingLists;
class PostingListsDefaultTypeInternal;
extern PostingListsDefaultTypeInternal _PostingLists_default_instance_;
class UrlFile;
class UrlFileDefaultTypeInternal;
extern UrlFileDefaultTypeInternal _UrlFile_default_instance_;
class UrlFrontierItem;
class UrlFrontierItemDefaultTypeInternal;
extern UrlFrontierItemDefaultTypeInternal _UrlFrontierItem_default_instance_;
}  // namespace Model
}  // namespace XiaoyaStore
namespace XiaoyaStore {
namespace Model {

// ===================================================================

class UrlFrontierItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Model.UrlFrontierItem) */ {
 public:
  UrlFrontierItem();
  virtual ~UrlFrontierItem();

  UrlFrontierItem(const UrlFrontierItem& from);

  inline UrlFrontierItem& operator=(const UrlFrontierItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UrlFrontierItem(UrlFrontierItem&& from) noexcept
    : UrlFrontierItem() {
    *this = ::std::move(from);
  }

  inline UrlFrontierItem& operator=(UrlFrontierItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UrlFrontierItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UrlFrontierItem* internal_default_instance() {
    return reinterpret_cast<const UrlFrontierItem*>(
               &_UrlFrontierItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(UrlFrontierItem* other);
  friend void swap(UrlFrontierItem& a, UrlFrontierItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UrlFrontierItem* New() const PROTOBUF_FINAL { return New(NULL); }

  UrlFrontierItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UrlFrontierItem& from);
  void MergeFrom(const UrlFrontierItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UrlFrontierItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string url = 1;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // uint64 planned_time = 2;
  void clear_planned_time();
  static const int kPlannedTimeFieldNumber = 2;
  ::google::protobuf::uint64 planned_time() const;
  void set_planned_time(::google::protobuf::uint64 value);

  // uint64 priority = 3;
  void clear_priority();
  static const int kPriorityFieldNumber = 3;
  ::google::protobuf::uint64 priority() const;
  void set_priority(::google::protobuf::uint64 value);

  // uint64 url_file_id = 5;
  void clear_url_file_id();
  static const int kUrlFileIdFieldNumber = 5;
  ::google::protobuf::uint64 url_file_id() const;
  void set_url_file_id(::google::protobuf::uint64 value);

  // uint64 updated_at = 6;
  void clear_updated_at();
  static const int kUpdatedAtFieldNumber = 6;
  ::google::protobuf::uint64 updated_at() const;
  void set_updated_at(::google::protobuf::uint64 value);

  // uint64 created_at = 7;
  void clear_created_at();
  static const int kCreatedAtFieldNumber = 7;
  ::google::protobuf::uint64 created_at() const;
  void set_created_at(::google::protobuf::uint64 value);

  // uint32 failed_times = 4;
  void clear_failed_times();
  static const int kFailedTimesFieldNumber = 4;
  ::google::protobuf::uint32 failed_times() const;
  void set_failed_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Model.UrlFrontierItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint64 planned_time_;
  ::google::protobuf::uint64 priority_;
  ::google::protobuf::uint64 url_file_id_;
  ::google::protobuf::uint64 updated_at_;
  ::google::protobuf::uint64 created_at_;
  ::google::protobuf::uint32 failed_times_;
  mutable int _cached_size_;
  friend struct ::protobuf_models_2eproto::TableStruct;
  friend void ::protobuf_models_2eproto::InitDefaultsUrlFrontierItemImpl();
};
// -------------------------------------------------------------------

class Posting : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Model.Posting) */ {
 public:
  Posting();
  virtual ~Posting();

  Posting(const Posting& from);

  inline Posting& operator=(const Posting& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Posting(Posting&& from) noexcept
    : Posting() {
    *this = ::std::move(from);
  }

  inline Posting& operator=(Posting&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Posting& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Posting* internal_default_instance() {
    return reinterpret_cast<const Posting*>(
               &_Posting_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Posting* other);
  friend void swap(Posting& a, Posting& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Posting* New() const PROTOBUF_FINAL { return New(NULL); }

  Posting* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Posting& from);
  void MergeFrom(const Posting& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Posting* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 url_file_id = 1;
  void clear_url_file_id();
  static const int kUrlFileIdFieldNumber = 1;
  ::google::protobuf::uint64 url_file_id() const;
  void set_url_file_id(::google::protobuf::uint64 value);

  // double weight = 2;
  void clear_weight();
  static const int kWeightFieldNumber = 2;
  double weight() const;
  void set_weight(double value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Model.Posting)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 url_file_id_;
  double weight_;
  mutable int _cached_size_;
  friend struct ::protobuf_models_2eproto::TableStruct;
  friend void ::protobuf_models_2eproto::InitDefaultsPostingImpl();
};
// -------------------------------------------------------------------

class PostingList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Model.PostingList) */ {
 public:
  PostingList();
  virtual ~PostingList();

  PostingList(const PostingList& from);

  inline PostingList& operator=(const PostingList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PostingList(PostingList&& from) noexcept
    : PostingList() {
    *this = ::std::move(from);
  }

  inline PostingList& operator=(PostingList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PostingList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PostingList* internal_default_instance() {
    return reinterpret_cast<const PostingList*>(
               &_PostingList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PostingList* other);
  friend void swap(PostingList& a, PostingList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PostingList* New() const PROTOBUF_FINAL { return New(NULL); }

  PostingList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PostingList& from);
  void MergeFrom(const PostingList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PostingList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XiaoyaStore.Model.Posting postings = 4;
  int postings_size() const;
  void clear_postings();
  static const int kPostingsFieldNumber = 4;
  const ::XiaoyaStore::Model::Posting& postings(int index) const;
  ::XiaoyaStore::Model::Posting* mutable_postings(int index);
  ::XiaoyaStore::Model::Posting* add_postings();
  ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Posting >*
      mutable_postings();
  const ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Posting >&
      postings() const;

  // string word = 1;
  void clear_word();
  static const int kWordFieldNumber = 1;
  const ::std::string& word() const;
  void set_word(const ::std::string& value);
  #if LANG_CXX11
  void set_word(::std::string&& value);
  #endif
  void set_word(const char* value);
  void set_word(const char* value, size_t size);
  ::std::string* mutable_word();
  ::std::string* release_word();
  void set_allocated_word(::std::string* word);

  // uint64 word_frequency = 2;
  void clear_word_frequency();
  static const int kWordFrequencyFieldNumber = 2;
  ::google::protobuf::uint64 word_frequency() const;
  void set_word_frequency(::google::protobuf::uint64 value);

  // uint64 document_frequency = 3;
  void clear_document_frequency();
  static const int kDocumentFrequencyFieldNumber = 3;
  ::google::protobuf::uint64 document_frequency() const;
  void set_document_frequency(::google::protobuf::uint64 value);

  // bool is_add = 5;
  void clear_is_add();
  static const int kIsAddFieldNumber = 5;
  bool is_add() const;
  void set_is_add(bool value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Model.PostingList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Posting > postings_;
  ::google::protobuf::internal::ArenaStringPtr word_;
  ::google::protobuf::uint64 word_frequency_;
  ::google::protobuf::uint64 document_frequency_;
  bool is_add_;
  mutable int _cached_size_;
  friend struct ::protobuf_models_2eproto::TableStruct;
  friend void ::protobuf_models_2eproto::InitDefaultsPostingListImpl();
};
// -------------------------------------------------------------------

class PostingLists : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Model.PostingLists) */ {
 public:
  PostingLists();
  virtual ~PostingLists();

  PostingLists(const PostingLists& from);

  inline PostingLists& operator=(const PostingLists& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PostingLists(PostingLists&& from) noexcept
    : PostingLists() {
    *this = ::std::move(from);
  }

  inline PostingLists& operator=(PostingLists&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PostingLists& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PostingLists* internal_default_instance() {
    return reinterpret_cast<const PostingLists*>(
               &_PostingLists_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PostingLists* other);
  friend void swap(PostingLists& a, PostingLists& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PostingLists* New() const PROTOBUF_FINAL { return New(NULL); }

  PostingLists* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PostingLists& from);
  void MergeFrom(const PostingLists& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PostingLists* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XiaoyaStore.Model.PostingList items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::XiaoyaStore::Model::PostingList& items(int index) const;
  ::XiaoyaStore::Model::PostingList* mutable_items(int index);
  ::XiaoyaStore::Model::PostingList* add_items();
  ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::PostingList >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::PostingList >&
      items() const;

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Model.PostingLists)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::PostingList > items_;
  mutable int _cached_size_;
  friend struct ::protobuf_models_2eproto::TableStruct;
  friend void ::protobuf_models_2eproto::InitDefaultsPostingListsImpl();
};
// -------------------------------------------------------------------

class IndexKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Model.IndexKey) */ {
 public:
  IndexKey();
  virtual ~IndexKey();

  IndexKey(const IndexKey& from);

  inline IndexKey& operator=(const IndexKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IndexKey(IndexKey&& from) noexcept
    : IndexKey() {
    *this = ::std::move(from);
  }

  inline IndexKey& operator=(IndexKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IndexKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IndexKey* internal_default_instance() {
    return reinterpret_cast<const IndexKey*>(
               &_IndexKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(IndexKey* other);
  friend void swap(IndexKey& a, IndexKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IndexKey* New() const PROTOBUF_FINAL { return New(NULL); }

  IndexKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IndexKey& from);
  void MergeFrom(const IndexKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IndexKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string word = 2;
  void clear_word();
  static const int kWordFieldNumber = 2;
  const ::std::string& word() const;
  void set_word(const ::std::string& value);
  #if LANG_CXX11
  void set_word(::std::string&& value);
  #endif
  void set_word(const char* value);
  void set_word(const char* value, size_t size);
  ::std::string* mutable_word();
  ::std::string* release_word();
  void set_allocated_word(::std::string* word);

  // uint64 url_file_id = 1;
  void clear_url_file_id();
  static const int kUrlFileIdFieldNumber = 1;
  ::google::protobuf::uint64 url_file_id() const;
  void set_url_file_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Model.IndexKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr word_;
  ::google::protobuf::uint64 url_file_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_models_2eproto::TableStruct;
  friend void ::protobuf_models_2eproto::InitDefaultsIndexKeyImpl();
};
// -------------------------------------------------------------------

class IndexKeys : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Model.IndexKeys) */ {
 public:
  IndexKeys();
  virtual ~IndexKeys();

  IndexKeys(const IndexKeys& from);

  inline IndexKeys& operator=(const IndexKeys& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IndexKeys(IndexKeys&& from) noexcept
    : IndexKeys() {
    *this = ::std::move(from);
  }

  inline IndexKeys& operator=(IndexKeys&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IndexKeys& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IndexKeys* internal_default_instance() {
    return reinterpret_cast<const IndexKeys*>(
               &_IndexKeys_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(IndexKeys* other);
  friend void swap(IndexKeys& a, IndexKeys& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IndexKeys* New() const PROTOBUF_FINAL { return New(NULL); }

  IndexKeys* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IndexKeys& from);
  void MergeFrom(const IndexKeys& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IndexKeys* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XiaoyaStore.Model.IndexKey items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::XiaoyaStore::Model::IndexKey& items(int index) const;
  ::XiaoyaStore::Model::IndexKey* mutable_items(int index);
  ::XiaoyaStore::Model::IndexKey* add_items();
  ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::IndexKey >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::IndexKey >&
      items() const;

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Model.IndexKeys)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::IndexKey > items_;
  mutable int _cached_size_;
  friend struct ::protobuf_models_2eproto::TableStruct;
  friend void ::protobuf_models_2eproto::InitDefaultsIndexKeysImpl();
};
// -------------------------------------------------------------------

class Index : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Model.Index) */ {
 public:
  Index();
  virtual ~Index();

  Index(const Index& from);

  inline Index& operator=(const Index& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Index(Index&& from) noexcept
    : Index() {
    *this = ::std::move(from);
  }

  inline Index& operator=(Index&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Index& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Index* internal_default_instance() {
    return reinterpret_cast<const Index*>(
               &_Index_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Index* other);
  friend void swap(Index& a, Index& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Index* New() const PROTOBUF_FINAL { return New(NULL); }

  Index* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Index& from);
  void MergeFrom(const Index& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Index* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 positions = 8;
  int positions_size() const;
  void clear_positions();
  static const int kPositionsFieldNumber = 8;
  ::google::protobuf::uint32 positions(int index) const;
  void set_positions(int index, ::google::protobuf::uint32 value);
  void add_positions(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      positions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_positions();

  // string url = 2;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // .XiaoyaStore.Model.IndexKey key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::XiaoyaStore::Model::IndexKey& key() const;
  ::XiaoyaStore::Model::IndexKey* release_key();
  ::XiaoyaStore::Model::IndexKey* mutable_key();
  void set_allocated_key(::XiaoyaStore::Model::IndexKey* key);

  // double weight = 4;
  void clear_weight();
  static const int kWeightFieldNumber = 4;
  double weight() const;
  void set_weight(double value);

  // uint32 word_frequency = 3;
  void clear_word_frequency();
  static const int kWordFrequencyFieldNumber = 3;
  ::google::protobuf::uint32 word_frequency() const;
  void set_word_frequency(::google::protobuf::uint32 value);

  // uint32 occurences_in_title = 5;
  void clear_occurences_in_title();
  static const int kOccurencesInTitleFieldNumber = 5;
  ::google::protobuf::uint32 occurences_in_title() const;
  void set_occurences_in_title(::google::protobuf::uint32 value);

  // uint32 occurences_in_links = 6;
  void clear_occurences_in_links();
  static const int kOccurencesInLinksFieldNumber = 6;
  ::google::protobuf::uint32 occurences_in_links() const;
  void set_occurences_in_links(::google::protobuf::uint32 value);

  // uint32 occurences_in_headers = 7;
  void clear_occurences_in_headers();
  static const int kOccurencesInHeadersFieldNumber = 7;
  ::google::protobuf::uint32 occurences_in_headers() const;
  void set_occurences_in_headers(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Model.Index)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > positions_;
  mutable int _positions_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::XiaoyaStore::Model::IndexKey* key_;
  double weight_;
  ::google::protobuf::uint32 word_frequency_;
  ::google::protobuf::uint32 occurences_in_title_;
  ::google::protobuf::uint32 occurences_in_links_;
  ::google::protobuf::uint32 occurences_in_headers_;
  mutable int _cached_size_;
  friend struct ::protobuf_models_2eproto::TableStruct;
  friend void ::protobuf_models_2eproto::InitDefaultsIndexImpl();
};
// -------------------------------------------------------------------

class UrlFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Model.UrlFile) */ {
 public:
  UrlFile();
  virtual ~UrlFile();

  UrlFile(const UrlFile& from);

  inline UrlFile& operator=(const UrlFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UrlFile(UrlFile&& from) noexcept
    : UrlFile() {
    *this = ::std::move(from);
  }

  inline UrlFile& operator=(UrlFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UrlFile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UrlFile* internal_default_instance() {
    return reinterpret_cast<const UrlFile*>(
               &_UrlFile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(UrlFile* other);
  friend void swap(UrlFile& a, UrlFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UrlFile* New() const PROTOBUF_FINAL { return New(NULL); }

  UrlFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UrlFile& from);
  void MergeFrom(const UrlFile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UrlFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string url = 2;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // string title = 3;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string file_path = 4;
  void clear_file_path();
  static const int kFilePathFieldNumber = 4;
  const ::std::string& file_path() const;
  void set_file_path(const ::std::string& value);
  #if LANG_CXX11
  void set_file_path(::std::string&& value);
  #endif
  void set_file_path(const char* value);
  void set_file_path(const char* value, size_t size);
  ::std::string* mutable_file_path();
  ::std::string* release_file_path();
  void set_allocated_file_path(::std::string* file_path);

  // string file_hash = 5;
  void clear_file_hash();
  static const int kFileHashFieldNumber = 5;
  const ::std::string& file_hash() const;
  void set_file_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_file_hash(::std::string&& value);
  #endif
  void set_file_hash(const char* value);
  void set_file_hash(const char* value, size_t size);
  ::std::string* mutable_file_hash();
  ::std::string* release_file_hash();
  void set_allocated_file_hash(::std::string* file_hash);

  // string content = 6;
  void clear_content();
  static const int kContentFieldNumber = 6;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // string text_content = 7;
  void clear_text_content();
  static const int kTextContentFieldNumber = 7;
  const ::std::string& text_content() const;
  void set_text_content(const ::std::string& value);
  #if LANG_CXX11
  void set_text_content(::std::string&& value);
  #endif
  void set_text_content(const char* value);
  void set_text_content(const char* value, size_t size);
  ::std::string* mutable_text_content();
  ::std::string* release_text_content();
  void set_allocated_text_content(::std::string* text_content);

  // string charset = 8;
  void clear_charset();
  static const int kCharsetFieldNumber = 8;
  const ::std::string& charset() const;
  void set_charset(const ::std::string& value);
  #if LANG_CXX11
  void set_charset(::std::string&& value);
  #endif
  void set_charset(const char* value);
  void set_charset(const char* value, size_t size);
  ::std::string* mutable_charset();
  ::std::string* release_charset();
  void set_allocated_charset(::std::string* charset);

  // string mime_type = 9;
  void clear_mime_type();
  static const int kMimeTypeFieldNumber = 9;
  const ::std::string& mime_type() const;
  void set_mime_type(const ::std::string& value);
  #if LANG_CXX11
  void set_mime_type(::std::string&& value);
  #endif
  void set_mime_type(const char* value);
  void set_mime_type(const char* value, size_t size);
  ::std::string* mutable_mime_type();
  ::std::string* release_mime_type();
  void set_allocated_mime_type(::std::string* mime_type);

  // uint64 url_file_id = 1;
  void clear_url_file_id();
  static const int kUrlFileIdFieldNumber = 1;
  ::google::protobuf::uint64 url_file_id() const;
  void set_url_file_id(::google::protobuf::uint64 value);

  // double page_rank = 10;
  void clear_page_rank();
  static const int kPageRankFieldNumber = 10;
  double page_rank() const;
  void set_page_rank(double value);

  // uint32 in_link_count = 11;
  void clear_in_link_count();
  static const int kInLinkCountFieldNumber = 11;
  ::google::protobuf::uint32 in_link_count() const;
  void set_in_link_count(::google::protobuf::uint32 value);

  // uint32 in_link_total_length = 12;
  void clear_in_link_total_length();
  static const int kInLinkTotalLengthFieldNumber = 12;
  ::google::protobuf::uint32 in_link_total_length() const;
  void set_in_link_total_length(::google::protobuf::uint32 value);

  // uint32 header_count = 13;
  void clear_header_count();
  static const int kHeaderCountFieldNumber = 13;
  ::google::protobuf::uint32 header_count() const;
  void set_header_count(::google::protobuf::uint32 value);

  // uint32 header_total_length = 14;
  void clear_header_total_length();
  static const int kHeaderTotalLengthFieldNumber = 14;
  ::google::protobuf::uint32 header_total_length() const;
  void set_header_total_length(::google::protobuf::uint32 value);

  // uint64 publish_date = 15;
  void clear_publish_date();
  static const int kPublishDateFieldNumber = 15;
  ::google::protobuf::uint64 publish_date() const;
  void set_publish_date(::google::protobuf::uint64 value);

  // uint64 update_interval = 16;
  void clear_update_interval();
  static const int kUpdateIntervalFieldNumber = 16;
  ::google::protobuf::uint64 update_interval() const;
  void set_update_interval(::google::protobuf::uint64 value);

  // uint64 updated_at = 17;
  void clear_updated_at();
  static const int kUpdatedAtFieldNumber = 17;
  ::google::protobuf::uint64 updated_at() const;
  void set_updated_at(::google::protobuf::uint64 value);

  // uint64 created_at = 18;
  void clear_created_at();
  static const int kCreatedAtFieldNumber = 18;
  ::google::protobuf::uint64 created_at() const;
  void set_created_at(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Model.UrlFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr file_path_;
  ::google::protobuf::internal::ArenaStringPtr file_hash_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr text_content_;
  ::google::protobuf::internal::ArenaStringPtr charset_;
  ::google::protobuf::internal::ArenaStringPtr mime_type_;
  ::google::protobuf::uint64 url_file_id_;
  double page_rank_;
  ::google::protobuf::uint32 in_link_count_;
  ::google::protobuf::uint32 in_link_total_length_;
  ::google::protobuf::uint32 header_count_;
  ::google::protobuf::uint32 header_total_length_;
  ::google::protobuf::uint64 publish_date_;
  ::google::protobuf::uint64 update_interval_;
  ::google::protobuf::uint64 updated_at_;
  ::google::protobuf::uint64 created_at_;
  mutable int _cached_size_;
  friend struct ::protobuf_models_2eproto::TableStruct;
  friend void ::protobuf_models_2eproto::InitDefaultsUrlFileImpl();
};
// -------------------------------------------------------------------

class Link : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Model.Link) */ {
 public:
  Link();
  virtual ~Link();

  Link(const Link& from);

  inline Link& operator=(const Link& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Link(Link&& from) noexcept
    : Link() {
    *this = ::std::move(from);
  }

  inline Link& operator=(Link&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Link& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Link* internal_default_instance() {
    return reinterpret_cast<const Link*>(
               &_Link_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Link* other);
  friend void swap(Link& a, Link& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Link* New() const PROTOBUF_FINAL { return New(NULL); }

  Link* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Link& from);
  void MergeFrom(const Link& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Link* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string url = 3;
  void clear_url();
  static const int kUrlFieldNumber = 3;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // string text = 4;
  void clear_text();
  static const int kTextFieldNumber = 4;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // uint64 url_file_id = 2;
  void clear_url_file_id();
  static const int kUrlFileIdFieldNumber = 2;
  ::google::protobuf::uint64 url_file_id() const;
  void set_url_file_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Model.Link)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::uint64 url_file_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_models_2eproto::TableStruct;
  friend void ::protobuf_models_2eproto::InitDefaultsLinkImpl();
};
// -------------------------------------------------------------------

class Links : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Model.Links) */ {
 public:
  Links();
  virtual ~Links();

  Links(const Links& from);

  inline Links& operator=(const Links& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Links(Links&& from) noexcept
    : Links() {
    *this = ::std::move(from);
  }

  inline Links& operator=(Links&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Links& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Links* internal_default_instance() {
    return reinterpret_cast<const Links*>(
               &_Links_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Links* other);
  friend void swap(Links& a, Links& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Links* New() const PROTOBUF_FINAL { return New(NULL); }

  Links* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Links& from);
  void MergeFrom(const Links& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Links* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XiaoyaStore.Model.Link items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::XiaoyaStore::Model::Link& items(int index) const;
  ::XiaoyaStore::Model::Link* mutable_items(int index);
  ::XiaoyaStore::Model::Link* add_items();
  ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Link >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Link >&
      items() const;

  // bool is_add = 2;
  void clear_is_add();
  static const int kIsAddFieldNumber = 2;
  bool is_add() const;
  void set_is_add(bool value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Model.Links)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Link > items_;
  bool is_add_;
  mutable int _cached_size_;
  friend struct ::protobuf_models_2eproto::TableStruct;
  friend void ::protobuf_models_2eproto::InitDefaultsLinksImpl();
};
// -------------------------------------------------------------------

class IdList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XiaoyaStore.Model.IdList) */ {
 public:
  IdList();
  virtual ~IdList();

  IdList(const IdList& from);

  inline IdList& operator=(const IdList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IdList(IdList&& from) noexcept
    : IdList() {
    *this = ::std::move(from);
  }

  inline IdList& operator=(IdList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IdList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IdList* internal_default_instance() {
    return reinterpret_cast<const IdList*>(
               &_IdList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(IdList* other);
  friend void swap(IdList& a, IdList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IdList* New() const PROTOBUF_FINAL { return New(NULL); }

  IdList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdList& from);
  void MergeFrom(const IdList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 ids = 1;
  int ids_size() const;
  void clear_ids();
  static const int kIdsFieldNumber = 1;
  ::google::protobuf::uint64 ids(int index) const;
  void set_ids(int index, ::google::protobuf::uint64 value);
  void add_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_ids();

  // bool is_add = 2;
  void clear_is_add();
  static const int kIsAddFieldNumber = 2;
  bool is_add() const;
  void set_is_add(bool value);

  // @@protoc_insertion_point(class_scope:XiaoyaStore.Model.IdList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > ids_;
  mutable int _ids_cached_byte_size_;
  bool is_add_;
  mutable int _cached_size_;
  friend struct ::protobuf_models_2eproto::TableStruct;
  friend void ::protobuf_models_2eproto::InitDefaultsIdListImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UrlFrontierItem

// string url = 1;
inline void UrlFrontierItem::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UrlFrontierItem::url() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFrontierItem.url)
  return url_.GetNoArena();
}
inline void UrlFrontierItem::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFrontierItem.url)
}
#if LANG_CXX11
inline void UrlFrontierItem::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Model.UrlFrontierItem.url)
}
#endif
inline void UrlFrontierItem::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Model.UrlFrontierItem.url)
}
inline void UrlFrontierItem::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Model.UrlFrontierItem.url)
}
inline ::std::string* UrlFrontierItem::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.UrlFrontierItem.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UrlFrontierItem::release_url() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Model.UrlFrontierItem.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UrlFrontierItem::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Model.UrlFrontierItem.url)
}

// uint64 planned_time = 2;
inline void UrlFrontierItem::clear_planned_time() {
  planned_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UrlFrontierItem::planned_time() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFrontierItem.planned_time)
  return planned_time_;
}
inline void UrlFrontierItem::set_planned_time(::google::protobuf::uint64 value) {
  
  planned_time_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFrontierItem.planned_time)
}

// uint64 priority = 3;
inline void UrlFrontierItem::clear_priority() {
  priority_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UrlFrontierItem::priority() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFrontierItem.priority)
  return priority_;
}
inline void UrlFrontierItem::set_priority(::google::protobuf::uint64 value) {
  
  priority_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFrontierItem.priority)
}

// uint32 failed_times = 4;
inline void UrlFrontierItem::clear_failed_times() {
  failed_times_ = 0u;
}
inline ::google::protobuf::uint32 UrlFrontierItem::failed_times() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFrontierItem.failed_times)
  return failed_times_;
}
inline void UrlFrontierItem::set_failed_times(::google::protobuf::uint32 value) {
  
  failed_times_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFrontierItem.failed_times)
}

// uint64 url_file_id = 5;
inline void UrlFrontierItem::clear_url_file_id() {
  url_file_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UrlFrontierItem::url_file_id() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFrontierItem.url_file_id)
  return url_file_id_;
}
inline void UrlFrontierItem::set_url_file_id(::google::protobuf::uint64 value) {
  
  url_file_id_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFrontierItem.url_file_id)
}

// uint64 updated_at = 6;
inline void UrlFrontierItem::clear_updated_at() {
  updated_at_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UrlFrontierItem::updated_at() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFrontierItem.updated_at)
  return updated_at_;
}
inline void UrlFrontierItem::set_updated_at(::google::protobuf::uint64 value) {
  
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFrontierItem.updated_at)
}

// uint64 created_at = 7;
inline void UrlFrontierItem::clear_created_at() {
  created_at_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UrlFrontierItem::created_at() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFrontierItem.created_at)
  return created_at_;
}
inline void UrlFrontierItem::set_created_at(::google::protobuf::uint64 value) {
  
  created_at_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFrontierItem.created_at)
}

// -------------------------------------------------------------------

// Posting

// uint64 url_file_id = 1;
inline void Posting::clear_url_file_id() {
  url_file_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Posting::url_file_id() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.Posting.url_file_id)
  return url_file_id_;
}
inline void Posting::set_url_file_id(::google::protobuf::uint64 value) {
  
  url_file_id_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.Posting.url_file_id)
}

// double weight = 2;
inline void Posting::clear_weight() {
  weight_ = 0;
}
inline double Posting::weight() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.Posting.weight)
  return weight_;
}
inline void Posting::set_weight(double value) {
  
  weight_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.Posting.weight)
}

// -------------------------------------------------------------------

// PostingList

// string word = 1;
inline void PostingList::clear_word() {
  word_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PostingList::word() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.PostingList.word)
  return word_.GetNoArena();
}
inline void PostingList::set_word(const ::std::string& value) {
  
  word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.PostingList.word)
}
#if LANG_CXX11
inline void PostingList::set_word(::std::string&& value) {
  
  word_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Model.PostingList.word)
}
#endif
inline void PostingList::set_word(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Model.PostingList.word)
}
inline void PostingList::set_word(const char* value, size_t size) {
  
  word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Model.PostingList.word)
}
inline ::std::string* PostingList::mutable_word() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.PostingList.word)
  return word_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PostingList::release_word() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Model.PostingList.word)
  
  return word_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PostingList::set_allocated_word(::std::string* word) {
  if (word != NULL) {
    
  } else {
    
  }
  word_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), word);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Model.PostingList.word)
}

// uint64 word_frequency = 2;
inline void PostingList::clear_word_frequency() {
  word_frequency_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PostingList::word_frequency() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.PostingList.word_frequency)
  return word_frequency_;
}
inline void PostingList::set_word_frequency(::google::protobuf::uint64 value) {
  
  word_frequency_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.PostingList.word_frequency)
}

// uint64 document_frequency = 3;
inline void PostingList::clear_document_frequency() {
  document_frequency_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PostingList::document_frequency() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.PostingList.document_frequency)
  return document_frequency_;
}
inline void PostingList::set_document_frequency(::google::protobuf::uint64 value) {
  
  document_frequency_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.PostingList.document_frequency)
}

// repeated .XiaoyaStore.Model.Posting postings = 4;
inline int PostingList::postings_size() const {
  return postings_.size();
}
inline void PostingList::clear_postings() {
  postings_.Clear();
}
inline const ::XiaoyaStore::Model::Posting& PostingList::postings(int index) const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.PostingList.postings)
  return postings_.Get(index);
}
inline ::XiaoyaStore::Model::Posting* PostingList::mutable_postings(int index) {
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.PostingList.postings)
  return postings_.Mutable(index);
}
inline ::XiaoyaStore::Model::Posting* PostingList::add_postings() {
  // @@protoc_insertion_point(field_add:XiaoyaStore.Model.PostingList.postings)
  return postings_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Posting >*
PostingList::mutable_postings() {
  // @@protoc_insertion_point(field_mutable_list:XiaoyaStore.Model.PostingList.postings)
  return &postings_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Posting >&
PostingList::postings() const {
  // @@protoc_insertion_point(field_list:XiaoyaStore.Model.PostingList.postings)
  return postings_;
}

// bool is_add = 5;
inline void PostingList::clear_is_add() {
  is_add_ = false;
}
inline bool PostingList::is_add() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.PostingList.is_add)
  return is_add_;
}
inline void PostingList::set_is_add(bool value) {
  
  is_add_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.PostingList.is_add)
}

// -------------------------------------------------------------------

// PostingLists

// repeated .XiaoyaStore.Model.PostingList items = 1;
inline int PostingLists::items_size() const {
  return items_.size();
}
inline void PostingLists::clear_items() {
  items_.Clear();
}
inline const ::XiaoyaStore::Model::PostingList& PostingLists::items(int index) const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.PostingLists.items)
  return items_.Get(index);
}
inline ::XiaoyaStore::Model::PostingList* PostingLists::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.PostingLists.items)
  return items_.Mutable(index);
}
inline ::XiaoyaStore::Model::PostingList* PostingLists::add_items() {
  // @@protoc_insertion_point(field_add:XiaoyaStore.Model.PostingLists.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::PostingList >*
PostingLists::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:XiaoyaStore.Model.PostingLists.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::PostingList >&
PostingLists::items() const {
  // @@protoc_insertion_point(field_list:XiaoyaStore.Model.PostingLists.items)
  return items_;
}

// -------------------------------------------------------------------

// IndexKey

// uint64 url_file_id = 1;
inline void IndexKey::clear_url_file_id() {
  url_file_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 IndexKey::url_file_id() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.IndexKey.url_file_id)
  return url_file_id_;
}
inline void IndexKey::set_url_file_id(::google::protobuf::uint64 value) {
  
  url_file_id_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.IndexKey.url_file_id)
}

// string word = 2;
inline void IndexKey::clear_word() {
  word_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IndexKey::word() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.IndexKey.word)
  return word_.GetNoArena();
}
inline void IndexKey::set_word(const ::std::string& value) {
  
  word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.IndexKey.word)
}
#if LANG_CXX11
inline void IndexKey::set_word(::std::string&& value) {
  
  word_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Model.IndexKey.word)
}
#endif
inline void IndexKey::set_word(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Model.IndexKey.word)
}
inline void IndexKey::set_word(const char* value, size_t size) {
  
  word_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Model.IndexKey.word)
}
inline ::std::string* IndexKey::mutable_word() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.IndexKey.word)
  return word_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IndexKey::release_word() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Model.IndexKey.word)
  
  return word_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IndexKey::set_allocated_word(::std::string* word) {
  if (word != NULL) {
    
  } else {
    
  }
  word_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), word);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Model.IndexKey.word)
}

// -------------------------------------------------------------------

// IndexKeys

// repeated .XiaoyaStore.Model.IndexKey items = 1;
inline int IndexKeys::items_size() const {
  return items_.size();
}
inline void IndexKeys::clear_items() {
  items_.Clear();
}
inline const ::XiaoyaStore::Model::IndexKey& IndexKeys::items(int index) const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.IndexKeys.items)
  return items_.Get(index);
}
inline ::XiaoyaStore::Model::IndexKey* IndexKeys::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.IndexKeys.items)
  return items_.Mutable(index);
}
inline ::XiaoyaStore::Model::IndexKey* IndexKeys::add_items() {
  // @@protoc_insertion_point(field_add:XiaoyaStore.Model.IndexKeys.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::IndexKey >*
IndexKeys::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:XiaoyaStore.Model.IndexKeys.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::IndexKey >&
IndexKeys::items() const {
  // @@protoc_insertion_point(field_list:XiaoyaStore.Model.IndexKeys.items)
  return items_;
}

// -------------------------------------------------------------------

// Index

// .XiaoyaStore.Model.IndexKey key = 1;
inline bool Index::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
inline void Index::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
}
inline const ::XiaoyaStore::Model::IndexKey& Index::key() const {
  const ::XiaoyaStore::Model::IndexKey* p = key_;
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.Index.key)
  return p != NULL ? *p : *reinterpret_cast<const ::XiaoyaStore::Model::IndexKey*>(
      &::XiaoyaStore::Model::_IndexKey_default_instance_);
}
inline ::XiaoyaStore::Model::IndexKey* Index::release_key() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Model.Index.key)
  
  ::XiaoyaStore::Model::IndexKey* temp = key_;
  key_ = NULL;
  return temp;
}
inline ::XiaoyaStore::Model::IndexKey* Index::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::XiaoyaStore::Model::IndexKey;
  }
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.Index.key)
  return key_;
}
inline void Index::set_allocated_key(::XiaoyaStore::Model::IndexKey* key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete key_;
  }
  if (key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key, submessage_arena);
    }
    
  } else {
    
  }
  key_ = key;
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Model.Index.key)
}

// string url = 2;
inline void Index::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Index::url() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.Index.url)
  return url_.GetNoArena();
}
inline void Index::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.Index.url)
}
#if LANG_CXX11
inline void Index::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Model.Index.url)
}
#endif
inline void Index::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Model.Index.url)
}
inline void Index::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Model.Index.url)
}
inline ::std::string* Index::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.Index.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Index::release_url() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Model.Index.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Index::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Model.Index.url)
}

// uint32 word_frequency = 3;
inline void Index::clear_word_frequency() {
  word_frequency_ = 0u;
}
inline ::google::protobuf::uint32 Index::word_frequency() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.Index.word_frequency)
  return word_frequency_;
}
inline void Index::set_word_frequency(::google::protobuf::uint32 value) {
  
  word_frequency_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.Index.word_frequency)
}

// double weight = 4;
inline void Index::clear_weight() {
  weight_ = 0;
}
inline double Index::weight() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.Index.weight)
  return weight_;
}
inline void Index::set_weight(double value) {
  
  weight_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.Index.weight)
}

// uint32 occurences_in_title = 5;
inline void Index::clear_occurences_in_title() {
  occurences_in_title_ = 0u;
}
inline ::google::protobuf::uint32 Index::occurences_in_title() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.Index.occurences_in_title)
  return occurences_in_title_;
}
inline void Index::set_occurences_in_title(::google::protobuf::uint32 value) {
  
  occurences_in_title_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.Index.occurences_in_title)
}

// uint32 occurences_in_links = 6;
inline void Index::clear_occurences_in_links() {
  occurences_in_links_ = 0u;
}
inline ::google::protobuf::uint32 Index::occurences_in_links() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.Index.occurences_in_links)
  return occurences_in_links_;
}
inline void Index::set_occurences_in_links(::google::protobuf::uint32 value) {
  
  occurences_in_links_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.Index.occurences_in_links)
}

// uint32 occurences_in_headers = 7;
inline void Index::clear_occurences_in_headers() {
  occurences_in_headers_ = 0u;
}
inline ::google::protobuf::uint32 Index::occurences_in_headers() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.Index.occurences_in_headers)
  return occurences_in_headers_;
}
inline void Index::set_occurences_in_headers(::google::protobuf::uint32 value) {
  
  occurences_in_headers_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.Index.occurences_in_headers)
}

// repeated uint32 positions = 8;
inline int Index::positions_size() const {
  return positions_.size();
}
inline void Index::clear_positions() {
  positions_.Clear();
}
inline ::google::protobuf::uint32 Index::positions(int index) const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.Index.positions)
  return positions_.Get(index);
}
inline void Index::set_positions(int index, ::google::protobuf::uint32 value) {
  positions_.Set(index, value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.Index.positions)
}
inline void Index::add_positions(::google::protobuf::uint32 value) {
  positions_.Add(value);
  // @@protoc_insertion_point(field_add:XiaoyaStore.Model.Index.positions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Index::positions() const {
  // @@protoc_insertion_point(field_list:XiaoyaStore.Model.Index.positions)
  return positions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Index::mutable_positions() {
  // @@protoc_insertion_point(field_mutable_list:XiaoyaStore.Model.Index.positions)
  return &positions_;
}

// -------------------------------------------------------------------

// UrlFile

// uint64 url_file_id = 1;
inline void UrlFile::clear_url_file_id() {
  url_file_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UrlFile::url_file_id() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFile.url_file_id)
  return url_file_id_;
}
inline void UrlFile::set_url_file_id(::google::protobuf::uint64 value) {
  
  url_file_id_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFile.url_file_id)
}

// string url = 2;
inline void UrlFile::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UrlFile::url() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFile.url)
  return url_.GetNoArena();
}
inline void UrlFile::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFile.url)
}
#if LANG_CXX11
inline void UrlFile::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Model.UrlFile.url)
}
#endif
inline void UrlFile::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Model.UrlFile.url)
}
inline void UrlFile::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Model.UrlFile.url)
}
inline ::std::string* UrlFile::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.UrlFile.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UrlFile::release_url() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Model.UrlFile.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UrlFile::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Model.UrlFile.url)
}

// string title = 3;
inline void UrlFile::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UrlFile::title() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFile.title)
  return title_.GetNoArena();
}
inline void UrlFile::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFile.title)
}
#if LANG_CXX11
inline void UrlFile::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Model.UrlFile.title)
}
#endif
inline void UrlFile::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Model.UrlFile.title)
}
inline void UrlFile::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Model.UrlFile.title)
}
inline ::std::string* UrlFile::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.UrlFile.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UrlFile::release_title() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Model.UrlFile.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UrlFile::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Model.UrlFile.title)
}

// string file_path = 4;
inline void UrlFile::clear_file_path() {
  file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UrlFile::file_path() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFile.file_path)
  return file_path_.GetNoArena();
}
inline void UrlFile::set_file_path(const ::std::string& value) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFile.file_path)
}
#if LANG_CXX11
inline void UrlFile::set_file_path(::std::string&& value) {
  
  file_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Model.UrlFile.file_path)
}
#endif
inline void UrlFile::set_file_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Model.UrlFile.file_path)
}
inline void UrlFile::set_file_path(const char* value, size_t size) {
  
  file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Model.UrlFile.file_path)
}
inline ::std::string* UrlFile::mutable_file_path() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.UrlFile.file_path)
  return file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UrlFile::release_file_path() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Model.UrlFile.file_path)
  
  return file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UrlFile::set_allocated_file_path(::std::string* file_path) {
  if (file_path != NULL) {
    
  } else {
    
  }
  file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_path);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Model.UrlFile.file_path)
}

// string file_hash = 5;
inline void UrlFile::clear_file_hash() {
  file_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UrlFile::file_hash() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFile.file_hash)
  return file_hash_.GetNoArena();
}
inline void UrlFile::set_file_hash(const ::std::string& value) {
  
  file_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFile.file_hash)
}
#if LANG_CXX11
inline void UrlFile::set_file_hash(::std::string&& value) {
  
  file_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Model.UrlFile.file_hash)
}
#endif
inline void UrlFile::set_file_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Model.UrlFile.file_hash)
}
inline void UrlFile::set_file_hash(const char* value, size_t size) {
  
  file_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Model.UrlFile.file_hash)
}
inline ::std::string* UrlFile::mutable_file_hash() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.UrlFile.file_hash)
  return file_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UrlFile::release_file_hash() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Model.UrlFile.file_hash)
  
  return file_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UrlFile::set_allocated_file_hash(::std::string* file_hash) {
  if (file_hash != NULL) {
    
  } else {
    
  }
  file_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_hash);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Model.UrlFile.file_hash)
}

// string content = 6;
inline void UrlFile::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UrlFile::content() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFile.content)
  return content_.GetNoArena();
}
inline void UrlFile::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFile.content)
}
#if LANG_CXX11
inline void UrlFile::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Model.UrlFile.content)
}
#endif
inline void UrlFile::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Model.UrlFile.content)
}
inline void UrlFile::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Model.UrlFile.content)
}
inline ::std::string* UrlFile::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.UrlFile.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UrlFile::release_content() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Model.UrlFile.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UrlFile::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Model.UrlFile.content)
}

// string text_content = 7;
inline void UrlFile::clear_text_content() {
  text_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UrlFile::text_content() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFile.text_content)
  return text_content_.GetNoArena();
}
inline void UrlFile::set_text_content(const ::std::string& value) {
  
  text_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFile.text_content)
}
#if LANG_CXX11
inline void UrlFile::set_text_content(::std::string&& value) {
  
  text_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Model.UrlFile.text_content)
}
#endif
inline void UrlFile::set_text_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Model.UrlFile.text_content)
}
inline void UrlFile::set_text_content(const char* value, size_t size) {
  
  text_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Model.UrlFile.text_content)
}
inline ::std::string* UrlFile::mutable_text_content() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.UrlFile.text_content)
  return text_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UrlFile::release_text_content() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Model.UrlFile.text_content)
  
  return text_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UrlFile::set_allocated_text_content(::std::string* text_content) {
  if (text_content != NULL) {
    
  } else {
    
  }
  text_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text_content);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Model.UrlFile.text_content)
}

// string charset = 8;
inline void UrlFile::clear_charset() {
  charset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UrlFile::charset() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFile.charset)
  return charset_.GetNoArena();
}
inline void UrlFile::set_charset(const ::std::string& value) {
  
  charset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFile.charset)
}
#if LANG_CXX11
inline void UrlFile::set_charset(::std::string&& value) {
  
  charset_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Model.UrlFile.charset)
}
#endif
inline void UrlFile::set_charset(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  charset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Model.UrlFile.charset)
}
inline void UrlFile::set_charset(const char* value, size_t size) {
  
  charset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Model.UrlFile.charset)
}
inline ::std::string* UrlFile::mutable_charset() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.UrlFile.charset)
  return charset_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UrlFile::release_charset() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Model.UrlFile.charset)
  
  return charset_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UrlFile::set_allocated_charset(::std::string* charset) {
  if (charset != NULL) {
    
  } else {
    
  }
  charset_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), charset);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Model.UrlFile.charset)
}

// string mime_type = 9;
inline void UrlFile::clear_mime_type() {
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UrlFile::mime_type() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFile.mime_type)
  return mime_type_.GetNoArena();
}
inline void UrlFile::set_mime_type(const ::std::string& value) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFile.mime_type)
}
#if LANG_CXX11
inline void UrlFile::set_mime_type(::std::string&& value) {
  
  mime_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Model.UrlFile.mime_type)
}
#endif
inline void UrlFile::set_mime_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Model.UrlFile.mime_type)
}
inline void UrlFile::set_mime_type(const char* value, size_t size) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Model.UrlFile.mime_type)
}
inline ::std::string* UrlFile::mutable_mime_type() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.UrlFile.mime_type)
  return mime_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UrlFile::release_mime_type() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Model.UrlFile.mime_type)
  
  return mime_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UrlFile::set_allocated_mime_type(::std::string* mime_type) {
  if (mime_type != NULL) {
    
  } else {
    
  }
  mime_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mime_type);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Model.UrlFile.mime_type)
}

// double page_rank = 10;
inline void UrlFile::clear_page_rank() {
  page_rank_ = 0;
}
inline double UrlFile::page_rank() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFile.page_rank)
  return page_rank_;
}
inline void UrlFile::set_page_rank(double value) {
  
  page_rank_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFile.page_rank)
}

// uint32 in_link_count = 11;
inline void UrlFile::clear_in_link_count() {
  in_link_count_ = 0u;
}
inline ::google::protobuf::uint32 UrlFile::in_link_count() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFile.in_link_count)
  return in_link_count_;
}
inline void UrlFile::set_in_link_count(::google::protobuf::uint32 value) {
  
  in_link_count_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFile.in_link_count)
}

// uint32 in_link_total_length = 12;
inline void UrlFile::clear_in_link_total_length() {
  in_link_total_length_ = 0u;
}
inline ::google::protobuf::uint32 UrlFile::in_link_total_length() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFile.in_link_total_length)
  return in_link_total_length_;
}
inline void UrlFile::set_in_link_total_length(::google::protobuf::uint32 value) {
  
  in_link_total_length_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFile.in_link_total_length)
}

// uint32 header_count = 13;
inline void UrlFile::clear_header_count() {
  header_count_ = 0u;
}
inline ::google::protobuf::uint32 UrlFile::header_count() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFile.header_count)
  return header_count_;
}
inline void UrlFile::set_header_count(::google::protobuf::uint32 value) {
  
  header_count_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFile.header_count)
}

// uint32 header_total_length = 14;
inline void UrlFile::clear_header_total_length() {
  header_total_length_ = 0u;
}
inline ::google::protobuf::uint32 UrlFile::header_total_length() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFile.header_total_length)
  return header_total_length_;
}
inline void UrlFile::set_header_total_length(::google::protobuf::uint32 value) {
  
  header_total_length_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFile.header_total_length)
}

// uint64 publish_date = 15;
inline void UrlFile::clear_publish_date() {
  publish_date_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UrlFile::publish_date() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFile.publish_date)
  return publish_date_;
}
inline void UrlFile::set_publish_date(::google::protobuf::uint64 value) {
  
  publish_date_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFile.publish_date)
}

// uint64 update_interval = 16;
inline void UrlFile::clear_update_interval() {
  update_interval_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UrlFile::update_interval() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFile.update_interval)
  return update_interval_;
}
inline void UrlFile::set_update_interval(::google::protobuf::uint64 value) {
  
  update_interval_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFile.update_interval)
}

// uint64 updated_at = 17;
inline void UrlFile::clear_updated_at() {
  updated_at_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UrlFile::updated_at() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFile.updated_at)
  return updated_at_;
}
inline void UrlFile::set_updated_at(::google::protobuf::uint64 value) {
  
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFile.updated_at)
}

// uint64 created_at = 18;
inline void UrlFile::clear_created_at() {
  created_at_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UrlFile::created_at() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.UrlFile.created_at)
  return created_at_;
}
inline void UrlFile::set_created_at(::google::protobuf::uint64 value) {
  
  created_at_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.UrlFile.created_at)
}

// -------------------------------------------------------------------

// Link

// uint64 url_file_id = 2;
inline void Link::clear_url_file_id() {
  url_file_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Link::url_file_id() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.Link.url_file_id)
  return url_file_id_;
}
inline void Link::set_url_file_id(::google::protobuf::uint64 value) {
  
  url_file_id_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.Link.url_file_id)
}

// string url = 3;
inline void Link::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Link::url() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.Link.url)
  return url_.GetNoArena();
}
inline void Link::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.Link.url)
}
#if LANG_CXX11
inline void Link::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Model.Link.url)
}
#endif
inline void Link::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Model.Link.url)
}
inline void Link::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Model.Link.url)
}
inline ::std::string* Link::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.Link.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Link::release_url() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Model.Link.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Link::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Model.Link.url)
}

// string text = 4;
inline void Link::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Link::text() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.Link.text)
  return text_.GetNoArena();
}
inline void Link::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.Link.text)
}
#if LANG_CXX11
inline void Link::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XiaoyaStore.Model.Link.text)
}
#endif
inline void Link::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XiaoyaStore.Model.Link.text)
}
inline void Link::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XiaoyaStore.Model.Link.text)
}
inline ::std::string* Link::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.Link.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Link::release_text() {
  // @@protoc_insertion_point(field_release:XiaoyaStore.Model.Link.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Link::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:XiaoyaStore.Model.Link.text)
}

// -------------------------------------------------------------------

// Links

// repeated .XiaoyaStore.Model.Link items = 1;
inline int Links::items_size() const {
  return items_.size();
}
inline void Links::clear_items() {
  items_.Clear();
}
inline const ::XiaoyaStore::Model::Link& Links::items(int index) const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.Links.items)
  return items_.Get(index);
}
inline ::XiaoyaStore::Model::Link* Links::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:XiaoyaStore.Model.Links.items)
  return items_.Mutable(index);
}
inline ::XiaoyaStore::Model::Link* Links::add_items() {
  // @@protoc_insertion_point(field_add:XiaoyaStore.Model.Links.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Link >*
Links::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:XiaoyaStore.Model.Links.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::XiaoyaStore::Model::Link >&
Links::items() const {
  // @@protoc_insertion_point(field_list:XiaoyaStore.Model.Links.items)
  return items_;
}

// bool is_add = 2;
inline void Links::clear_is_add() {
  is_add_ = false;
}
inline bool Links::is_add() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.Links.is_add)
  return is_add_;
}
inline void Links::set_is_add(bool value) {
  
  is_add_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.Links.is_add)
}

// -------------------------------------------------------------------

// IdList

// repeated uint64 ids = 1;
inline int IdList::ids_size() const {
  return ids_.size();
}
inline void IdList::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::uint64 IdList::ids(int index) const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.IdList.ids)
  return ids_.Get(index);
}
inline void IdList::set_ids(int index, ::google::protobuf::uint64 value) {
  ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.IdList.ids)
}
inline void IdList::add_ids(::google::protobuf::uint64 value) {
  ids_.Add(value);
  // @@protoc_insertion_point(field_add:XiaoyaStore.Model.IdList.ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
IdList::ids() const {
  // @@protoc_insertion_point(field_list:XiaoyaStore.Model.IdList.ids)
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
IdList::mutable_ids() {
  // @@protoc_insertion_point(field_mutable_list:XiaoyaStore.Model.IdList.ids)
  return &ids_;
}

// bool is_add = 2;
inline void IdList::clear_is_add() {
  is_add_ = false;
}
inline bool IdList::is_add() const {
  // @@protoc_insertion_point(field_get:XiaoyaStore.Model.IdList.is_add)
  return is_add_;
}
inline void IdList::set_is_add(bool value) {
  
  is_add_ = value;
  // @@protoc_insertion_point(field_set:XiaoyaStore.Model.IdList.is_add)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Model
}  // namespace XiaoyaStore

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_models_2eproto__INCLUDED

// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: models.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace XiaoyaStore.Model {

  /// <summary>Holder for reflection information generated from models.proto</summary>
  public static partial class ModelsReflection {

    #region Descriptor
    /// <summary>File descriptor for models.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ModelsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgxtb2RlbHMucHJvdG8SEVhpYW95YVN0b3JlLk1vZGVsIpkBCg9VcmxGcm9u",
            "dGllckl0ZW0SCwoDdXJsGAEgASgJEhQKDHBsYW5uZWRfdGltZRgCIAEoBBIQ",
            "Cghwcmlvcml0eRgDIAEoBBIUCgxmYWlsZWRfdGltZXMYBCABKA0SEwoLdXJs",
            "X2ZpbGVfaWQYBSABKAQSEgoKdXBkYXRlZF9hdBgGIAEoBBISCgpjcmVhdGVk",
            "X2F0GAcgASgEIi4KB1Bvc3RpbmcSEwoLdXJsX2ZpbGVfaWQYASABKAQSDgoG",
            "d2VpZ2h0GAIgASgBIo0BCgtQb3N0aW5nTGlzdBIMCgR3b3JkGAEgASgJEhYK",
            "DndvcmRfZnJlcXVlbmN5GAIgASgEEhoKEmRvY3VtZW50X2ZyZXF1ZW5jeRgD",
            "IAEoBBIsCghwb3N0aW5ncxgEIAMoCzIaLlhpYW95YVN0b3JlLk1vZGVsLlBv",
            "c3RpbmcSDgoGaXNfYWRkGAUgASgIIj0KDFBvc3RpbmdMaXN0cxItCgVpdGVt",
            "cxgBIAMoCzIeLlhpYW95YVN0b3JlLk1vZGVsLlBvc3RpbmdMaXN0Ii0KCElu",
            "ZGV4S2V5EhMKC3VybF9maWxlX2lkGAEgASgEEgwKBHdvcmQYAiABKAkiNwoJ",
            "SW5kZXhLZXlzEioKBWl0ZW1zGAEgAygLMhsuWGlhb3lhU3RvcmUuTW9kZWwu",
            "SW5kZXhLZXki0gEKBUluZGV4EigKA2tleRgBIAEoCzIbLlhpYW95YVN0b3Jl",
            "Lk1vZGVsLkluZGV4S2V5EgsKA3VybBgCIAEoCRIWCg53b3JkX2ZyZXF1ZW5j",
            "eRgDIAEoDRIOCgZ3ZWlnaHQYBCABKAESGwoTb2NjdXJlbmNlc19pbl90aXRs",
            "ZRgFIAEoDRIbChNvY2N1cmVuY2VzX2luX2xpbmtzGAYgASgNEh0KFW9jY3Vy",
            "ZW5jZXNfaW5faGVhZGVycxgHIAEoDRIRCglwb3NpdGlvbnMYCCADKA0i/QIK",
            "B1VybEZpbGUSEwoLdXJsX2ZpbGVfaWQYASABKAQSCwoDdXJsGAIgASgJEg0K",
            "BXRpdGxlGAMgASgJEhEKCWZpbGVfcGF0aBgEIAEoCRIRCglmaWxlX2hhc2gY",
            "BSABKAkSDwoHY29udGVudBgGIAEoCRIUCgx0ZXh0X2NvbnRlbnQYByABKAkS",
            "DwoHY2hhcnNldBgIIAEoCRIRCgltaW1lX3R5cGUYCSABKAkSEQoJcGFnZV9y",
            "YW5rGAogASgBEhUKDWluX2xpbmtfY291bnQYCyABKA0SHAoUaW5fbGlua190",
            "b3RhbF9sZW5ndGgYDCABKA0SFAoMaGVhZGVyX2NvdW50GA0gASgNEhsKE2hl",
            "YWRlcl90b3RhbF9sZW5ndGgYDiABKA0SFAoMcHVibGlzaF9kYXRlGA8gASgE",
            "EhcKD3VwZGF0ZV9pbnRlcnZhbBgQIAEoBBISCgp1cGRhdGVkX2F0GBEgASgE",
            "EhIKCmNyZWF0ZWRfYXQYEiABKAQiNgoETGluaxITCgt1cmxfZmlsZV9pZBgC",
            "IAEoBBILCgN1cmwYAyABKAkSDAoEdGV4dBgEIAEoCSI/CgVMaW5rcxImCgVp",
            "dGVtcxgBIAMoCzIXLlhpYW95YVN0b3JlLk1vZGVsLkxpbmsSDgoGaXNfYWRk",
            "GAIgASgIIiUKBklkTGlzdBILCgNpZHMYASADKAQSDgoGaXNfYWRkGAIgASgI",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::XiaoyaStore.Model.UrlFrontierItem), global::XiaoyaStore.Model.UrlFrontierItem.Parser, new[]{ "Url", "PlannedTime", "Priority", "FailedTimes", "UrlFileId", "UpdatedAt", "CreatedAt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XiaoyaStore.Model.Posting), global::XiaoyaStore.Model.Posting.Parser, new[]{ "UrlFileId", "Weight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XiaoyaStore.Model.PostingList), global::XiaoyaStore.Model.PostingList.Parser, new[]{ "Word", "WordFrequency", "DocumentFrequency", "Postings", "IsAdd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XiaoyaStore.Model.PostingLists), global::XiaoyaStore.Model.PostingLists.Parser, new[]{ "Items" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XiaoyaStore.Model.IndexKey), global::XiaoyaStore.Model.IndexKey.Parser, new[]{ "UrlFileId", "Word" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XiaoyaStore.Model.IndexKeys), global::XiaoyaStore.Model.IndexKeys.Parser, new[]{ "Items" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XiaoyaStore.Model.Index), global::XiaoyaStore.Model.Index.Parser, new[]{ "Key", "Url", "WordFrequency", "Weight", "OccurencesInTitle", "OccurencesInLinks", "OccurencesInHeaders", "Positions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XiaoyaStore.Model.UrlFile), global::XiaoyaStore.Model.UrlFile.Parser, new[]{ "UrlFileId", "Url", "Title", "FilePath", "FileHash", "Content", "TextContent", "Charset", "MimeType", "PageRank", "InLinkCount", "InLinkTotalLength", "HeaderCount", "HeaderTotalLength", "PublishDate", "UpdateInterval", "UpdatedAt", "CreatedAt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XiaoyaStore.Model.Link), global::XiaoyaStore.Model.Link.Parser, new[]{ "UrlFileId", "Url", "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XiaoyaStore.Model.Links), global::XiaoyaStore.Model.Links.Parser, new[]{ "Items", "IsAdd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XiaoyaStore.Model.IdList), global::XiaoyaStore.Model.IdList.Parser, new[]{ "Ids", "IsAdd" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UrlFrontierItem : pb::IMessage<UrlFrontierItem> {
    private static readonly pb::MessageParser<UrlFrontierItem> _parser = new pb::MessageParser<UrlFrontierItem>(() => new UrlFrontierItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UrlFrontierItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XiaoyaStore.Model.ModelsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UrlFrontierItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UrlFrontierItem(UrlFrontierItem other) : this() {
      url_ = other.url_;
      plannedTime_ = other.plannedTime_;
      priority_ = other.priority_;
      failedTimes_ = other.failedTimes_;
      urlFileId_ = other.urlFileId_;
      updatedAt_ = other.updatedAt_;
      createdAt_ = other.createdAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UrlFrontierItem Clone() {
      return new UrlFrontierItem(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "planned_time" field.</summary>
    public const int PlannedTimeFieldNumber = 2;
    private ulong plannedTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PlannedTime {
      get { return plannedTime_; }
      set {
        plannedTime_ = value;
      }
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 3;
    private ulong priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "failed_times" field.</summary>
    public const int FailedTimesFieldNumber = 4;
    private uint failedTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint FailedTimes {
      get { return failedTimes_; }
      set {
        failedTimes_ = value;
      }
    }

    /// <summary>Field number for the "url_file_id" field.</summary>
    public const int UrlFileIdFieldNumber = 5;
    private ulong urlFileId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UrlFileId {
      get { return urlFileId_; }
      set {
        urlFileId_ = value;
      }
    }

    /// <summary>Field number for the "updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 6;
    private ulong updatedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 7;
    private ulong createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UrlFrontierItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UrlFrontierItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (PlannedTime != other.PlannedTime) return false;
      if (Priority != other.Priority) return false;
      if (FailedTimes != other.FailedTimes) return false;
      if (UrlFileId != other.UrlFileId) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      if (CreatedAt != other.CreatedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (PlannedTime != 0UL) hash ^= PlannedTime.GetHashCode();
      if (Priority != 0UL) hash ^= Priority.GetHashCode();
      if (FailedTimes != 0) hash ^= FailedTimes.GetHashCode();
      if (UrlFileId != 0UL) hash ^= UrlFileId.GetHashCode();
      if (UpdatedAt != 0UL) hash ^= UpdatedAt.GetHashCode();
      if (CreatedAt != 0UL) hash ^= CreatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (PlannedTime != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(PlannedTime);
      }
      if (Priority != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Priority);
      }
      if (FailedTimes != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(FailedTimes);
      }
      if (UrlFileId != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(UrlFileId);
      }
      if (UpdatedAt != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(UpdatedAt);
      }
      if (CreatedAt != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (PlannedTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PlannedTime);
      }
      if (Priority != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Priority);
      }
      if (FailedTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FailedTimes);
      }
      if (UrlFileId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UrlFileId);
      }
      if (UpdatedAt != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UpdatedAt);
      }
      if (CreatedAt != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CreatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UrlFrontierItem other) {
      if (other == null) {
        return;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.PlannedTime != 0UL) {
        PlannedTime = other.PlannedTime;
      }
      if (other.Priority != 0UL) {
        Priority = other.Priority;
      }
      if (other.FailedTimes != 0) {
        FailedTimes = other.FailedTimes;
      }
      if (other.UrlFileId != 0UL) {
        UrlFileId = other.UrlFileId;
      }
      if (other.UpdatedAt != 0UL) {
        UpdatedAt = other.UpdatedAt;
      }
      if (other.CreatedAt != 0UL) {
        CreatedAt = other.CreatedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 16: {
            PlannedTime = input.ReadUInt64();
            break;
          }
          case 24: {
            Priority = input.ReadUInt64();
            break;
          }
          case 32: {
            FailedTimes = input.ReadUInt32();
            break;
          }
          case 40: {
            UrlFileId = input.ReadUInt64();
            break;
          }
          case 48: {
            UpdatedAt = input.ReadUInt64();
            break;
          }
          case 56: {
            CreatedAt = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Posting : pb::IMessage<Posting> {
    private static readonly pb::MessageParser<Posting> _parser = new pb::MessageParser<Posting>(() => new Posting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Posting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XiaoyaStore.Model.ModelsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Posting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Posting(Posting other) : this() {
      urlFileId_ = other.urlFileId_;
      weight_ = other.weight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Posting Clone() {
      return new Posting(this);
    }

    /// <summary>Field number for the "url_file_id" field.</summary>
    public const int UrlFileIdFieldNumber = 1;
    private ulong urlFileId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UrlFileId {
      get { return urlFileId_; }
      set {
        urlFileId_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 2;
    private double weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Posting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Posting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UrlFileId != other.UrlFileId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Weight, other.Weight)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UrlFileId != 0UL) hash ^= UrlFileId.GetHashCode();
      if (Weight != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Weight);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UrlFileId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UrlFileId);
      }
      if (Weight != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UrlFileId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UrlFileId);
      }
      if (Weight != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Posting other) {
      if (other == null) {
        return;
      }
      if (other.UrlFileId != 0UL) {
        UrlFileId = other.UrlFileId;
      }
      if (other.Weight != 0D) {
        Weight = other.Weight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UrlFileId = input.ReadUInt64();
            break;
          }
          case 17: {
            Weight = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostingList : pb::IMessage<PostingList> {
    private static readonly pb::MessageParser<PostingList> _parser = new pb::MessageParser<PostingList>(() => new PostingList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostingList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XiaoyaStore.Model.ModelsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostingList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostingList(PostingList other) : this() {
      word_ = other.word_;
      wordFrequency_ = other.wordFrequency_;
      documentFrequency_ = other.documentFrequency_;
      postings_ = other.postings_.Clone();
      isAdd_ = other.isAdd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostingList Clone() {
      return new PostingList(this);
    }

    /// <summary>Field number for the "word" field.</summary>
    public const int WordFieldNumber = 1;
    private string word_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Word {
      get { return word_; }
      set {
        word_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "word_frequency" field.</summary>
    public const int WordFrequencyFieldNumber = 2;
    private ulong wordFrequency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong WordFrequency {
      get { return wordFrequency_; }
      set {
        wordFrequency_ = value;
      }
    }

    /// <summary>Field number for the "document_frequency" field.</summary>
    public const int DocumentFrequencyFieldNumber = 3;
    private ulong documentFrequency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong DocumentFrequency {
      get { return documentFrequency_; }
      set {
        documentFrequency_ = value;
      }
    }

    /// <summary>Field number for the "postings" field.</summary>
    public const int PostingsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::XiaoyaStore.Model.Posting> _repeated_postings_codec
        = pb::FieldCodec.ForMessage(34, global::XiaoyaStore.Model.Posting.Parser);
    private readonly pbc::RepeatedField<global::XiaoyaStore.Model.Posting> postings_ = new pbc::RepeatedField<global::XiaoyaStore.Model.Posting>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::XiaoyaStore.Model.Posting> Postings {
      get { return postings_; }
    }

    /// <summary>Field number for the "is_add" field.</summary>
    public const int IsAddFieldNumber = 5;
    private bool isAdd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAdd {
      get { return isAdd_; }
      set {
        isAdd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostingList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostingList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Word != other.Word) return false;
      if (WordFrequency != other.WordFrequency) return false;
      if (DocumentFrequency != other.DocumentFrequency) return false;
      if(!postings_.Equals(other.postings_)) return false;
      if (IsAdd != other.IsAdd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Word.Length != 0) hash ^= Word.GetHashCode();
      if (WordFrequency != 0UL) hash ^= WordFrequency.GetHashCode();
      if (DocumentFrequency != 0UL) hash ^= DocumentFrequency.GetHashCode();
      hash ^= postings_.GetHashCode();
      if (IsAdd != false) hash ^= IsAdd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Word.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Word);
      }
      if (WordFrequency != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(WordFrequency);
      }
      if (DocumentFrequency != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(DocumentFrequency);
      }
      postings_.WriteTo(output, _repeated_postings_codec);
      if (IsAdd != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsAdd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Word.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Word);
      }
      if (WordFrequency != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WordFrequency);
      }
      if (DocumentFrequency != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DocumentFrequency);
      }
      size += postings_.CalculateSize(_repeated_postings_codec);
      if (IsAdd != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostingList other) {
      if (other == null) {
        return;
      }
      if (other.Word.Length != 0) {
        Word = other.Word;
      }
      if (other.WordFrequency != 0UL) {
        WordFrequency = other.WordFrequency;
      }
      if (other.DocumentFrequency != 0UL) {
        DocumentFrequency = other.DocumentFrequency;
      }
      postings_.Add(other.postings_);
      if (other.IsAdd != false) {
        IsAdd = other.IsAdd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Word = input.ReadString();
            break;
          }
          case 16: {
            WordFrequency = input.ReadUInt64();
            break;
          }
          case 24: {
            DocumentFrequency = input.ReadUInt64();
            break;
          }
          case 34: {
            postings_.AddEntriesFrom(input, _repeated_postings_codec);
            break;
          }
          case 40: {
            IsAdd = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostingLists : pb::IMessage<PostingLists> {
    private static readonly pb::MessageParser<PostingLists> _parser = new pb::MessageParser<PostingLists>(() => new PostingLists());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostingLists> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XiaoyaStore.Model.ModelsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostingLists() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostingLists(PostingLists other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostingLists Clone() {
      return new PostingLists(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::XiaoyaStore.Model.PostingList> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::XiaoyaStore.Model.PostingList.Parser);
    private readonly pbc::RepeatedField<global::XiaoyaStore.Model.PostingList> items_ = new pbc::RepeatedField<global::XiaoyaStore.Model.PostingList>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::XiaoyaStore.Model.PostingList> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostingLists);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostingLists other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostingLists other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IndexKey : pb::IMessage<IndexKey> {
    private static readonly pb::MessageParser<IndexKey> _parser = new pb::MessageParser<IndexKey>(() => new IndexKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IndexKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XiaoyaStore.Model.ModelsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexKey(IndexKey other) : this() {
      urlFileId_ = other.urlFileId_;
      word_ = other.word_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexKey Clone() {
      return new IndexKey(this);
    }

    /// <summary>Field number for the "url_file_id" field.</summary>
    public const int UrlFileIdFieldNumber = 1;
    private ulong urlFileId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UrlFileId {
      get { return urlFileId_; }
      set {
        urlFileId_ = value;
      }
    }

    /// <summary>Field number for the "word" field.</summary>
    public const int WordFieldNumber = 2;
    private string word_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Word {
      get { return word_; }
      set {
        word_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IndexKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IndexKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UrlFileId != other.UrlFileId) return false;
      if (Word != other.Word) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UrlFileId != 0UL) hash ^= UrlFileId.GetHashCode();
      if (Word.Length != 0) hash ^= Word.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UrlFileId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UrlFileId);
      }
      if (Word.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Word);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UrlFileId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UrlFileId);
      }
      if (Word.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Word);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IndexKey other) {
      if (other == null) {
        return;
      }
      if (other.UrlFileId != 0UL) {
        UrlFileId = other.UrlFileId;
      }
      if (other.Word.Length != 0) {
        Word = other.Word;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UrlFileId = input.ReadUInt64();
            break;
          }
          case 18: {
            Word = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IndexKeys : pb::IMessage<IndexKeys> {
    private static readonly pb::MessageParser<IndexKeys> _parser = new pb::MessageParser<IndexKeys>(() => new IndexKeys());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IndexKeys> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XiaoyaStore.Model.ModelsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexKeys() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexKeys(IndexKeys other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexKeys Clone() {
      return new IndexKeys(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::XiaoyaStore.Model.IndexKey> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::XiaoyaStore.Model.IndexKey.Parser);
    private readonly pbc::RepeatedField<global::XiaoyaStore.Model.IndexKey> items_ = new pbc::RepeatedField<global::XiaoyaStore.Model.IndexKey>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::XiaoyaStore.Model.IndexKey> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IndexKeys);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IndexKeys other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IndexKeys other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Index : pb::IMessage<Index> {
    private static readonly pb::MessageParser<Index> _parser = new pb::MessageParser<Index>(() => new Index());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Index> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XiaoyaStore.Model.ModelsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Index() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Index(Index other) : this() {
      Key = other.key_ != null ? other.Key.Clone() : null;
      url_ = other.url_;
      wordFrequency_ = other.wordFrequency_;
      weight_ = other.weight_;
      occurencesInTitle_ = other.occurencesInTitle_;
      occurencesInLinks_ = other.occurencesInLinks_;
      occurencesInHeaders_ = other.occurencesInHeaders_;
      positions_ = other.positions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Index Clone() {
      return new Index(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::XiaoyaStore.Model.IndexKey key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::XiaoyaStore.Model.IndexKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "word_frequency" field.</summary>
    public const int WordFrequencyFieldNumber = 3;
    private uint wordFrequency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WordFrequency {
      get { return wordFrequency_; }
      set {
        wordFrequency_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 4;
    private double weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    /// <summary>Field number for the "occurences_in_title" field.</summary>
    public const int OccurencesInTitleFieldNumber = 5;
    private uint occurencesInTitle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint OccurencesInTitle {
      get { return occurencesInTitle_; }
      set {
        occurencesInTitle_ = value;
      }
    }

    /// <summary>Field number for the "occurences_in_links" field.</summary>
    public const int OccurencesInLinksFieldNumber = 6;
    private uint occurencesInLinks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint OccurencesInLinks {
      get { return occurencesInLinks_; }
      set {
        occurencesInLinks_ = value;
      }
    }

    /// <summary>Field number for the "occurences_in_headers" field.</summary>
    public const int OccurencesInHeadersFieldNumber = 7;
    private uint occurencesInHeaders_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint OccurencesInHeaders {
      get { return occurencesInHeaders_; }
      set {
        occurencesInHeaders_ = value;
      }
    }

    /// <summary>Field number for the "positions" field.</summary>
    public const int PositionsFieldNumber = 8;
    private static readonly pb::FieldCodec<uint> _repeated_positions_codec
        = pb::FieldCodec.ForUInt32(66);
    private readonly pbc::RepeatedField<uint> positions_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Positions {
      get { return positions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Index);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Index other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (Url != other.Url) return false;
      if (WordFrequency != other.WordFrequency) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Weight, other.Weight)) return false;
      if (OccurencesInTitle != other.OccurencesInTitle) return false;
      if (OccurencesInLinks != other.OccurencesInLinks) return false;
      if (OccurencesInHeaders != other.OccurencesInHeaders) return false;
      if(!positions_.Equals(other.positions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (WordFrequency != 0) hash ^= WordFrequency.GetHashCode();
      if (Weight != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Weight);
      if (OccurencesInTitle != 0) hash ^= OccurencesInTitle.GetHashCode();
      if (OccurencesInLinks != 0) hash ^= OccurencesInLinks.GetHashCode();
      if (OccurencesInHeaders != 0) hash ^= OccurencesInHeaders.GetHashCode();
      hash ^= positions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (WordFrequency != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(WordFrequency);
      }
      if (Weight != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Weight);
      }
      if (OccurencesInTitle != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(OccurencesInTitle);
      }
      if (OccurencesInLinks != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(OccurencesInLinks);
      }
      if (OccurencesInHeaders != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(OccurencesInHeaders);
      }
      positions_.WriteTo(output, _repeated_positions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (WordFrequency != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WordFrequency);
      }
      if (Weight != 0D) {
        size += 1 + 8;
      }
      if (OccurencesInTitle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OccurencesInTitle);
      }
      if (OccurencesInLinks != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OccurencesInLinks);
      }
      if (OccurencesInHeaders != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OccurencesInHeaders);
      }
      size += positions_.CalculateSize(_repeated_positions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Index other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          key_ = new global::XiaoyaStore.Model.IndexKey();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.WordFrequency != 0) {
        WordFrequency = other.WordFrequency;
      }
      if (other.Weight != 0D) {
        Weight = other.Weight;
      }
      if (other.OccurencesInTitle != 0) {
        OccurencesInTitle = other.OccurencesInTitle;
      }
      if (other.OccurencesInLinks != 0) {
        OccurencesInLinks = other.OccurencesInLinks;
      }
      if (other.OccurencesInHeaders != 0) {
        OccurencesInHeaders = other.OccurencesInHeaders;
      }
      positions_.Add(other.positions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              key_ = new global::XiaoyaStore.Model.IndexKey();
            }
            input.ReadMessage(key_);
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 24: {
            WordFrequency = input.ReadUInt32();
            break;
          }
          case 33: {
            Weight = input.ReadDouble();
            break;
          }
          case 40: {
            OccurencesInTitle = input.ReadUInt32();
            break;
          }
          case 48: {
            OccurencesInLinks = input.ReadUInt32();
            break;
          }
          case 56: {
            OccurencesInHeaders = input.ReadUInt32();
            break;
          }
          case 66:
          case 64: {
            positions_.AddEntriesFrom(input, _repeated_positions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UrlFile : pb::IMessage<UrlFile> {
    private static readonly pb::MessageParser<UrlFile> _parser = new pb::MessageParser<UrlFile>(() => new UrlFile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UrlFile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XiaoyaStore.Model.ModelsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UrlFile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UrlFile(UrlFile other) : this() {
      urlFileId_ = other.urlFileId_;
      url_ = other.url_;
      title_ = other.title_;
      filePath_ = other.filePath_;
      fileHash_ = other.fileHash_;
      content_ = other.content_;
      textContent_ = other.textContent_;
      charset_ = other.charset_;
      mimeType_ = other.mimeType_;
      pageRank_ = other.pageRank_;
      inLinkCount_ = other.inLinkCount_;
      inLinkTotalLength_ = other.inLinkTotalLength_;
      headerCount_ = other.headerCount_;
      headerTotalLength_ = other.headerTotalLength_;
      publishDate_ = other.publishDate_;
      updateInterval_ = other.updateInterval_;
      updatedAt_ = other.updatedAt_;
      createdAt_ = other.createdAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UrlFile Clone() {
      return new UrlFile(this);
    }

    /// <summary>Field number for the "url_file_id" field.</summary>
    public const int UrlFileIdFieldNumber = 1;
    private ulong urlFileId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UrlFileId {
      get { return urlFileId_; }
      set {
        urlFileId_ = value;
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file_path" field.</summary>
    public const int FilePathFieldNumber = 4;
    private string filePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FilePath {
      get { return filePath_; }
      set {
        filePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file_hash" field.</summary>
    public const int FileHashFieldNumber = 5;
    private string fileHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileHash {
      get { return fileHash_; }
      set {
        fileHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 6;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text_content" field.</summary>
    public const int TextContentFieldNumber = 7;
    private string textContent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TextContent {
      get { return textContent_; }
      set {
        textContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "charset" field.</summary>
    public const int CharsetFieldNumber = 8;
    private string charset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Charset {
      get { return charset_; }
      set {
        charset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mime_type" field.</summary>
    public const int MimeTypeFieldNumber = 9;
    private string mimeType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MimeType {
      get { return mimeType_; }
      set {
        mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_rank" field.</summary>
    public const int PageRankFieldNumber = 10;
    private double pageRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PageRank {
      get { return pageRank_; }
      set {
        pageRank_ = value;
      }
    }

    /// <summary>Field number for the "in_link_count" field.</summary>
    public const int InLinkCountFieldNumber = 11;
    private uint inLinkCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint InLinkCount {
      get { return inLinkCount_; }
      set {
        inLinkCount_ = value;
      }
    }

    /// <summary>Field number for the "in_link_total_length" field.</summary>
    public const int InLinkTotalLengthFieldNumber = 12;
    private uint inLinkTotalLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint InLinkTotalLength {
      get { return inLinkTotalLength_; }
      set {
        inLinkTotalLength_ = value;
      }
    }

    /// <summary>Field number for the "header_count" field.</summary>
    public const int HeaderCountFieldNumber = 13;
    private uint headerCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint HeaderCount {
      get { return headerCount_; }
      set {
        headerCount_ = value;
      }
    }

    /// <summary>Field number for the "header_total_length" field.</summary>
    public const int HeaderTotalLengthFieldNumber = 14;
    private uint headerTotalLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint HeaderTotalLength {
      get { return headerTotalLength_; }
      set {
        headerTotalLength_ = value;
      }
    }

    /// <summary>Field number for the "publish_date" field.</summary>
    public const int PublishDateFieldNumber = 15;
    private ulong publishDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PublishDate {
      get { return publishDate_; }
      set {
        publishDate_ = value;
      }
    }

    /// <summary>Field number for the "update_interval" field.</summary>
    public const int UpdateIntervalFieldNumber = 16;
    private ulong updateInterval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UpdateInterval {
      get { return updateInterval_; }
      set {
        updateInterval_ = value;
      }
    }

    /// <summary>Field number for the "updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 17;
    private ulong updatedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 18;
    private ulong createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UrlFile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UrlFile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UrlFileId != other.UrlFileId) return false;
      if (Url != other.Url) return false;
      if (Title != other.Title) return false;
      if (FilePath != other.FilePath) return false;
      if (FileHash != other.FileHash) return false;
      if (Content != other.Content) return false;
      if (TextContent != other.TextContent) return false;
      if (Charset != other.Charset) return false;
      if (MimeType != other.MimeType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PageRank, other.PageRank)) return false;
      if (InLinkCount != other.InLinkCount) return false;
      if (InLinkTotalLength != other.InLinkTotalLength) return false;
      if (HeaderCount != other.HeaderCount) return false;
      if (HeaderTotalLength != other.HeaderTotalLength) return false;
      if (PublishDate != other.PublishDate) return false;
      if (UpdateInterval != other.UpdateInterval) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      if (CreatedAt != other.CreatedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UrlFileId != 0UL) hash ^= UrlFileId.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (FilePath.Length != 0) hash ^= FilePath.GetHashCode();
      if (FileHash.Length != 0) hash ^= FileHash.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (TextContent.Length != 0) hash ^= TextContent.GetHashCode();
      if (Charset.Length != 0) hash ^= Charset.GetHashCode();
      if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
      if (PageRank != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PageRank);
      if (InLinkCount != 0) hash ^= InLinkCount.GetHashCode();
      if (InLinkTotalLength != 0) hash ^= InLinkTotalLength.GetHashCode();
      if (HeaderCount != 0) hash ^= HeaderCount.GetHashCode();
      if (HeaderTotalLength != 0) hash ^= HeaderTotalLength.GetHashCode();
      if (PublishDate != 0UL) hash ^= PublishDate.GetHashCode();
      if (UpdateInterval != 0UL) hash ^= UpdateInterval.GetHashCode();
      if (UpdatedAt != 0UL) hash ^= UpdatedAt.GetHashCode();
      if (CreatedAt != 0UL) hash ^= CreatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UrlFileId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UrlFileId);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (FilePath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FilePath);
      }
      if (FileHash.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FileHash);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Content);
      }
      if (TextContent.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TextContent);
      }
      if (Charset.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Charset);
      }
      if (MimeType.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MimeType);
      }
      if (PageRank != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(PageRank);
      }
      if (InLinkCount != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(InLinkCount);
      }
      if (InLinkTotalLength != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(InLinkTotalLength);
      }
      if (HeaderCount != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(HeaderCount);
      }
      if (HeaderTotalLength != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(HeaderTotalLength);
      }
      if (PublishDate != 0UL) {
        output.WriteRawTag(120);
        output.WriteUInt64(PublishDate);
      }
      if (UpdateInterval != 0UL) {
        output.WriteRawTag(128, 1);
        output.WriteUInt64(UpdateInterval);
      }
      if (UpdatedAt != 0UL) {
        output.WriteRawTag(136, 1);
        output.WriteUInt64(UpdatedAt);
      }
      if (CreatedAt != 0UL) {
        output.WriteRawTag(144, 1);
        output.WriteUInt64(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UrlFileId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UrlFileId);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (FilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilePath);
      }
      if (FileHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileHash);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (TextContent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextContent);
      }
      if (Charset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Charset);
      }
      if (MimeType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
      }
      if (PageRank != 0D) {
        size += 1 + 8;
      }
      if (InLinkCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InLinkCount);
      }
      if (InLinkTotalLength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InLinkTotalLength);
      }
      if (HeaderCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HeaderCount);
      }
      if (HeaderTotalLength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HeaderTotalLength);
      }
      if (PublishDate != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PublishDate);
      }
      if (UpdateInterval != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(UpdateInterval);
      }
      if (UpdatedAt != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(UpdatedAt);
      }
      if (CreatedAt != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(CreatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UrlFile other) {
      if (other == null) {
        return;
      }
      if (other.UrlFileId != 0UL) {
        UrlFileId = other.UrlFileId;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.FilePath.Length != 0) {
        FilePath = other.FilePath;
      }
      if (other.FileHash.Length != 0) {
        FileHash = other.FileHash;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.TextContent.Length != 0) {
        TextContent = other.TextContent;
      }
      if (other.Charset.Length != 0) {
        Charset = other.Charset;
      }
      if (other.MimeType.Length != 0) {
        MimeType = other.MimeType;
      }
      if (other.PageRank != 0D) {
        PageRank = other.PageRank;
      }
      if (other.InLinkCount != 0) {
        InLinkCount = other.InLinkCount;
      }
      if (other.InLinkTotalLength != 0) {
        InLinkTotalLength = other.InLinkTotalLength;
      }
      if (other.HeaderCount != 0) {
        HeaderCount = other.HeaderCount;
      }
      if (other.HeaderTotalLength != 0) {
        HeaderTotalLength = other.HeaderTotalLength;
      }
      if (other.PublishDate != 0UL) {
        PublishDate = other.PublishDate;
      }
      if (other.UpdateInterval != 0UL) {
        UpdateInterval = other.UpdateInterval;
      }
      if (other.UpdatedAt != 0UL) {
        UpdatedAt = other.UpdatedAt;
      }
      if (other.CreatedAt != 0UL) {
        CreatedAt = other.CreatedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UrlFileId = input.ReadUInt64();
            break;
          }
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            FilePath = input.ReadString();
            break;
          }
          case 42: {
            FileHash = input.ReadString();
            break;
          }
          case 50: {
            Content = input.ReadString();
            break;
          }
          case 58: {
            TextContent = input.ReadString();
            break;
          }
          case 66: {
            Charset = input.ReadString();
            break;
          }
          case 74: {
            MimeType = input.ReadString();
            break;
          }
          case 81: {
            PageRank = input.ReadDouble();
            break;
          }
          case 88: {
            InLinkCount = input.ReadUInt32();
            break;
          }
          case 96: {
            InLinkTotalLength = input.ReadUInt32();
            break;
          }
          case 104: {
            HeaderCount = input.ReadUInt32();
            break;
          }
          case 112: {
            HeaderTotalLength = input.ReadUInt32();
            break;
          }
          case 120: {
            PublishDate = input.ReadUInt64();
            break;
          }
          case 128: {
            UpdateInterval = input.ReadUInt64();
            break;
          }
          case 136: {
            UpdatedAt = input.ReadUInt64();
            break;
          }
          case 144: {
            CreatedAt = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Link : pb::IMessage<Link> {
    private static readonly pb::MessageParser<Link> _parser = new pb::MessageParser<Link>(() => new Link());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Link> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XiaoyaStore.Model.ModelsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Link() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Link(Link other) : this() {
      urlFileId_ = other.urlFileId_;
      url_ = other.url_;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Link Clone() {
      return new Link(this);
    }

    /// <summary>Field number for the "url_file_id" field.</summary>
    public const int UrlFileIdFieldNumber = 2;
    private ulong urlFileId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UrlFileId {
      get { return urlFileId_; }
      set {
        urlFileId_ = value;
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 3;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 4;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Link);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Link other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UrlFileId != other.UrlFileId) return false;
      if (Url != other.Url) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UrlFileId != 0UL) hash ^= UrlFileId.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UrlFileId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(UrlFileId);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Url);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UrlFileId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UrlFileId);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Link other) {
      if (other == null) {
        return;
      }
      if (other.UrlFileId != 0UL) {
        UrlFileId = other.UrlFileId;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            UrlFileId = input.ReadUInt64();
            break;
          }
          case 26: {
            Url = input.ReadString();
            break;
          }
          case 34: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Links : pb::IMessage<Links> {
    private static readonly pb::MessageParser<Links> _parser = new pb::MessageParser<Links>(() => new Links());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Links> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XiaoyaStore.Model.ModelsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Links() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Links(Links other) : this() {
      items_ = other.items_.Clone();
      isAdd_ = other.isAdd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Links Clone() {
      return new Links(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::XiaoyaStore.Model.Link> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::XiaoyaStore.Model.Link.Parser);
    private readonly pbc::RepeatedField<global::XiaoyaStore.Model.Link> items_ = new pbc::RepeatedField<global::XiaoyaStore.Model.Link>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::XiaoyaStore.Model.Link> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "is_add" field.</summary>
    public const int IsAddFieldNumber = 2;
    private bool isAdd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAdd {
      get { return isAdd_; }
      set {
        isAdd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Links);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Links other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      if (IsAdd != other.IsAdd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (IsAdd != false) hash ^= IsAdd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (IsAdd != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAdd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (IsAdd != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Links other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      if (other.IsAdd != false) {
        IsAdd = other.IsAdd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 16: {
            IsAdd = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IdList : pb::IMessage<IdList> {
    private static readonly pb::MessageParser<IdList> _parser = new pb::MessageParser<IdList>(() => new IdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XiaoyaStore.Model.ModelsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdList(IdList other) : this() {
      ids_ = other.ids_.Clone();
      isAdd_ = other.isAdd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdList Clone() {
      return new IdList(this);
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_ids_codec
        = pb::FieldCodec.ForUInt64(10);
    private readonly pbc::RepeatedField<ulong> ids_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> Ids {
      get { return ids_; }
    }

    /// <summary>Field number for the "is_add" field.</summary>
    public const int IsAddFieldNumber = 2;
    private bool isAdd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAdd {
      get { return isAdd_; }
      set {
        isAdd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      if (IsAdd != other.IsAdd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      if (IsAdd != false) hash ^= IsAdd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ids_.WriteTo(output, _repeated_ids_codec);
      if (IsAdd != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAdd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (IsAdd != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IdList other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      if (other.IsAdd != false) {
        IsAdd = other.IsAdd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
          case 16: {
            IsAdd = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
